{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///vue-c3js.js","webpack:///webpack/bootstrap 31839cee7cdf8dad39e8","webpack:///./src/components/VueC3Line.js","webpack:///./src/components/VueC3Spline.js","webpack:///./src/mixins/VueC3Element.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./src/components/VueC3Chart.vue","webpack:///./package.json","webpack:///VueC3Chart.vue","webpack:///./src/index.js","webpack:///./~/c3/c3.js","webpack:///./~/c3/c3.min.css","webpack:///./src/components/VueC3Chart.vue?cce7","webpack:///./~/d3/d3.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/components/VueC3Chart.vue?da69","webpack:///./src/components/VueC3Chart.vue?a211","webpack:///./~/vue-loader/~/vue-style-loader/lib/addStylesClient.js","webpack:///./~/vue-loader/~/vue-style-loader/lib/listToStyles.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_VueC3Element","_VueC3Element2","obj","default","mixins","props","connectNull","stepType","data","type","mounted","methods","computed","filters","watch","replace","id","String","prop","color","customClass","$parent","$emit","options","optionExists","option","undefined","_options","list","toString","result","length","item","push","join","mediaQuery","alreadyImportedModules","injectStyle","ssrContext","Component","version","description","main","scripts","test","dev:hot","example","build","repository","url","author","license","bugs","homepage","dependencies","c3","vue","devDependencies","babel-core","babel-loader","babel-preset-env","cross-env","css-loader","file-loader","vue-loader","vue-template-compiler","webpack","webpack-dev-server","_interopRequireDefault","_VueC3Line","_VueC3Line2","_VueC3Spline","_VueC3Spline2","components","VueC3Line","VueC3Spline","required","chartData","Array","width","Number","height","paddingTop","paddingRight","paddingBottom","paddingLeft","colorPattern","interactionEnabled","Boolean","transitionDuration","labels","axisRotated","showXAxis","showYAxis","axisXTickCentered","axisXTickCount","axisXTickFit","axisXTickRotate","axisXTickOuter","axisXTickMax","axisXTickMin","showGridX","showGridY","showLegend","legendPosition","showTooltip","tooltipGrouped","tooltipFormattedTitle","showSubchart","subchartHeight","zoomEnabled","zoomRescale","zoomExtent","showPoint","pointRadius","pointFocusExpandEnabled","pointFocusExpandRadius","pointFocusSelectRadius","isReady","isLoading","bindTo","columns","names","classes","label","types","colors","created","$on","chart","generate","document","getElementById","chartdata","propExists","mergeObjects","src","keys","forEach","key","refresh","load","chartOptions","_chartOptions","size","padding","interaction","transition","top","right","bottom","left","pattern","enabled","duration","dataOptions","_dataOptions","axisOptions","_axisOptions","x","tick","y","rotated","show","centered","gridOptions","_gridOptions","legendOptions","_legendOptions","position","tooltipOptions","_tooltipOptions","format","grouped","that","title","subchartOptions","_subchartOptions","zoomOptions","_zoomOptions","rescale","extent","pointOptions","_pointOptions","focus","expand","select","r","chartCallbacks","oninit","onrendered","onmouseover","onmouseout","onresize","onresized","dataCallbacks","onclick","element","bindto","axis","grid","legend","tooltip","point","subchart","zoom","serializedChartData","JSON","stringify","round","str","parseFloat","toFixed","data.columns","newVal","oldVal","$","setTimeout","_VueC3Chart","_VueC3Chart2","_package","_package2","install","Vue","arguments","installed","map","component","VueC3Charts","VueC3Chart","global","c3_axis","d3","params","axisX","selection","attr","Math","ceil","tickOffset","axisY","scaleExtent","domain","start","stop","generateTicks","scale","ticks","apply","tickArguments","unshift","copyScale","newScale","copy","isCategory","textFormatted","v","formatted","tickFormat","getSizeFor1Char","tickTextCharSize","h","w","text","each","box","getBoundingClientRect","transitionise","withoutTransition","g","splitTickText","maxWidth","split","splitted","spaceIndex","charAt","subtext","substr","textWidth","sizeFor1Char","concat","slice","tickText","isVertical","scale1","tspanDy","dy","orient","counts","index","tickSize","tickPosition","tickCentered","range","innerTickSize","tickTransform","tickX","tickY","scale0","__chart__","tickValues","selectAll","tickEnter","enter","insert","style","tickExit","exit","remove","tickUpdate","rangeExtent","path","pathUpdate","append","lineEnter","lineUpdate","textEnter","textUpdate","tspan","tickLength","max","tickPadding","tickMultiline","tickWidth","rotate","tickTextRotate","sin","PI","outerTickSize","rangeBand","dx","linear","tickCulling","withOuterTick","isCentered","tickInterval","interval","node","getTotalLength","Infinity","culling","Axis","owner","API","Chart","config","$$","internal","ChartInternal","loadConfig","beforeInit","init","afterInit","bindThis","fn","target","argThis","bind","c3_chart_fn","api","window","getDefaultConfig","cache","axes","CLASS","chartLine","chartLines","chartBar","chartBars","chartText","chartTexts","chartArc","chartArcs","chartArcsTitle","chartArcsBackground","chartArcsGaugeUnit","chartArcsGaugeMax","chartArcsGaugeMin","selectedCircle","selectedCircles","eventRect","eventRects","eventRectsSingle","eventRectsMultiple","zoomRect","brush","focused","defocused","region","regions","tooltipContainer","tooltipName","shape","shapes","line","lines","bar","bars","circle","circles","arc","arcs","area","areas","empty","texts","gaugeValue","gridLines","xgrid","xgrids","xgridLine","xgridLines","xgridFocus","ygrid","ygrids","ygridLine","ygridLines","axisXLabel","axisYLabel","axisY2","axisY2Label","legendBackground","legendItem","legendItemEvent","legendItemTile","legendItemHidden","legendItemFocused","dragarea","EXPANDED","SELECTED","INCLUDED","_typeof","Symbol","iterator","constructor","isValue","isFunction","isArray","isString","isUndefined","isDefined","ceil10","asHalfPixel","diffDomain","isEmpty","notEmpty","c3_chart_internal_fn","getOption","defaultValue","hasValue","dict","found","sanitise","getPathBox","items","pathSegList","getItem","min","base","derived","create","f","clipPathForXAxis","getTranslate","axis_x_show","axis_rotated","textAnchorForXAxisLabel","axis_y_inner","clipPathForYAxis","axis_y_show","textAnchorForYAxisLabel","y2","axis_y2_show","textAnchorForY2AxisLabel","getXAxis","withoutRotateTickText","axisParams","isCategorized","axis_x_tick_multiline","axis_x_tick_width","axis_x_tick_rotate","isTimeSeries","parseDate","axis_x_tick_centered","axis_x_tick_culling","updateXAxisTickValues","targets","axis_x_tick_fit","axis_x_tick_count","generateTickValues","mapTargetsToUniqueXs","xAxis","subXAxis","getYAxis","axis_y_tick_rotate","isTimeSeriesY","time","axis_y_tick_time_value","axis_y_tick_time_interval","getId","data_axes","getXAxisTickFormat","defaultAxisTimeFormat","categoryName","axis_x_tick_format","date","axisTimeFormat","getTickValues","getXAxisTickValues","axis_x_tick_values","getYAxisTickValues","axis_y_tick_values","yAxis","getY2AxisTickValues","axis_y2_tick_values","y2Axis","getLabelOptionByAxisId","axisId","axis_y_label","axis_y2_label","axis_x_label","getLabelText","setLabelText","getLabelPosition","defaultPosition","isInner","indexOf","isOuter","isLeft","isCenter","isRight","isTop","isMiddle","isBottom","getXAxisLabelPosition","getYAxisLabelPosition","getY2AxisLabelPosition","getLabelPositionById","textForXAxisLabel","textForYAxisLabel","textForY2AxisLabel","xForAxisLabel","forHorizontal","dxForAxisLabel","textAnchorForAxisLabel","xForXAxisLabel","xForYAxisLabel","xForY2AxisLabel","dxForXAxisLabel","dxForYAxisLabel","dxForY2AxisLabel","dyForXAxisLabel","getMaxTickWidth","axis_x_height","dyForYAxisLabel","dyForY2AxisLabel","axis_y2_inner","withoutRecompute","targetsToShow","dummy","svg","currentMaxTickWidths","filterTargetsToShow","getYDomain","yOrient","axis_y_tick_format","yAxisTickValues","y2Orient","axis_y2_tick_format","y2AxisTickValues","getXDomain","xOrient","xAxisTickFormat","xAxisTickValues","classed","updateLabels","withTransition","getPadding","domainLength","unit","convertPixelsToAxisPadding","pixels","values","tickCount","forTimeSeries","targetCount","end","count","tickValue","Date","sort","a","b","generateTransitions","axisSubX","subx","redraw","transitions","isHidden","c3$1","initParams","data_url","convertUrlToData","data_mimeType","data_headers","data_keys","initWithData","data_json","convertJsonToData","data_rows","convertRowsToData","data_columns","Error","convertColumnsToData","clipId","clipIdForXAxis","clipIdForYAxis","clipIdForGrid","clipIdForSubchart","clipPath","getClipPath","clipPathForGrid","clipPathForSubchart","dragStart","dragging","flowing","cancelClick","mouseover","transiting","generateColor","levelColor","generateLevelColor","dataTimeFormat","data_xLocaltime","utc","axis_x_localtime","multi","getMilliseconds","getSeconds","getMinutes","getHours","getDay","getDate","getMonth","hiddenTargetIds","hiddenLegendIds","focusedTargetIds","defocusedTargetIds","subXOrient","isLegendRight","legend_position","isLegendInset","isLegendTop","legend_inset_anchor","isLegendLeft","legendStep","legendItemWidth","legendItemHeight","rotated_padding_left","rotated_padding_right","rotated_padding_top","withoutFadeIn","intervalForObserveInserted","initChartElements","initBar","initLine","initArc","initGauge","initText","defs","binding","initPie","initBrush","initZoom","selectChart","createElement","observeInserted","html","xs","convertDataToTargets","data_filter","filter","data_hide","addHiddenTargetIds","mapToIds","legend_hide","addHiddenLegendIds","hasType","legend_show","updateSizes","updateScales","subX","subY","subY2","orgXDomain","zoom_enabled","on","svg_classname","clipChart","appendClip","clipXAxis","clipYAxis","clipGrid","clipSubchart","updateSvgSize","initSubchart","initTooltip","initLegend","initTitle","initRegion","initGrid","grid_lines_front","initGridLines","initEventRect","zoom_privileged","axis_x_extent","getDefaultExtent","updateTargets","updateDimension","withTransform","withUpdateXDomain","withUpdateOrgXDomain","withTransitionForAxis","bindResize","smoothLines","el","x1","x2","y1","legendHeight","getLegendHeight","legendWidth","getLegendWidth","legendHeightForBottom","hasArc","hasArcType","xAxisHeight","getHorizontalAxisHeight","subchart_show","subchart_size_height","currentWidth","getCurrentWidth","currentHeight","getCurrentHeight","margin","getCurrentPaddingTop","getCurrentPaddingRight","getCurrentPaddingBottom","getCurrentPaddingLeft","margin2","NaN","margin3","updateSizeForLegend","width2","height2","arcWidth","arcHeight","gauge_fullCircle","getGaugeLabelHeight","updateRadius","radiusExpanded","updateTargetsForText","updateTargetsForBar","updateTargetsForLine","updateTargetsForArc","updateTargetsForSubchart","showTargets","isTargetToShow","transition_duration","withY","withSubchart","withTransitionForExit","withTrimXDomain","withLegend","withEventRect","withDimension","withUpdateXAxis","drawArea","drawBar","drawLine","xForText","yForText","durationForExit","durationForAxis","waitForDraw","flow","intervalForCulling","xDomainForZoom","cx","cy","areaIndices","getShapeIndices","isAreaType","barIndices","isBarType","lineIndices","isLineType","hideAxis","xv","updateLegend","updateXDomain","zoom_rescale","orgDomain","axis_y_tick_count","axis_y2_tick_count","axis_x_tick_culling_max","e","generateDrawArea","generateDrawBar","generateDrawLine","generateXYForText","updateXgridFocus","data_empty_label_text","updateGrid","updateRegion","updateBar","updateLine","updateArea","updateCircle","hasDataLabel","updateText","redrawTitle","redrawArc","redrawSubchart","interaction_enabled","redrawEventRect","updateZoom","updateCircleY","circleY","circleX","generateFlow","isTabVisible","transitionsToWait","redrawBar","redrawLine","redrawArea","redrawCircle","redrawText","redrawRegion","redrawGrid","generateWait","t","add","updateAndRedraw","withTransitionForTransform","transformAll","redrawWithoutRescale","axis_x_type","isCustomX","data_x","data_xs","axis_y_type","initialOpacity","initialOpacityForCircle","opacityForCircle","isPointShouldBeShown","point_show","opacity","isScatterType","opacityForText","xx","axis_x_categories","yv","yScale","subxx","transformMain","transformContext","transformLegend","getXAxisClipX","getXAxisClipY","getXAxisClipWidth","getXAxisClipHeight","getYAxisClipX","getYAxisClipY","getYAxisClipWidth","getYAxisClipHeight","withoutAxis","observer","MutationObserver","console","error","mutations","mutation","previousSibling","disconnect","setInterval","parentNode","clearInterval","update","observe","attributes","childList","characterData","resizeFunction","generateResize","resize_auto","resizeTimeout","clearTimeout","flush","attachEvent","addEventListener","wrapper","callResizeFunctions","resizeFunctions","splice","endall","callback","timer","done","parsedDate","data_xFormat","parse","isNaN","hidden","mozHidden","msHidden","webkitHidden","Function","oThis","TypeError","aArgs","fToBind","fNOP","fBound","SVGPathSeg","typeAsLetter","owningPathSegList","pathSegType","pathSegTypeAsLetter","_owningPathSegList","classname","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","PATHSEG_MOVETO_ABS","PATHSEG_MOVETO_REL","PATHSEG_LINETO_ABS","PATHSEG_LINETO_REL","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_ABS","PATHSEG_ARC_REL","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","_segmentChanged","segmentChanged","SVGPathSegClosePath","_asPathString","clone","SVGPathSegMovetoAbs","_x","_y","set","SVGPathSegMovetoRel","SVGPathSegLinetoAbs","SVGPathSegLinetoRel","SVGPathSegCurvetoCubicAbs","_x1","_y1","_x2","_y2","SVGPathSegCurvetoCubicRel","SVGPathSegCurvetoQuadraticAbs","SVGPathSegCurvetoQuadraticRel","SVGPathSegArcAbs","r1","r2","angle","largeArcFlag","sweepFlag","_r1","_r2","_angle","_largeArcFlag","_sweepFlag","SVGPathSegArcRel","SVGPathSegLinetoHorizontalAbs","SVGPathSegLinetoHorizontalRel","SVGPathSegLinetoVerticalAbs","SVGPathSegLinetoVerticalRel","SVGPathSegCurvetoCubicSmoothAbs","SVGPathSegCurvetoCubicSmoothRel","SVGPathSegCurvetoQuadraticSmoothAbs","SVGPathSegCurvetoQuadraticSmoothRel","SVGPathElement","createSVGPathSegClosePath","createSVGPathSegMovetoAbs","createSVGPathSegMovetoRel","createSVGPathSegLinetoAbs","createSVGPathSegLinetoRel","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicRel","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticRel","createSVGPathSegArcAbs","createSVGPathSegArcRel","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoHorizontalRel","createSVGPathSegLinetoVerticalAbs","createSVGPathSegLinetoVerticalRel","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoCubicSmoothRel","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegCurvetoQuadraticSmoothRel","getPathSegAtLength","distance","isFinite","measurementElement","createElementNS","setAttribute","getAttribute","lastPathSegment","numberOfItems","removeItem","SVGPathSegList","pathElement","_pathElement","_list","_parsePath","_mutationObserverConfig","attributeFilter","_pathElementMutationObserver","_updateListFromPathMutations","_checkPathSynchronizedToList","_pathSegList","takeRecords","mutationRecords","hasPathMutations","record","attributeName","_writeListToPath","_pathSegArrayAsString","pathSeg","clear","initialize","newItem","_checkValidIndex","insertItemBefore","replaceItem","appendItem","pathSegArray","string","first","Builder","appendSegment","Source","_string","_currentIndex","_endIndex","_previousCommand","_skipOptionalSpaces","_isCurrentSpace","character","_skipOptionalSpacesOrDelimiter","hasMoreData","peekSegmentType","lookahead","_pathSegTypeFromChar","_nextCommandHelper","previousCommand","initialCommandIsMoveTo","command","_parseNumber","exponent","integer","frac","decimal","sign","expsign","startIndex","startIntPartIndex","scanIntPartIndex","multiplier","number","pow","_parseArcFlag","flag","flagChar","parseSegment","points","arcAngle","arcLarge","arcSweep","builder","source","axis_x_max","axis_y_max","axis_y2_max","axis_x_min","axis_y_min","axis_y2_min","category","categories","resize","size_width","size_height","destroy","detachEvent","removeEventListener","targetIds","shown","targetId","clearLegendItemTextBoxCache","updateDataAttributes","args","baseTarget","baseValue","diff","to","notfoundIds","orgDataCount","getMaxDataCount","tail","json","rows","j","getOtherTargetX","missing","translateX","transform","scaleX","flowIndex","flowLength","flowStart","getValueOnIndex","flowEnd","durationForFlow","wait","mainRegion","mainText","mainBar","mainLine","mainArea","mainCircle","updateXGrid","hideXGridFocus","ease","isRegionOnX","xgridAttr","regionX","regionWidth","candidates","mapToTargetIds","selectorTargets","revert","defocus","expandArc","toggleFocusLegend","unexpandArc","isLegendToShow","selectorLegends","grids","grid_x_lines","removeGridLines","grid_y_lines","groups","data_groups","hide","hideLegend","addXs","data_classes","data_colors","hasCaches","cacheIds","getCaches","unload","loadFromArgs","ids","selected","merge","getTargetSelectorSuffix","__data__","indices","resetOther","data_selection_enabled","toggle","getToggle","isTargetId","data_selection_grouped","isTargetIndex","isSelected","data_selection_isselectable","unselect","removeHiddenTargetIds","mouse","isMultipleX","getYScale","getIndexByX","dispatchEvent","tooltip_onshow","tooltip_onhide","transformTo","optionsForRedraw","setTargetType","updateTargetX","updateTargetXs","zoom_onzoom","enable","unzoom","zoom_x_max","zoom_x_min","pie","layout","reduce","data_order","gauge_width","donut_width","radius","innerRadiusRatio","innerRadius","updateArc","svgArc","getSvgArc","svgArcExpanded","getSvgArcExpanded","svgArcExpandedSub","updateAngle","gMin","gMax","gTic","gValue","startAngle","endAngle","isGaugeType","gauge_min","gauge_max","gauge_startingAngle","outerRadius","newArc","withoutUpdate","updated","centroid","rate","getArc","force","isArcType","transformForArcLabel","ratio","translate","sqrt","donut_label_ratio","pie_label_ratio","getArcRatio","whole","convertToArcData","addName","textForArcLabel","shouldShowArcLabel","meetsArcLabelThreshold","getArcLabelFormat","defaultArcValueFormat","textForGaugeMinMax","isMax","getGaugeLabelExtents","shouldExpand","expandDuration","isDonutType","donut_expand_duration","gauge_expand_duration","isPieType","pie_expand_duration","donut_expand","gauge_expand","pie_expand","shouldShow","donut_label_show","pie_label_show","donut_label_threshold","pie_label_threshold","pie_label_format","gauge_label_format","donut_label_format","gauge_label_extents","getArcTitle","donut_title","mainPieUpdate","mainPieEnter","classChartArc","classArcs","classFocus","mainArc","arcData","classArc","_current","data_onmouseover","selectedData","revertLegend","hideTooltip","data_onmouseout","toggleShape","data_onclick","attrTween","interpolate","interpolated","gauge_label_show","gauge_units","addCache","cloneTarget","generateClass","prefix","classText","classTexts","classShape","classShapes","classLine","classLines","classCircle","classCircles","classBar","classBars","classArea","classAreas","classRegion","classEvent","classTarget","additionalClassSuffix","additionalClass","classFocused","classDefocused","classChartText","classChartLine","classChartBar","selectorTarget","selectorLegend","navigator","appVersion","toLowerCase","URL","parent","getAxisClipX","getAxisClipY","getAxisClipWidth","getAxisClipHeight","color_pattern","category10","data_color","threshold","color_threshold","asValue","padding_left","padding_right","padding_top","padding_bottom","zoom_extent","zoom_onzoomstart","zoom_onzoomend","interaction_brighten","data_xSort","data_idConverter","data_names","data_type","data_types","data_labels","data_regions","data_selection_multiple","data_selection_draggable","data_onselected","data_onunselected","subchart_axis_x_show","subchart_onbrush","legend_inset_x","legend_inset_y","legend_inset_step","legend_item_onclick","legend_item_onmouseover","legend_item_onmouseout","legend_equally","legend_padding","legend_item_tile_width","legend_item_tile_height","axis_x_tick_outer","axis_x_padding","axis_y_inverted","axis_y_center","axis_y_tick_outer","axis_y_padding","axis_y_default","axis_y2_inverted","axis_y2_center","axis_y2_tick_outer","axis_y2_padding","axis_y2_default","grid_x_show","grid_x_type","grid_y_show","grid_y_ticks","grid_focus_show","point_r","point_sensitivity","point_focus_expand_enabled","point_focus_expand_r","point_select_r","line_connectNull","line_step_type","bar_width","bar_width_ratio","bar_width_max","bar_zerobased","area_zerobased","area_above","spline_interpolation_type","tooltip_show","tooltip_grouped","tooltip_order","tooltip_format_title","tooltip_format_name","tooltip_format_value","tooltip_position","tooltip_contents","defaultTitleFormat","defaultValueFormat","getTooltipContent","tooltip_init_show","tooltip_init_x","tooltip_init_position","title_text","title_padding","title_position","additionalConfig","find","shift","read","this_config","mimeType","headers","req","xhr","header","dataResponse","response","responseText","responseURL","status","statusText","convertTsvToData","convertCsvToData","convertXsvToData","xsv","parser","parseRows","csv","tsv","targetKeys","new_rows","new_row","findValueInJson","pathArray","k","newRows","newRow","appendXs","isNotX","isX","xKey","getXKey","rawX","generateTargetX","getOtherTargetXs","getXValuesOfXKey","convertedId","id_org","v1","v2","hasNegativeValue","hasNegativeValueInTargets","hasPositiveValue","hasPositiveValueInTargets","xValues","filterByX","getXValue","idsForX","hasMultipleX","valueOnIndex","updateXs","getPrevX","getNextX","getMaxDataCountTarget","maxTarget","getEdgeX","hasTarget","removeHiddenLegendIds","getValuesAsIdKeyed","ys","checkValueInTargets","checker","isOrderDesc","isOrderAsc","orderTargets","orderAsc","orderDesc","t1","t2","reducer","abs","t1Sum","t2Sum","filterRemoveNull","filterByXDomain","xDomain","getDataLabelLength","lengths","dataLabelFormat","isNoneArc","isArc","findSameXOfValues","targetX","sames","findClosestFromTargets","pos","findClosest","closest","minDist","isWithinBar","dist","xIndex","yIndex","convertValuesToStep","converted","attrs","current","getYDomainMin","baseId","idsInGroup","getYDomainMax","yDomainAbs","isAllPositive","isAllNegative","targetsByAxisId","yTargets","yMin","yMax","yDomainMin","yDomainMax","center","isZeroBased","isInverted","showHorizontalDataLabel","showVerticalDataLabel","reverse","getXDomainMin","getXDomainMax","getXDomainPadding","maxDataCount","firstX","lastX","getTime","withTrim","updateScaleExtent","trimXDomain","zoomDomain","getZoomDomain","drag","sx","sy","mx","my","minX","maxX","minY","maxY","altDomain","_w","_h","isIncluded","isWithin","togglePoint","togglePath","dragstart","dragend","getYFormat","forArc","formatForY","yFormat","formatForY2","y2Format","defaultFormat","xgridData","generateGridData","updateYGrid","gridValues","gridTextAnchor","gridTextDx","xGridTextX","yGridTextX","showXGridFocus","dataToShow","focusEl","firstYear","lastYear","gridData","tickNum","getFullYear","getGridFilterToRemove","param","forX","toRemove","toShow","eventRectUpdate","maxDataCountTarget","generateEventRectsForMultipleXs","updateEventRect","datum","generateEventRectsForSingleX","rectW","rectX","getEventRectWidth","prevX","nextX","thisX","eventRectEnter","expandCircles","expandBars","unexpandCircles","unexpandBars","isStepType","isWithinShape","behavior","origin","mouseout","sameXData","selector","event","createEvent","initMouseEvent","legendItemTextBox","legendHasRendered","updateLegendWithDefaults","insetLegendPosition","updateLegendStep","step","updateLegendItemWidth","updateLegendItemHeight","opacityForLegend","opacityForUnfocusedLegend","getTextBox","textElement","getTextRect","textContent","updatePositions","updateValues","withoutStep","areaLength","totalLength","itemLength","posMin","steps","margins","offsets","maxLength","reset","isLast","itemWidth","tileWidth","itemHeight","maxHeight","widths","heights","xForLegend","xForLegendText","xForLegendRect","yForLegend","yForLegendText","yForLegendRect","x1ForLegendTile","x2ForLegendTile","yForLegendTile","rects","tiles","background","altKey","parentData","regionY","regionHeight","getScale","forTimeseries","getX","offset","_scale","raw","getY","getSubYScale","forInit","xMin","xMax","subXMin","subXMax","subYMin","subYMax","selectPoint","pointSelectR","unselectPoint","selectPath","rgb","brighter","unselectPath","nodeName","mainBarUpdate","mainBarEnter","barData","random","getBarW","barTargetsNum","getBars","isSub","getPoints","generateGetBarPoints","indexX","indexY","__max__","barW","barX","getShapeX","barY","getShapeY","barOffset","getShapeOffset","y0","posX","posY","seg0","seg1","ex","ey","typeFilter","targetsNum","isWithinStep","isWithinCircle","getInterpolate","interpolation","isInterpolationType","isSplineType","mainLineUpdate","mainLineEnter","lineData","generateGetLinePoints","yScaleGetter","xValue","yValue","defined","x0","lineWithRegions","lineTargetsNum","lineOffset","_regions","generateM","sWithRegion","xp","yp","dd","diffx2","xOffset","d0","d1","x_diff","xv0","xv1","orgAreaOpacity","generateGetAreaPoints","value0","getAreaBaseValue","value1","areaTargetsNum","areaOffset","lineOrScatterData","pointR","getCircles","pointExpandedR","d3_this","getParentWidth","getParentHeight","getTitlePadding","getAxisWidthByAxisId","legendWidthOnRight","getParentRectValue","tagName","offsetWidth","getSvgLeft","hasLeftAxisRect","leftAxisClass","leftAxis","svgRect","chartRect","svgLeft","cos","redrawForBrush","context","visibility","contextLineEnter","contextLineUpdate","contextBarEnter","contextBarUpdate","updateBarForSubchart","contextBar","redrawBarForSubchart","drawBarOnSub","updateLineForSubchart","contextLine","redrawLineForSubchart","drawLineOnSub","updateAreaForSubchart","contextArea","redrawAreaForSubchart","drawAreaOnSub","mainTextUpdate","mainTextEnter","barOrLineData","forFlow","cls","rect","font","getAreaPoints","getBarPoints","getLinePoints","getXForText","getYForText","xPos","yPos","isSafari","isChrome","xForTitle","yForTitle","getTooltipSortFunction","order","valueOf","sortFunction","bgcolor","titleFormat","nameFormat","valueFormat","tooltipSortFunction","tooltipPosition","tWidth","tHeight","tooltipLeft","tooltipRight","tooltipTop","chartRight","positionFunction","has","ua","userAgent","startEvent","sourceEvent","redrawForZoom","clientX","clientY","orgScaleExtent","z","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","d3_number","d3_numeric","d3_bisector","compare","lo","hi","mid","d3_transposeLength","d3_range_integerScale","d3_class","ctor","properties","d3_Map","_","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","d3_vendorSymbol","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","d3_subclass","d3_selectionPrototype","d3_selection_selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","d3_selection_classedRe","RegExp","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","lastIndex","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createNS","d3_selectionRemove","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","group","d3_selection_enter","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","d3_selection_on","capture","onRemove","onAdd","wrap","d3_array","removeAll","match","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","ownerSVGElement","createSVGPoint","d3_mouse_bug44083","scrollX","scrollY","border","ctm","getScreenCTM","pageX","pageY","matrixTransform","inverse","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","d3_hcl_lab","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","hsl","exec","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","d3_xhr","respond","request","d3_xhrHasResponse","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","d3_timer","delay","then","now","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","t0","d3_format_precision","log","LN10","d3_formatPrefix","symbol","d3_locale_numberFormat","locale","locale_decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","specifier","d3_format_re","fill","align","zfill","comma","precision","suffix","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","d3_date","dt","times","range_utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","charCodeAt","d3_time_formatPads","d3_time_formats","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","B","d3_time_formatPad","I","d3_time","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","z0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","pointLine","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","direction","meridian","parallel","meridianNormal","polarAngle","winding","point0","antimeridian","τ","intersection","φarc","d3_geo_clipCircle","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","ax","ay","bx","by","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","children","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","input","rangeRound","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","cancelId","cancel","tweens","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","d3_json","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","d3_arraySlice","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","contains","getComputedStyle","getPropertyValue","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","nextSibling","upgroup","mouseenter","mouseleave","touch","touches","mousedown","touchstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","correspondingElement","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","translateTo","zoomTo","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","locations0","started","touchmove","touchend","changed","touchtime","distance0","l0","l1","distance1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","token","EOF","eol","EOL","formatRows","fieldSet","fields","field","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","stack","childs","revalue","partition","d3_layout_pieSortByValue","series","orders","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTweenNS","styleString","styleTween","inheritId","id0","id1","tickArguments_","tickFormat_","tickSpacing","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSubdivide","brushstart","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","xExtent","yExtent","keydown","keyCode","keyup","brushmove","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","d3_svg_brushResizes","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","responseXML","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","render","staticRenderFns","_scopeId","hook","$vnode","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate","_vm","$createElement","_c","_self","_t","_v","content","locals","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","createStyleElement","styleElement","head","isProduction","noop","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","css","media","sourceMap","styleSheet","cssText","replaceText","cssNode","createTextNode","sources","btoa","unescape","encodeURIComponent","firstChild","hasDocument","DEBUG","listToStyles","getElementsByTagName","parentId","_isProduction","newList","mayRemove","textStore","replacement","newStyles","part"],"mappings":"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,OACItE,KQzVZuE,QR2VQC,QACIxE,KQzVZuE,QR2VQE,YACIzE,KQzVZuE,QR2VQG,cACI1E,KQzVZuE,QR2VQI,eACI3E,KQzVZuE,QR2VQK,aACI5E,KQzVZuE,QR2VQM,cACI7E,KQzVZqE,OR2VQS,oBACI9E,KQzVZ+E,SR2VQC,oBACIhF,KQxVZuE,QR4VQU,QACIjF,KQzVZ+E,SR2VQ/E,MACIA,KQxVZQ,QR4VQ0E,aACIlF,KQzVZ+E,SR2VQI,WACInF,KQzVZ+E,SR2VQK,WACIpF,KQzVZ+E,SR2VQM,mBACIrF,KQzVZ+E,SR2VQO,gBACItF,KQzVZuE,QR2VQgB,cACIvF,KQzVZ+E,SR2VQS,iBACIxF,KQzVZuE,QR2VQkB,gBACIzF,KQzVZ+E,SR2VQW,cACI1F,KQzVZuE,QR2VQoB,cACI3F,KQxVZuE,QR4VQqB,WACI5F,KQzVZ+E,SR2VQc,WACI7F,KQxVZ+E,SR4VQe,YACI9F,KQzVZ+E,SR2VQgB,gBACI/F,KQxVZQ,QR4VQwF,aACIhG,KQzVZ+E,SR2VQkB,gBACIjG,KQzVZ+E,SR2VQmB,uBACIlG,KQxVZQ,QR4VQ2F,cACInG,KQzVZ+E,SR2VQqB,gBACIpG,KQxVZuE,QR4VQ8B,aACIrG,KQzVZ+E,SR2VQuB,aACItG,KQzVZ+E,SR2VQwB,YACIvG,KQxVZqE,OR4VQmC,WACIxG,KQzVZ+E,SR2VQ0B,aACIzG,KQzVZuE,QR2VQmC,yBACI1G,KQzVZ+E,SR2VQ4B,wBACI3G,KQzVZuE,QR2VQqC,wBACI5G,KQvVZuE,SR2VIxE,KAAM,WACF,OACI8G,SQ1VZ,ER2VYC,WQzVZ,ER4VYC,OQzVZ,GR2VYhH,MAOIiH,WAEAC,SACAC,WAGAC,MQ1VhB,GR2VgBnH,KQ1VhB,GR2VgBoH,SAIAC,aAMZC,QAAS,WACL3J,KAAKoJ,OAASpJ,KQzVtB4C,GR2VQ5C,KAAK4J,IAAI,2BAA4B,SAAUvH,EAAMS,EAAMK,GAEvDnD,KAAKoC,KAAKqH,MAAM3G,GQzV5BT,ER2VgBc,EAAQ1B,eAAe,cAAY6B,KAAcH,EAAQJ,QACzD/C,KAAKoC,KAAKsH,OAAO5G,GAAQK,EQ1VzCJ,OR6VgBI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","file":"vue-c3js.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-c3js\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-c3js\"] = factory();\n\telse\n\t\troot[\"vue-c3js\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-c3js\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-c3js\"] = factory();\n\telse\n\t\troot[\"vue-c3js\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _VueC3Element = __webpack_require__(2);\n\nvar _VueC3Element2 = _interopRequireDefault(_VueC3Element);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n\n    mixins: [_VueC3Element2.default],\n\n    name: \"c3-line\",\n\n    props: {\n        connectNull: {},\n        stepType: {}\n    },\n\n    data: function data() {\n        return {\n            type: 'line'\n        };\n    },\n\n    mounted: function mounted() {},\n\n\n    methods: {},\n\n    computed: {},\n\n    filters: {},\n\n    watch: {}\n};\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _VueC3Element = __webpack_require__(2);\n\nvar _VueC3Element2 = _interopRequireDefault(_VueC3Element);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n\n    mixins: [_VueC3Element2.default],\n\n    name: \"c3-spline\",\n\n    props: {},\n\n    data: function data() {\n        return {\n            type: 'spline'\n        };\n    },\n\n    mounted: function mounted() {},\n\n\n    methods: {},\n\n    computed: {},\n\n    filters: {},\n\n    watch: {}\n};\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n\n    replace: true,\n\n    props: {\n        id: {\n            type: String\n        },\n        prop: {\n            type: String\n        },\n        color: {\n            type: String\n        },\n        name: {\n            type: String\n        },\n        customClass: {\n            type: String\n        }\n    },\n\n    data: function data() {\n        return {\n            type: ''\n        };\n    },\n\n    mounted: function mounted() {\n        this.$parent.$emit('c3-chart-element-mounted', this.type, this.prop, this.options);\n    },\n\n\n    methods: {\n\n        optionExists: function optionExists(option) {\n            return undefined !== option && null !== option && '' !== option ? true : false;\n        }\n    },\n\n    computed: {\n\n        options: function options() {\n            var _options = {};\n\n            if (this.optionExists(this.color)) {\n                _options.color = this.color;\n            }\n\n            if (this.optionExists(this.name)) {\n                _options.name = this.name;\n            }\n\n            if (this.optionExists(this.customClass)) {\n                _options.customClass = this.customClass;\n            }\n\n            return _options;\n        }\n    },\n\n    watch: {}\n};\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(14)\n}\nvar Component = __webpack_require__(12)(\n  /* script */\n  __webpack_require__(6),\n  /* template */\n  __webpack_require__(13),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"name\":\"vue-c3js\",\"version\":\"0.0.1\",\"description\":\"c3js wrapper for vuejs.\",\"main\":\"./dist/vue-c3js.js\",\"scripts\":{\"test\":\"test\",\"dev:hot\":\"cross-env NODE_ENV=development webpack-dev-server --open --hot\",\"example\":\"cross-env NODE_ENV=production webpack --progress --hide-modules --config  ./build/webpack.config.js\",\"build\":\"cross-env NODE_ENV=production webpack --progress --hide-modules --config  ./build/webpack.prod.js\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/andreas2510/vue-c3js.git\"},\"author\":\"Andreas Papadopoulos <andreaspapadopoulos1@gmail.com>\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/andreas2510/vue-c3js/issues\"},\"homepage\":\"https://github.com/andreas2510/vue-c3js#readme\",\"dependencies\":{\"c3\":\"^0.4.15\",\"vue\":\"^2.0.0\"},\"devDependencies\":{\"babel-core\":\"^6.0.0\",\"babel-loader\":\"^6.0.0\",\"babel-preset-env\":\"^1.5.1\",\"cross-env\":\"^3.0.0\",\"css-loader\":\"^0.25.0\",\"file-loader\":\"^0.9.0\",\"vue-loader\":\"^12.1.0\",\"vue-template-compiler\":\"^2.3.3\",\"webpack\":\"^2.6.1\",\"webpack-dev-server\":\"^2.4.5\"}}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _VueC3Line = __webpack_require__(0);\n\nvar _VueC3Line2 = _interopRequireDefault(_VueC3Line);\n\nvar _VueC3Spline = __webpack_require__(1);\n\nvar _VueC3Spline2 = _interopRequireDefault(_VueC3Spline);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nvar c3 = __webpack_require__(8);\n\nexports.default = {\n\n    components: { VueC3Line: _VueC3Line2.default, VueC3Spline: _VueC3Spline2.default },\n\n    name: \"c3-chart\",\n\n    props: {\n        id: {\n            type: String,\n            required: true\n        },\n        chartData: {\n            type: Array,\n            required: true\n        },\n\n        // Chart options\n        width: {\n            type: Number\n        },\n        height: {\n            type: Number\n        },\n        paddingTop: {\n            type: Number\n        },\n        paddingRight: {\n            type: Number\n        },\n        paddingBottom: {\n            type: Number\n        },\n        paddingLeft: {\n            type: Number\n        },\n        colorPattern: {\n            type: Array\n        },\n        interactionEnabled: {\n            type: Boolean\n        },\n        transitionDuration: {\n            type: Number\n        },\n\n        // Data\n        labels: {\n            type: Boolean\n        },\n        type: {\n            type: String\n        },\n\n        // Axis\n        axisRotated: {\n            type: Boolean\n        },\n        showXAxis: {\n            type: Boolean\n        },\n        showYAxis: {\n            type: Boolean\n        },\n        axisXTickCentered: {\n            type: Boolean\n        },\n        axisXTickCount: {\n            type: Number\n        },\n        axisXTickFit: {\n            type: Boolean\n        },\n        axisXTickRotate: {\n            type: Number\n        },\n        axisXTickOuter: {\n            type: Boolean\n        },\n        axisXTickMax: {\n            type: Number\n        },\n        axisXTickMin: {\n            type: Number\n        },\n\n        // Grid\n        showGridX: {\n            type: Boolean\n        },\n        showGridY: {\n            type: Boolean\n        },\n\n        // Legend\n        showLegend: {\n            type: Boolean\n        },\n        legendPosition: {\n            type: String\n        },\n\n        // Tooltip\n        showTooltip: {\n            type: Boolean\n        },\n        tooltipGrouped: {\n            type: Boolean\n        },\n        tooltipFormattedTitle: {\n            type: String\n        },\n\n        // Subchart\n        showSubchart: {\n            type: Boolean\n        },\n        subchartHeight: {\n            type: Number\n        },\n\n        // Zoom\n        zoomEnabled: {\n            type: Boolean\n        },\n        zoomRescale: {\n            type: Boolean\n        },\n        zoomExtent: {\n            type: Array\n        },\n\n        // Point\n        showPoint: {\n            type: Boolean\n        },\n        pointRadius: {\n            type: Number\n        },\n        pointFocusExpandEnabled: {\n            type: Boolean\n        },\n        pointFocusExpandRadius: {\n            type: Number\n        },\n        pointFocusSelectRadius: {\n            type: Number\n        }\n    },\n\n    data: function data() {\n        return {\n            isReady: false,\n            isLoading: false,\n\n            // Options\n            bindTo: '',\n\n            data: {\n                // url: \"\",\n                // json: [],\n                // keys: [],\n                // mimeType: '', // json\n\n                // rows: [],\n                columns: [],\n\n                names: {},\n                classes: {},\n                // groups: {},\n                // axes: {},\n                label: \"\",\n                type: \"\",\n                types: {},\n                // labels: false,\n                // order: false,\n                // regions: {},\n                colors: {}\n            }\n\n        };\n    },\n\n    created: function created() {\n        this.bindTo = this.id;\n\n        this.$on('c3-chart-element-mounted', function (type, prop, options) {\n\n            this.data.types[prop] = type;\n\n            if (options.hasOwnProperty('color') && undefined !== options.color) {\n                this.data.colors[prop] = options.color;\n            }\n\n            if (options.hasOwnProperty('name') && undefined !== options.name) {\n                this.data.names[prop] = options.name;\n            }\n\n            if (options.hasOwnProperty('customClass') && undefined !== options.customClass) {\n                this.data.classes[prop] = options.customClass;\n            }\n        });\n    },\n    mounted: function mounted() {\n        this.data.columns = this.chartData;\n\n        var chart = c3.generate(this.options);\n\n        var el = document.getElementById(this.bindTo);\n        el.chartdata = chart;\n\n        this.isReady = true;\n    },\n\n\n    methods: {\n        /**\n         * [propExists description]\n         * @param  {[type]} prop [description]\n         * @return {[type]}      [description]\n         */\n        propExists: function propExists(prop) {\n            return undefined !== prop && null !== prop && '' !== prop ? true : false;\n        },\n\n        /**\n         * [mergeObjects description]\n         * @param  {[type]} obj [description]\n         * @param  {[type]} src [description]\n         * @return {[type]}     [description]\n         */\n        mergeObjects: function mergeObjects(obj, src) {\n            Object.keys(src).forEach(function (key) {\n                obj[key] = src[key];\n            });\n            return obj;\n        },\n\n        /**\n         * [refresh description]\n         * @return {[type]} [description]\n         */\n        refresh: function refresh() {\n            var chart = document.getElementById(this.bindTo).chartdata;\n            chart.load({\n                columns: this.data.columns\n            });\n        }\n    },\n\n    computed: {\n\n        chartOptions: function chartOptions() {\n            var _chartOptions = {};\n            _chartOptions.size = {};\n            _chartOptions.padding = {};\n            _chartOptions.color = {};\n            _chartOptions.interaction = {};\n            _chartOptions.transition = {};\n\n            if (this.propExists(this.width)) {\n                _chartOptions.size.width = this.width;\n            }\n            if (this.propExists(this.height)) {\n                _chartOptions.size.height = this.height;\n            }\n            if (this.propExists(this.paddingTop)) {\n                _chartOptions.padding.top = this.paddingTop;\n            }\n            if (this.propExists(this.paddingRight)) {\n                _chartOptions.padding.right = this.paddingRight;\n            }\n            if (this.propExists(this.paddingBottom)) {\n                _chartOptions.padding.bottom = this.paddingBottom;\n            }\n            if (this.propExists(this.paddingLeft)) {\n                _chartOptions.padding.left = this.paddingLeft;\n            }\n            if (this.propExists(this.colorPattern)) {\n                _chartOptions.color.pattern = this.colorPattern;\n            }\n            if (this.propExists(this.interactionEnabled)) {\n                _chartOptions.interaction.enabled = this.interactionEnabled;\n            }\n            if (this.propExists(this.transitionDuration)) {\n                _chartOptions.transition.duration = this.transitionDuration;\n            }\n\n            return _chartOptions;\n        },\n\n        dataOptions: function dataOptions() {\n            var _dataOptions = {};\n\n            if (this.propExists(this.labels)) {\n                _dataOptions.labels = this.labels;\n            }\n            if (this.propExists(this.type)) {\n                _dataOptions.type = this.type;\n            }\n\n            return _dataOptions;\n        },\n\n        axisOptions: function axisOptions() {\n            var _axisOptions = {};\n            _axisOptions.x = {};\n            _axisOptions.x.tick = {};\n            _axisOptions.y = {};\n\n            if (this.propExists(this.axisRotated)) {\n                _axisOptions.rotated = this.axisRotated;\n            }\n            if (this.propExists(this.showXAxis)) {\n                _axisOptions.x.show = this.showXAxis;\n            }\n            if (this.propExists(this.axisXTickCentered)) {\n                _axisOptions.x.tick.centered = this.axisXTickCentered;\n            }\n            if (this.propExists(this.showYAxis)) {\n                _axisOptions.y.show = this.showYAxis;\n            }\n\n            return _axisOptions;\n        },\n\n        gridOptions: function gridOptions() {\n            var _gridOptions = {};\n            _gridOptions.x = {};\n            _gridOptions.y = {};\n\n            if (this.propExists(this.showGridX)) {\n                _gridOptions.x.show = this.showGridX;\n            }\n            if (this.propExists(this.showGridY)) {\n                _gridOptions.y.show = this.showGridY;\n            }\n\n            return _gridOptions;\n        },\n\n        legendOptions: function legendOptions() {\n            var _legendOptions = {};\n\n            if (this.propExists(this.showLegend)) {\n                _legendOptions.show = this.showLegend;\n            }\n            if (this.propExists(this.legendPosition)) {\n                _legendOptions.position = this.legendPosition;\n            }\n\n            return _legendOptions;\n        },\n\n        tooltipOptions: function tooltipOptions() {\n            var _tooltipOptions = {};\n            _tooltipOptions.format = {};\n\n            if (this.propExists(this.showTooltip)) {\n                _tooltipOptions.show = this.showTooltip;\n            }\n            if (this.propExists(this.tooltipGrouped)) {\n                _tooltipOptions.grouped = this.tooltipGrouped;\n            }\n\n            var that = this;\n\n            _tooltipOptions.format = {\n                title: function title(x) {\n                    // that.$emit('tooltip-format-title', x)\n                    if (that.propExists(that.tooltipFormattedTitle)) {\n                        return that.tooltipFormattedTitle;\n                    } else {\n                        return x;\n                    }\n                }\n            };\n\n            return _tooltipOptions;\n        },\n\n        subchartOptions: function subchartOptions() {\n            var _subchartOptions = {};\n            _subchartOptions.size = {};\n\n            if (this.propExists(this.showSubchart)) {\n                _subchartOptions.show = this.showSubchart;\n            }\n            if (this.propExists(this.subchartHeight)) {\n                _subchartOptions.size.height = this.subchartHeight;\n            }\n\n            return _subchartOptions;\n        },\n\n        zoomOptions: function zoomOptions() {\n            var _zoomOptions = {};\n\n            if (this.propExists(this.zoomEnabled)) {\n                _zoomOptions.enabled = this.zoomEnabled;\n            }\n            if (this.propExists(this.zoomRescale)) {\n                _zoomOptions.rescale = this.zoomRescale;\n            }\n            if (this.propExists(this.zoomExtent)) {\n                _zoomOptions.extent = this.zoomExtent;\n            }\n\n            return _zoomOptions;\n        },\n\n        pointOptions: function pointOptions() {\n            var _pointOptions = {};\n            _pointOptions.focus = {};\n            _pointOptions.focus.expand = {};\n            _pointOptions.select = {};\n\n            if (this.propExists(this.showPoint)) {\n                _pointOptions.show = this.showPoint;\n            }\n            if (this.propExists(this.pointRadius)) {\n                _pointOptions.r = this.pointRadius;\n            }\n            if (this.propExists(this.pointFocusExpandEnabled)) {\n                _pointOptions.focus.expand.enabled = this.pointFocusExpandEnabled;\n            }\n            if (this.propExists(this.pointFocusExpandRadius)) {\n                _pointOptions.focus.expand.r = this.pointFocusExpandRadius;\n            }\n            if (this.propExists(this.pointFocusSelectRadius)) {\n                _pointOptions.select.r = this.pointFocusSelectRadius;\n            }\n\n            return _pointOptions;\n        },\n\n        chartCallbacks: function chartCallbacks() {\n            var that = this;\n            return {\n                oninit: function oninit() {\n                    that.$emit('oninit');\n                },\n                onrendered: function onrendered() {\n                    that.$emit('onrendered');\n                },\n                onmouseover: function onmouseover() {\n                    that.$emit('onmouseover');\n                },\n                onmouseout: function onmouseout() {\n                    that.$emit('onmouseout');\n                },\n                onresize: function onresize() {\n                    that.$emit('onresize');\n                },\n                onresized: function onresized() {\n                    that.$emit('onresized');\n                }\n            };\n        },\n\n        dataCallbacks: function dataCallbacks() {\n            var that = this;\n            return {\n                onclick: function onclick(d, element) {\n                    that.$emit('data-onclick', d);\n                    // console.log(d)\n                    // console.log(element)\n                },\n                onmouseover: function onmouseover(d) {\n                    that.$emit('data-onmouseover', d);\n                },\n                onmouseout: function onmouseout(d) {\n                    that.$emit('data-onmouseout', d);\n                }\n            };\n        },\n\n        options: function options() {\n            var _options = {};\n            _options.bindto = '#' + this.bindTo;\n            _options.data = this.data;\n            _options.data.labels = this.labels;\n            _options.data.type = this.type;\n            this.mergeObjects(_options, this.chartOptions);\n            //this.mergeObjects(_options, this.chartCallbacks)\n            this.mergeObjects(_options.data, this.dataOptions);\n            //this.mergeObjects(_options.data, this.dataCallbacks)\n\n            _options.axis = this.axisOptions;\n            _options.grid = this.gridOptions;\n            _options.legend = this.legendOptions;\n            _options.tooltip = this.tooltipOptions;\n            _options.point = this.pointOptions;\n            _options.subchart = this.subchartOptions;\n            _options.zoom = this.zoomOptions;\n\n            return _options;\n        },\n\n        /**\n         * Serialized chart data.\n         * @return {[type]} [description]\n         */\n        serializedChartData: function serializedChartData() {\n            return JSON.stringify(this.chartData);\n        }\n    },\n\n    filters: {\n        /**\n         * Round value to two decimal float.\n         * @param  {[type]} str [description]\n         * @return {[type]}     [description]\n         */\n        round: function round(str) {\n            return parseFloat(str).toFixed(2);\n        }\n    },\n\n    watch: {\n\n        'data.columns': function dataColumns(newVal, oldVal) {\n            if (this.isReady) {\n                this.refresh();\n            }\n        },\n\n        chartData: function chartData(newVal, oldVal) {\n            this.data.columns = newVal;\n        },\n\n        /**\n         * [chartData description]\n         * @param  {[type]} newVal [description]\n         * @param  {[type]} oldVal [description]\n         * @return {[type]}        [description]\n         */\n        columns: function columns(newVal, oldVal) {\n            var that = this;\n            var chart = $('#' + this.id).data('c3-chart');\n            that.isLoading = true;\n            setTimeout(function () {\n                chart.load({\n                    columns: newVal\n                });\n                that.isLoading = false;\n            }, 1000);\n\n            // var chartLegendFocus = {}\n            // newVal.forEach(function (key) {\n            //     chartLegendFocus[key] = 0\n            // })\n            // this.chartLegendFocus = chartLegendFocus\n\n            // this.chartLegendItems = []\n            // for (var i = 0; i < newVal.length; i++) {\n            //     var legend = newVal[i]\n            //     this.chartLegendItems.push(legend[0])\n            // }\n        }\n    }\n};\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _VueC3Chart = __webpack_require__(4);\n\nvar _VueC3Chart2 = _interopRequireDefault(_VueC3Chart);\n\nvar _VueC3Line = __webpack_require__(0);\n\nvar _VueC3Line2 = _interopRequireDefault(_VueC3Line);\n\nvar _VueC3Spline = __webpack_require__(1);\n\nvar _VueC3Spline2 = _interopRequireDefault(_VueC3Spline);\n\nvar _package = __webpack_require__(5);\n\nvar _package2 = _interopRequireDefault(_package);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar components = [_VueC3Chart2.default, _VueC3Line2.default, _VueC3Spline2.default];\n\nvar install = function install(Vue) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (install.installed) return;\n    components.map(function (component) {\n        Vue.component(component.name, component);\n    });\n};\n\n// if (typeof window !== 'undefined' && window.Vue) {\n//     console.log('ELEMENT')\n//     install(window.Vue);\n// };\n\nvar VueC3Charts = {\n    version: _package2.default.version,\n    install: install,\n    VueC3Chart: _VueC3Chart2.default,\n    VueC3Line: _VueC3Line2.default,\n    VueC3Spline: _VueC3Spline2.default\n};\n\nexports.default = VueC3Charts;\n\n\nmodule.exports = {\n    version: _package2.default.version,\n    install: install,\n    VueC3Charts: VueC3Charts,\n    VueC3Chart: _VueC3Chart2.default,\n    VueC3Line: _VueC3Line2.default,\n    VueC3Spline: _VueC3Spline2.default\n};\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.c3 = factory());\n}(this, (function () { 'use strict';\n\nvar CLASS = {\n    target: 'c3-target',\n    chart: 'c3-chart',\n    chartLine: 'c3-chart-line',\n    chartLines: 'c3-chart-lines',\n    chartBar: 'c3-chart-bar',\n    chartBars: 'c3-chart-bars',\n    chartText: 'c3-chart-text',\n    chartTexts: 'c3-chart-texts',\n    chartArc: 'c3-chart-arc',\n    chartArcs: 'c3-chart-arcs',\n    chartArcsTitle: 'c3-chart-arcs-title',\n    chartArcsBackground: 'c3-chart-arcs-background',\n    chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n    chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n    chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n    selectedCircle: 'c3-selected-circle',\n    selectedCircles: 'c3-selected-circles',\n    eventRect: 'c3-event-rect',\n    eventRects: 'c3-event-rects',\n    eventRectsSingle: 'c3-event-rects-single',\n    eventRectsMultiple: 'c3-event-rects-multiple',\n    zoomRect: 'c3-zoom-rect',\n    brush: 'c3-brush',\n    focused: 'c3-focused',\n    defocused: 'c3-defocused',\n    region: 'c3-region',\n    regions: 'c3-regions',\n    title: 'c3-title',\n    tooltipContainer: 'c3-tooltip-container',\n    tooltip: 'c3-tooltip',\n    tooltipName: 'c3-tooltip-name',\n    shape: 'c3-shape',\n    shapes: 'c3-shapes',\n    line: 'c3-line',\n    lines: 'c3-lines',\n    bar: 'c3-bar',\n    bars: 'c3-bars',\n    circle: 'c3-circle',\n    circles: 'c3-circles',\n    arc: 'c3-arc',\n    arcs: 'c3-arcs',\n    area: 'c3-area',\n    areas: 'c3-areas',\n    empty: 'c3-empty',\n    text: 'c3-text',\n    texts: 'c3-texts',\n    gaugeValue: 'c3-gauge-value',\n    grid: 'c3-grid',\n    gridLines: 'c3-grid-lines',\n    xgrid: 'c3-xgrid',\n    xgrids: 'c3-xgrids',\n    xgridLine: 'c3-xgrid-line',\n    xgridLines: 'c3-xgrid-lines',\n    xgridFocus: 'c3-xgrid-focus',\n    ygrid: 'c3-ygrid',\n    ygrids: 'c3-ygrids',\n    ygridLine: 'c3-ygrid-line',\n    ygridLines: 'c3-ygrid-lines',\n    axis: 'c3-axis',\n    axisX: 'c3-axis-x',\n    axisXLabel: 'c3-axis-x-label',\n    axisY: 'c3-axis-y',\n    axisYLabel: 'c3-axis-y-label',\n    axisY2: 'c3-axis-y2',\n    axisY2Label: 'c3-axis-y2-label',\n    legendBackground: 'c3-legend-background',\n    legendItem: 'c3-legend-item',\n    legendItemEvent: 'c3-legend-item-event',\n    legendItemTile: 'c3-legend-item-tile',\n    legendItemHidden: 'c3-legend-item-hidden',\n    legendItemFocused: 'c3-legend-item-focused',\n    dragarea: 'c3-dragarea',\n    EXPANDED: '_expanded_',\n    SELECTED: '_selected_',\n    INCLUDED: '_included_'\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isValue = function isValue(v) {\n    return v || v === 0;\n};\nvar isFunction = function isFunction(o) {\n    return typeof o === 'function';\n};\nvar isArray = function isArray(o) {\n    return Array.isArray(o);\n};\nvar isString = function isString(o) {\n    return typeof o === 'string';\n};\nvar isUndefined = function isUndefined(v) {\n    return typeof v === 'undefined';\n};\nvar isDefined = function isDefined(v) {\n    return typeof v !== 'undefined';\n};\nvar ceil10 = function ceil10(v) {\n    return Math.ceil(v / 10) * 10;\n};\nvar asHalfPixel = function asHalfPixel(n) {\n    return Math.ceil(n) + 0.5;\n};\nvar diffDomain = function diffDomain(d) {\n    return d[1] - d[0];\n};\nvar isEmpty = function isEmpty(o) {\n    return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;\n};\nvar notEmpty = function notEmpty(o) {\n    return !c3_chart_internal_fn.isEmpty(o);\n};\nvar getOption = function getOption(options, key, defaultValue) {\n    return isDefined(options[key]) ? options[key] : defaultValue;\n};\nvar hasValue = function hasValue(dict, value) {\n    var found = false;\n    Object.keys(dict).forEach(function (key) {\n        if (dict[key] === value) {\n            found = true;\n        }\n    });\n    return found;\n};\nvar sanitise = function sanitise(str) {\n    return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n};\nvar getPathBox = function getPathBox(path) {\n    var box = path.getBoundingClientRect(),\n        items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n        minX = items[0].x,\n        minY = Math.min(items[0].y, items[1].y);\n    return { x: minX, y: minY, width: box.width, height: box.height };\n};\n\n// Features:\n// 1. category axis\n// 2. ceil values of translate/x/y to int for half pixel antialiasing\n// 3. multiline tick text\nvar tickTextCharSize;\nfunction c3_axis(d3, params) {\n    var scale = d3.scale.linear(),\n        orient = \"bottom\",\n        innerTickSize = 6,\n        outerTickSize,\n        tickPadding = 3,\n        tickValues = null,\n        tickFormat,\n        tickArguments;\n\n    var tickOffset = 0,\n        tickCulling = true,\n        tickCentered;\n\n    params = params || {};\n    outerTickSize = params.withOuterTick ? 6 : 0;\n\n    function axisX(selection, x) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n        });\n    }\n    function axisY(selection, y) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n        });\n    }\n    function scaleExtent(domain) {\n        var start = domain[0],\n            stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    }\n    function generateTicks(scale) {\n        var i,\n            domain,\n            ticks = [];\n        if (scale.ticks) {\n            return scale.ticks.apply(scale, tickArguments);\n        }\n        domain = scale.domain();\n        for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n            ticks.push(i);\n        }\n        if (ticks.length > 0 && ticks[0] > 0) {\n            ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n        }\n        return ticks;\n    }\n    function copyScale() {\n        var newScale = scale.copy(),\n            domain;\n        if (params.isCategory) {\n            domain = scale.domain();\n            newScale.domain([domain[0], domain[1] - 1]);\n        }\n        return newScale;\n    }\n    function textFormatted(v) {\n        var formatted = tickFormat ? tickFormat(v) : v;\n        return typeof formatted !== 'undefined' ? formatted : '';\n    }\n    function getSizeFor1Char(tick) {\n        if (tickTextCharSize) {\n            return tickTextCharSize;\n        }\n        var size = {\n            h: 11.5,\n            w: 5.5\n        };\n        tick.select('text').text(textFormatted).each(function (d) {\n            var box = this.getBoundingClientRect(),\n                text = textFormatted(d),\n                h = box.height,\n                w = text ? box.width / text.length : undefined;\n            if (h && w) {\n                size.h = h;\n                size.w = w;\n            }\n        }).text('');\n        tickTextCharSize = size;\n        return size;\n    }\n    function transitionise(selection) {\n        return params.withoutTransition ? selection : d3.transition(selection);\n    }\n    function axis(g) {\n        g.each(function () {\n            var g = axis.g = d3.select(this);\n\n            var scale0 = this.__chart__ || scale,\n                scale1 = this.__chart__ = copyScale();\n\n            var ticks = tickValues ? tickValues : generateTicks(scale1),\n                tick = g.selectAll(\".tick\").data(ticks, scale1),\n                tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n\n            // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n            tickExit = tick.exit().remove(),\n                tickUpdate = transitionise(tick).style(\"opacity\", 1),\n                tickTransform,\n                tickX,\n                tickY;\n\n            var range = scale.rangeExtent ? scale.rangeExtent() : scaleExtent(scale.range()),\n                path = g.selectAll(\".domain\").data([0]),\n                pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), transitionise(path));\n            tickEnter.append(\"line\");\n            tickEnter.append(\"text\");\n\n            var lineEnter = tickEnter.select(\"line\"),\n                lineUpdate = tickUpdate.select(\"line\"),\n                textEnter = tickEnter.select(\"text\"),\n                textUpdate = tickUpdate.select(\"text\");\n\n            if (params.isCategory) {\n                tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                tickX = tickCentered ? 0 : tickOffset;\n                tickY = tickCentered ? tickOffset : 0;\n            } else {\n                tickOffset = tickX = 0;\n            }\n\n            var text,\n                tspan,\n                sizeFor1Char = getSizeFor1Char(g.select('.tick')),\n                counts = [];\n            var tickLength = Math.max(innerTickSize, 0) + tickPadding,\n                isVertical = orient === 'left' || orient === 'right';\n\n            // this should be called only when category axis\n            function splitTickText(d, maxWidth) {\n                var tickText = textFormatted(d),\n                    subtext,\n                    spaceIndex,\n                    textWidth,\n                    splitted = [];\n\n                if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n                    return tickText;\n                }\n\n                if (!maxWidth || maxWidth <= 0) {\n                    maxWidth = isVertical ? 95 : params.isCategory ? Math.ceil(scale1(ticks[1]) - scale1(ticks[0])) - 12 : 110;\n                }\n\n                function split(splitted, text) {\n                    spaceIndex = undefined;\n                    for (var i = 1; i < text.length; i++) {\n                        if (text.charAt(i) === ' ') {\n                            spaceIndex = i;\n                        }\n                        subtext = text.substr(0, i + 1);\n                        textWidth = sizeFor1Char.w * subtext.length;\n                        // if text width gets over tick width, split by space index or crrent index\n                        if (maxWidth < textWidth) {\n                            return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\n                        }\n                    }\n                    return splitted.concat(text);\n                }\n\n                return split(splitted, tickText + \"\");\n            }\n\n            function tspanDy(d, i) {\n                var dy = sizeFor1Char.h;\n                if (i === 0) {\n                    if (orient === 'left' || orient === 'right') {\n                        dy = -((counts[d.index] - 1) * (sizeFor1Char.h / 2) - 3);\n                    } else {\n                        dy = \".71em\";\n                    }\n                }\n                return dy;\n            }\n\n            function tickSize(d) {\n                var tickPosition = scale(d) + (tickCentered ? 0 : tickOffset);\n                return range[0] < tickPosition && tickPosition < range[1] ? innerTickSize : 0;\n            }\n\n            text = tick.select(\"text\");\n            tspan = text.selectAll('tspan').data(function (d, i) {\n                var splitted = params.tickMultiline ? splitTickText(d, params.tickWidth) : [].concat(textFormatted(d));\n                counts[i] = splitted.length;\n                return splitted.map(function (s) {\n                    return { index: i, splitted: s };\n                });\n            });\n            tspan.enter().append('tspan');\n            tspan.exit().remove();\n            tspan.text(function (d) {\n                return d.splitted;\n            });\n\n            var rotate = params.tickTextRotate;\n\n            function textAnchorForText(rotate) {\n                if (!rotate) {\n                    return 'middle';\n                }\n                return rotate > 0 ? \"start\" : \"end\";\n            }\n            function textTransform(rotate) {\n                if (!rotate) {\n                    return '';\n                }\n                return \"rotate(\" + rotate + \")\";\n            }\n            function dxForText(rotate) {\n                if (!rotate) {\n                    return 0;\n                }\n                return 8 * Math.sin(Math.PI * (rotate / 180));\n            }\n            function yForText(rotate) {\n                if (!rotate) {\n                    return tickLength;\n                }\n                return 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1);\n            }\n\n            switch (orient) {\n                case \"bottom\":\n                    {\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", innerTickSize);\n                        textEnter.attr(\"y\", tickLength);\n                        lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", tickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", yForText(rotate)).style(\"text-anchor\", textAnchorForText(rotate)).attr(\"transform\", textTransform(rotate));\n                        tspan.attr('x', 0).attr(\"dy\", tspanDy).attr('dx', dxForText(rotate));\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n                        break;\n                    }\n                case \"top\":\n                    {\n                        // TODO: rotated tick text\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", -innerTickSize);\n                        textEnter.attr(\"y\", -tickLength);\n                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", -tickLength);\n                        text.style(\"text-anchor\", \"middle\");\n                        tspan.attr('x', 0).attr(\"dy\", \"0em\");\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n                        break;\n                    }\n                case \"left\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", -innerTickSize);\n                        textEnter.attr(\"x\", -tickLength);\n                        lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                        textUpdate.attr(\"x\", -tickLength).attr(\"y\", tickOffset);\n                        text.style(\"text-anchor\", \"end\");\n                        tspan.attr('x', -tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n                        break;\n                    }\n                case \"right\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", innerTickSize);\n                        textEnter.attr(\"x\", tickLength);\n                        lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n                        textUpdate.attr(\"x\", tickLength).attr(\"y\", 0);\n                        text.style(\"text-anchor\", \"start\");\n                        tspan.attr('x', tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n                        break;\n                    }\n            }\n            if (scale1.rangeBand) {\n                var x = scale1,\n                    dx = x.rangeBand() / 2;\n                scale0 = scale1 = function scale1(d) {\n                    return x(d) + dx;\n                };\n            } else if (scale0.rangeBand) {\n                scale0 = scale1;\n            } else {\n                tickExit.call(tickTransform, scale1);\n            }\n            tickEnter.call(tickTransform, scale0);\n            tickUpdate.call(tickTransform, scale1);\n        });\n    }\n    axis.scale = function (x) {\n        if (!arguments.length) {\n            return scale;\n        }\n        scale = x;\n        return axis;\n    };\n    axis.orient = function (x) {\n        if (!arguments.length) {\n            return orient;\n        }\n        orient = x in { top: 1, right: 1, bottom: 1, left: 1 } ? x + \"\" : \"bottom\";\n        return axis;\n    };\n    axis.tickFormat = function (format) {\n        if (!arguments.length) {\n            return tickFormat;\n        }\n        tickFormat = format;\n        return axis;\n    };\n    axis.tickCentered = function (isCentered) {\n        if (!arguments.length) {\n            return tickCentered;\n        }\n        tickCentered = isCentered;\n        return axis;\n    };\n    axis.tickOffset = function () {\n        return tickOffset;\n    };\n    axis.tickInterval = function () {\n        var interval, length;\n        if (params.isCategory) {\n            interval = tickOffset * 2;\n        } else {\n            length = axis.g.select('path.domain').node().getTotalLength() - outerTickSize * 2;\n            interval = length / axis.g.selectAll('line').size();\n        }\n        return interval === Infinity ? 0 : interval;\n    };\n    axis.ticks = function () {\n        if (!arguments.length) {\n            return tickArguments;\n        }\n        tickArguments = arguments;\n        return axis;\n    };\n    axis.tickCulling = function (culling) {\n        if (!arguments.length) {\n            return tickCulling;\n        }\n        tickCulling = culling;\n        return axis;\n    };\n    axis.tickValues = function (x) {\n        if (typeof x === 'function') {\n            tickValues = function tickValues() {\n                return x(scale.domain());\n            };\n        } else {\n            if (!arguments.length) {\n                return tickValues;\n            }\n            tickValues = x;\n        }\n        return axis;\n    };\n    return axis;\n}\n\nfunction Axis(owner) {\n    API.call(this, owner);\n}\n\ninherit(API, Axis);\n\nAxis.prototype.init = function init() {\n\n    var $$ = this.owner,\n        config = $$.config,\n        main = $$.main;\n    $$.axes.x = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisX).attr(\"clip-path\", $$.clipPathForXAxis).attr(\"transform\", $$.getTranslate('x')).style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n    $$.axes.x.append(\"text\").attr(\"class\", CLASS.axisXLabel).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n    $$.axes.y = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY).attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis).attr(\"transform\", $$.getTranslate('y')).style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n    $$.axes.y.append(\"text\").attr(\"class\", CLASS.axisYLabel).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n    $$.axes.y2 = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2\n    // clip-path?\n    ).attr(\"transform\", $$.getTranslate('y2')).style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n    $$.axes.y2.append(\"text\").attr(\"class\", CLASS.axisY2Label).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n};\nAxis.prototype.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n    var $$ = this.owner,\n        config = $$.config,\n        axisParams = {\n        isCategory: $$.isCategorized(),\n        withOuterTick: withOuterTick,\n        tickMultiline: config.axis_x_tick_multiline,\n        tickWidth: config.axis_x_tick_width,\n        tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n        withoutTransition: withoutTransition\n    },\n        axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient);\n\n    if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n        tickValues = tickValues.map(function (v) {\n            return $$.parseDate(v);\n        });\n    }\n\n    // Set tick\n    axis.tickFormat(tickFormat).tickValues(tickValues);\n    if ($$.isCategorized()) {\n        axis.tickCentered(config.axis_x_tick_centered);\n        if (isEmpty(config.axis_x_tick_culling)) {\n            config.axis_x_tick_culling = false;\n        }\n    }\n\n    return axis;\n};\nAxis.prototype.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n    var $$ = this.owner,\n        config = $$.config,\n        tickValues;\n    if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n        tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n    }\n    if (axis) {\n        axis.tickValues(tickValues);\n    } else {\n        $$.xAxis.tickValues(tickValues);\n        $$.subXAxis.tickValues(tickValues);\n    }\n    return tickValues;\n};\nAxis.prototype.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n    var $$ = this.owner,\n        config = $$.config,\n        axisParams = {\n        withOuterTick: withOuterTick,\n        withoutTransition: withoutTransition,\n        tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n    },\n        axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient).tickFormat(tickFormat);\n    if ($$.isTimeSeriesY()) {\n        axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n    } else {\n        axis.tickValues(tickValues);\n    }\n    return axis;\n};\nAxis.prototype.getId = function getId(id) {\n    var config = this.owner.config;\n    return id in config.data_axes ? config.data_axes[id] : 'y';\n};\nAxis.prototype.getXAxisTickFormat = function getXAxisTickFormat() {\n    var $$ = this.owner,\n        config = $$.config,\n        format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {\n        return v < 0 ? v.toFixed(0) : v;\n    };\n    if (config.axis_x_tick_format) {\n        if (isFunction(config.axis_x_tick_format)) {\n            format = config.axis_x_tick_format;\n        } else if ($$.isTimeSeries()) {\n            format = function format(date) {\n                return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n            };\n        }\n    }\n    return isFunction(format) ? function (v) {\n        return format.call($$, v);\n    } : format;\n};\nAxis.prototype.getTickValues = function getTickValues(tickValues, axis) {\n    return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n};\nAxis.prototype.getXAxisTickValues = function getXAxisTickValues() {\n    return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n};\nAxis.prototype.getYAxisTickValues = function getYAxisTickValues() {\n    return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n};\nAxis.prototype.getY2AxisTickValues = function getY2AxisTickValues() {\n    return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n};\nAxis.prototype.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n    var $$ = this.owner,\n        config = $$.config,\n        option;\n    if (axisId === 'y') {\n        option = config.axis_y_label;\n    } else if (axisId === 'y2') {\n        option = config.axis_y2_label;\n    } else if (axisId === 'x') {\n        option = config.axis_x_label;\n    }\n    return option;\n};\nAxis.prototype.getLabelText = function getLabelText(axisId) {\n    var option = this.getLabelOptionByAxisId(axisId);\n    return isString(option) ? option : option ? option.text : null;\n};\nAxis.prototype.setLabelText = function setLabelText(axisId, text) {\n    var $$ = this.owner,\n        config = $$.config,\n        option = this.getLabelOptionByAxisId(axisId);\n    if (isString(option)) {\n        if (axisId === 'y') {\n            config.axis_y_label = text;\n        } else if (axisId === 'y2') {\n            config.axis_y2_label = text;\n        } else if (axisId === 'x') {\n            config.axis_x_label = text;\n        }\n    } else if (option) {\n        option.text = text;\n    }\n};\nAxis.prototype.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n    var option = this.getLabelOptionByAxisId(axisId),\n        position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;\n    return {\n        isInner: position.indexOf('inner') >= 0,\n        isOuter: position.indexOf('outer') >= 0,\n        isLeft: position.indexOf('left') >= 0,\n        isCenter: position.indexOf('center') >= 0,\n        isRight: position.indexOf('right') >= 0,\n        isTop: position.indexOf('top') >= 0,\n        isMiddle: position.indexOf('middle') >= 0,\n        isBottom: position.indexOf('bottom') >= 0\n    };\n};\nAxis.prototype.getXAxisLabelPosition = function getXAxisLabelPosition() {\n    return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n};\nAxis.prototype.getYAxisLabelPosition = function getYAxisLabelPosition() {\n    return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n};\nAxis.prototype.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n    return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n};\nAxis.prototype.getLabelPositionById = function getLabelPositionById(id) {\n    return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n};\nAxis.prototype.textForXAxisLabel = function textForXAxisLabel() {\n    return this.getLabelText('x');\n};\nAxis.prototype.textForYAxisLabel = function textForYAxisLabel() {\n    return this.getLabelText('y');\n};\nAxis.prototype.textForY2AxisLabel = function textForY2AxisLabel() {\n    return this.getLabelText('y2');\n};\nAxis.prototype.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n    var $$ = this.owner;\n    if (forHorizontal) {\n        return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n    } else {\n        return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n    }\n};\nAxis.prototype.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n    if (forHorizontal) {\n        return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n    } else {\n        return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n    }\n};\nAxis.prototype.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n    if (forHorizontal) {\n        return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n    } else {\n        return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n    }\n};\nAxis.prototype.xForXAxisLabel = function xForXAxisLabel() {\n    return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n};\nAxis.prototype.xForYAxisLabel = function xForYAxisLabel() {\n    return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n};\nAxis.prototype.xForY2AxisLabel = function xForY2AxisLabel() {\n    return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n};\nAxis.prototype.dxForXAxisLabel = function dxForXAxisLabel() {\n    return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n};\nAxis.prototype.dxForYAxisLabel = function dxForYAxisLabel() {\n    return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n};\nAxis.prototype.dxForY2AxisLabel = function dxForY2AxisLabel() {\n    return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n};\nAxis.prototype.dyForXAxisLabel = function dyForXAxisLabel() {\n    var $$ = this.owner,\n        config = $$.config,\n        position = this.getXAxisLabelPosition();\n    if (config.axis_rotated) {\n        return position.isInner ? \"1.2em\" : -25 - this.getMaxTickWidth('x');\n    } else {\n        return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n    }\n};\nAxis.prototype.dyForYAxisLabel = function dyForYAxisLabel() {\n    var $$ = this.owner,\n        position = this.getYAxisLabelPosition();\n    if ($$.config.axis_rotated) {\n        return position.isInner ? \"-0.5em\" : \"3em\";\n    } else {\n        return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\n    }\n};\nAxis.prototype.dyForY2AxisLabel = function dyForY2AxisLabel() {\n    var $$ = this.owner,\n        position = this.getY2AxisLabelPosition();\n    if ($$.config.axis_rotated) {\n        return position.isInner ? \"1.2em\" : \"-2.2em\";\n    } else {\n        return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\n    }\n};\nAxis.prototype.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n    var $$ = this.owner;\n    return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n};\nAxis.prototype.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n    var $$ = this.owner;\n    return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n};\nAxis.prototype.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n    var $$ = this.owner;\n    return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n};\nAxis.prototype.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n    var $$ = this.owner,\n        config = $$.config,\n        maxWidth = 0,\n        targetsToShow,\n        scale,\n        axis,\n        dummy,\n        svg;\n    if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n        return $$.currentMaxTickWidths[id];\n    }\n    if ($$.svg) {\n        targetsToShow = $$.filterTargetsToShow($$.data.targets);\n        if (id === 'y') {\n            scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n            axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n        } else if (id === 'y2') {\n            scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n            axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n        } else {\n            scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n            axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n            this.updateXAxisTickValues(targetsToShow, axis);\n        }\n        dummy = $$.d3.select('body').append('div').classed('c3', true);\n        svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {\n            $$.d3.select(this).selectAll('text').each(function () {\n                var box = this.getBoundingClientRect();\n                if (maxWidth < box.width) {\n                    maxWidth = box.width;\n                }\n            });\n            dummy.remove();\n        });\n    }\n    $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n    return $$.currentMaxTickWidths[id];\n};\n\nAxis.prototype.updateLabels = function updateLabels(withTransition) {\n    var $$ = this.owner;\n    var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n        axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n        axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n    (withTransition ? axisXLabel.transition() : axisXLabel).attr(\"x\", this.xForXAxisLabel.bind(this)).attr(\"dx\", this.dxForXAxisLabel.bind(this)).attr(\"dy\", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));\n    (withTransition ? axisYLabel.transition() : axisYLabel).attr(\"x\", this.xForYAxisLabel.bind(this)).attr(\"dx\", this.dxForYAxisLabel.bind(this)).attr(\"dy\", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));\n    (withTransition ? axisY2Label.transition() : axisY2Label).attr(\"x\", this.xForY2AxisLabel.bind(this)).attr(\"dx\", this.dxForY2AxisLabel.bind(this)).attr(\"dy\", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));\n};\nAxis.prototype.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n    var p = typeof padding === 'number' ? padding : padding[key];\n    if (!isValue(p)) {\n        return defaultValue;\n    }\n    if (padding.unit === 'ratio') {\n        return padding[key] * domainLength;\n    }\n    // assume padding is pixels if unit is not specified\n    return this.convertPixelsToAxisPadding(p, domainLength);\n};\nAxis.prototype.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n    var $$ = this.owner,\n        length = $$.config.axis_rotated ? $$.width : $$.height;\n    return domainLength * (pixels / length);\n};\nAxis.prototype.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n    var tickValues = values,\n        targetCount,\n        start,\n        end,\n        count,\n        interval,\n        i,\n        tickValue;\n    if (tickCount) {\n        targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n        // compute ticks according to tickCount\n        if (targetCount === 1) {\n            tickValues = [values[0]];\n        } else if (targetCount === 2) {\n            tickValues = [values[0], values[values.length - 1]];\n        } else if (targetCount > 2) {\n            count = targetCount - 2;\n            start = values[0];\n            end = values[values.length - 1];\n            interval = (end - start) / (count + 1);\n            // re-construct unique values\n            tickValues = [start];\n            for (i = 0; i < count; i++) {\n                tickValue = +start + interval * (i + 1);\n                tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n            }\n            tickValues.push(end);\n        }\n    }\n    if (!forTimeSeries) {\n        tickValues = tickValues.sort(function (a, b) {\n            return a - b;\n        });\n    }\n    return tickValues;\n};\nAxis.prototype.generateTransitions = function generateTransitions(duration) {\n    var $$ = this.owner,\n        axes = $$.axes;\n    return {\n        axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n        axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n        axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n        axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n    };\n};\nAxis.prototype.redraw = function redraw(transitions, isHidden) {\n    var $$ = this.owner;\n    $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n    $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n    $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n    $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n    transitions.axisX.call($$.xAxis);\n    transitions.axisY.call($$.yAxis);\n    transitions.axisY2.call($$.y2Axis);\n    transitions.axisSubX.call($$.subXAxis);\n};\n\nvar c3$1 = { version: \"0.4.15\" };\n\nvar c3_chart_fn;\nvar c3_chart_internal_fn;\nvar c3_chart_internal_axis_fn;\n\nfunction API(owner) {\n    this.owner = owner;\n}\n\nfunction inherit(base, derived) {\n\n    if (Object.create) {\n        derived.prototype = Object.create(base.prototype);\n    } else {\n        var f = function f() {};\n        f.prototype = base.prototype;\n        derived.prototype = new f();\n    }\n\n    derived.prototype.constructor = derived;\n\n    return derived;\n}\n\nfunction Chart(config) {\n    var $$ = this.internal = new ChartInternal(this);\n    $$.loadConfig(config);\n\n    $$.beforeInit(config);\n    $$.init();\n    $$.afterInit(config);\n\n    // bind \"this\" to nested API\n    (function bindThis(fn, target, argThis) {\n        Object.keys(fn).forEach(function (key) {\n            target[key] = fn[key].bind(argThis);\n            if (Object.keys(fn[key]).length > 0) {\n                bindThis(fn[key], target[key], argThis);\n            }\n        });\n    })(c3_chart_fn, this, this);\n}\n\nfunction ChartInternal(api) {\n    var $$ = this;\n    $$.d3 = window.d3 ? window.d3 :  true ? __webpack_require__(11) : undefined;\n    $$.api = api;\n    $$.config = $$.getDefaultConfig();\n    $$.data = {};\n    $$.cache = {};\n    $$.axes = {};\n}\n\nc3$1.generate = function (config) {\n    return new Chart(config);\n};\n\nc3$1.chart = {\n    fn: Chart.prototype,\n    internal: {\n        fn: ChartInternal.prototype,\n        axis: {\n            fn: Axis.prototype\n        }\n    }\n};\nc3_chart_fn = c3$1.chart.fn;\nc3_chart_internal_fn = c3$1.chart.internal.fn;\nc3_chart_internal_axis_fn = c3$1.chart.internal.axis.fn;\n\nc3_chart_internal_fn.beforeInit = function () {\n    // can do something\n};\nc3_chart_internal_fn.afterInit = function () {\n    // can do something\n};\nc3_chart_internal_fn.init = function () {\n    var $$ = this,\n        config = $$.config;\n\n    $$.initParams();\n\n    if (config.data_url) {\n        $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n    } else if (config.data_json) {\n        $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n    } else if (config.data_rows) {\n        $$.initWithData($$.convertRowsToData(config.data_rows));\n    } else if (config.data_columns) {\n        $$.initWithData($$.convertColumnsToData(config.data_columns));\n    } else {\n        throw Error('url or json or rows or columns is required.');\n    }\n};\n\nc3_chart_internal_fn.initParams = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n\n    // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n    $$.clipId = \"c3-\" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n    $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;\n    $$.dragging = false;\n    $$.flowing = false;\n    $$.cancelClick = false;\n    $$.mouseover = false;\n    $$.transiting = false;\n\n    $$.color = $$.generateColor();\n    $$.levelColor = $$.generateLevelColor();\n\n    $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n    $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n    $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([[\".%L\", function (d) {\n        return d.getMilliseconds();\n    }], [\":%S\", function (d) {\n        return d.getSeconds();\n    }], [\"%I:%M\", function (d) {\n        return d.getMinutes();\n    }], [\"%I %p\", function (d) {\n        return d.getHours();\n    }], [\"%-m/%-d\", function (d) {\n        return d.getDay() && d.getDate() !== 1;\n    }], [\"%-m/%-d\", function (d) {\n        return d.getDate() !== 1;\n    }], [\"%-m/%-d\", function (d) {\n        return d.getMonth();\n    }], [\"%Y/%-m/%-d\", function () {\n        return true;\n    }]]);\n\n    $$.hiddenTargetIds = [];\n    $$.hiddenLegendIds = [];\n    $$.focusedTargetIds = [];\n    $$.defocusedTargetIds = [];\n\n    $$.xOrient = config.axis_rotated ? \"left\" : \"bottom\";\n    $$.yOrient = config.axis_rotated ? config.axis_y_inner ? \"top\" : \"bottom\" : config.axis_y_inner ? \"right\" : \"left\";\n    $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? \"bottom\" : \"top\" : config.axis_y2_inner ? \"left\" : \"right\";\n    $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n    $$.isLegendRight = config.legend_position === 'right';\n    $$.isLegendInset = config.legend_position === 'inset';\n    $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n    $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n    $$.legendStep = 0;\n    $$.legendItemWidth = 0;\n    $$.legendItemHeight = 0;\n\n    $$.currentMaxTickWidths = {\n        x: 0,\n        y: 0,\n        y2: 0\n    };\n\n    $$.rotated_padding_left = 30;\n    $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n    $$.rotated_padding_top = 5;\n\n    $$.withoutFadeIn = {};\n\n    $$.intervalForObserveInserted = undefined;\n\n    $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n};\n\nc3_chart_internal_fn.initChartElements = function () {\n    if (this.initBar) {\n        this.initBar();\n    }\n    if (this.initLine) {\n        this.initLine();\n    }\n    if (this.initArc) {\n        this.initArc();\n    }\n    if (this.initGauge) {\n        this.initGauge();\n    }\n    if (this.initText) {\n        this.initText();\n    }\n};\n\nc3_chart_internal_fn.initWithData = function (data) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n    var defs,\n        main,\n        binding = true;\n\n    $$.axis = new Axis($$);\n\n    if ($$.initPie) {\n        $$.initPie();\n    }\n    if ($$.initBrush) {\n        $$.initBrush();\n    }\n    if ($$.initZoom) {\n        $$.initZoom();\n    }\n\n    if (!config.bindto) {\n        $$.selectChart = d3.selectAll([]);\n    } else if (typeof config.bindto.node === 'function') {\n        $$.selectChart = config.bindto;\n    } else {\n        $$.selectChart = d3.select(config.bindto);\n    }\n    if ($$.selectChart.empty()) {\n        $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n        $$.observeInserted($$.selectChart);\n        binding = false;\n    }\n    $$.selectChart.html(\"\").classed(\"c3\", true);\n\n    // Init data as targets\n    $$.data.xs = {};\n    $$.data.targets = $$.convertDataToTargets(data);\n\n    if (config.data_filter) {\n        $$.data.targets = $$.data.targets.filter(config.data_filter);\n    }\n\n    // Set targets to hide if needed\n    if (config.data_hide) {\n        $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n    }\n    if (config.legend_hide) {\n        $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n    }\n\n    // when gauge, hide legend // TODO: fix\n    if ($$.hasType('gauge')) {\n        config.legend_show = false;\n    }\n\n    // Init sizes and scales\n    $$.updateSizes();\n    $$.updateScales();\n\n    // Set domains for each scale\n    $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n    $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n    $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n    $$.subX.domain($$.x.domain());\n    $$.subY.domain($$.y.domain());\n    $$.subY2.domain($$.y2.domain());\n\n    // Save original x domain for zoom update\n    $$.orgXDomain = $$.x.domain();\n\n    // Set initialized scales to brush and zoom\n    if ($$.brush) {\n        $$.brush.scale($$.subX);\n    }\n    if (config.zoom_enabled) {\n        $$.zoom.scale($$.x);\n    }\n\n    /*-- Basic Elements --*/\n\n    // Define svgs\n    $$.svg = $$.selectChart.append(\"svg\").style(\"overflow\", \"hidden\").on('mouseenter', function () {\n        return config.onmouseover.call($$);\n    }).on('mouseleave', function () {\n        return config.onmouseout.call($$);\n    });\n\n    if ($$.config.svg_classname) {\n        $$.svg.attr('class', $$.config.svg_classname);\n    }\n\n    // Define defs\n    defs = $$.svg.append(\"defs\");\n    $$.clipChart = $$.appendClip(defs, $$.clipId);\n    $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n    $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n    $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n    $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n    $$.updateSvgSize();\n\n    // Define regions\n    main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n    if ($$.initSubchart) {\n        $$.initSubchart();\n    }\n    if ($$.initTooltip) {\n        $$.initTooltip();\n    }\n    if ($$.initLegend) {\n        $$.initLegend();\n    }\n    if ($$.initTitle) {\n        $$.initTitle();\n    }\n\n    /*-- Main Region --*/\n\n    // text when empty\n    main.append(\"text\").attr(\"class\", CLASS.text + ' ' + CLASS.empty).attr(\"text-anchor\", \"middle\" // horizontal centering of text at x position in all browsers.\n    ).attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n    // Regions\n    $$.initRegion();\n\n    // Grids\n    $$.initGrid();\n\n    // Define g for chart area\n    main.append('g').attr(\"clip-path\", $$.clipPath).attr('class', CLASS.chart);\n\n    // Grid lines\n    if (config.grid_lines_front) {\n        $$.initGridLines();\n    }\n\n    // Cover whole with rects for events\n    $$.initEventRect();\n\n    // Define g for chart\n    $$.initChartElements();\n\n    // if zoom privileged, insert rect to forefront\n    // TODO: is this needed?\n    main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions).attr('class', CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height).style('opacity', 0).on(\"dblclick.zoom\", null);\n\n    // Set default extent if defined\n    if (config.axis_x_extent) {\n        $$.brush.extent($$.getDefaultExtent());\n    }\n\n    // Add Axis\n    $$.axis.init();\n\n    // Set targets\n    $$.updateTargets($$.data.targets);\n\n    // Draw with targets\n    if (binding) {\n        $$.updateDimension();\n        $$.config.oninit.call($$);\n        $$.redraw({\n            withTransition: false,\n            withTransform: true,\n            withUpdateXDomain: true,\n            withUpdateOrgXDomain: true,\n            withTransitionForAxis: false\n        });\n    }\n\n    // Bind resize event\n    $$.bindResize();\n\n    // export element of the chart\n    $$.api.element = $$.selectChart.node();\n};\n\nc3_chart_internal_fn.smoothLines = function (el, type) {\n    var $$ = this;\n    if (type === 'grid') {\n        el.each(function () {\n            var g = $$.d3.select(this),\n                x1 = g.attr('x1'),\n                x2 = g.attr('x2'),\n                y1 = g.attr('y1'),\n                y2 = g.attr('y2');\n            g.attr({\n                'x1': Math.ceil(x1),\n                'x2': Math.ceil(x2),\n                'y1': Math.ceil(y1),\n                'y2': Math.ceil(y2)\n            });\n        });\n    }\n};\n\nc3_chart_internal_fn.updateSizes = function () {\n    var $$ = this,\n        config = $$.config;\n    var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n        legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n        legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n        hasArc = $$.hasArcType(),\n        xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n        subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;\n\n    $$.currentWidth = $$.getCurrentWidth();\n    $$.currentHeight = $$.getCurrentHeight();\n\n    // for main\n    $$.margin = config.axis_rotated ? {\n        top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n        right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n        bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n        left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n    } : {\n        top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n        right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n        bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n        left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n    };\n\n    // for subchart\n    $$.margin2 = config.axis_rotated ? {\n        top: $$.margin.top,\n        right: NaN,\n        bottom: 20 + legendHeightForBottom,\n        left: $$.rotated_padding_left\n    } : {\n        top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n        right: NaN,\n        bottom: xAxisHeight + legendHeightForBottom,\n        left: $$.margin.left\n    };\n\n    // for legend\n    $$.margin3 = {\n        top: 0,\n        right: NaN,\n        bottom: 0,\n        left: 0\n    };\n    if ($$.updateSizeForLegend) {\n        $$.updateSizeForLegend(legendHeight, legendWidth);\n    }\n\n    $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n    $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n    if ($$.width < 0) {\n        $$.width = 0;\n    }\n    if ($$.height < 0) {\n        $$.height = 0;\n    }\n\n    $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n    $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n    if ($$.width2 < 0) {\n        $$.width2 = 0;\n    }\n    if ($$.height2 < 0) {\n        $$.height2 = 0;\n    }\n\n    // for arc\n    $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n    $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n    if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n        $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n    }\n    if ($$.updateRadius) {\n        $$.updateRadius();\n    }\n\n    if ($$.isLegendRight && hasArc) {\n        $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n    }\n};\n\nc3_chart_internal_fn.updateTargets = function (targets) {\n    var $$ = this;\n\n    /*-- Main --*/\n\n    //-- Text --//\n    $$.updateTargetsForText(targets);\n\n    //-- Bar --//\n    $$.updateTargetsForBar(targets);\n\n    //-- Line --//\n    $$.updateTargetsForLine(targets);\n\n    //-- Arc --//\n    if ($$.hasArcType() && $$.updateTargetsForArc) {\n        $$.updateTargetsForArc(targets);\n    }\n\n    /*-- Sub --*/\n\n    if ($$.updateTargetsForSubchart) {\n        $$.updateTargetsForSubchart(targets);\n    }\n\n    // Fade-in each chart\n    $$.showTargets();\n};\nc3_chart_internal_fn.showTargets = function () {\n    var $$ = this;\n    $$.svg.selectAll('.' + CLASS.target).filter(function (d) {\n        return $$.isTargetToShow(d.id);\n    }).transition().duration($$.config.transition_duration).style(\"opacity\", 1);\n};\n\nc3_chart_internal_fn.redraw = function (options, transitions) {\n    var $$ = this,\n        main = $$.main,\n        d3 = $$.d3,\n        config = $$.config;\n    var areaIndices = $$.getShapeIndices($$.isAreaType),\n        barIndices = $$.getShapeIndices($$.isBarType),\n        lineIndices = $$.getShapeIndices($$.isLineType);\n    var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\n    var hideAxis = $$.hasArcType();\n    var drawArea, drawBar, drawLine, xForText, yForText;\n    var duration, durationForExit, durationForAxis;\n    var waitForDraw, flow;\n    var targetsToShow = $$.filterTargetsToShow($$.data.targets),\n        tickValues,\n        i,\n        intervalForCulling,\n        xDomainForZoom;\n    var xv = $$.xv.bind($$),\n        cx,\n        cy;\n\n    options = options || {};\n    withY = getOption(options, \"withY\", true);\n    withSubchart = getOption(options, \"withSubchart\", true);\n    withTransition = getOption(options, \"withTransition\", true);\n    withTransform = getOption(options, \"withTransform\", false);\n    withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n    withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n    withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n    withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n    withLegend = getOption(options, \"withLegend\", false);\n    withEventRect = getOption(options, \"withEventRect\", true);\n    withDimension = getOption(options, \"withDimension\", true);\n    withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n    withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n    duration = withTransition ? config.transition_duration : 0;\n    durationForExit = withTransitionForExit ? duration : 0;\n    durationForAxis = withTransitionForAxis ? duration : 0;\n\n    transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n    // update legend and transform each g\n    if (withLegend && config.legend_show) {\n        $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n    } else if (withDimension) {\n        // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n        // no need to update axis in it because they will be updated in redraw()\n        $$.updateDimension(true);\n    }\n\n    // MEMO: needed for grids calculation\n    if ($$.isCategorized() && targetsToShow.length === 0) {\n        $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n    }\n\n    if (targetsToShow.length) {\n        $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n        if (!config.axis_x_tick_values) {\n            tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n        }\n    } else {\n        $$.xAxis.tickValues([]);\n        $$.subXAxis.tickValues([]);\n    }\n\n    if (config.zoom_rescale && !options.flow) {\n        xDomainForZoom = $$.x.orgDomain();\n    }\n\n    $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n    $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n    if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n        $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n    }\n    if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n        $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n    }\n\n    // axes\n    $$.axis.redraw(transitions, hideAxis);\n\n    // Update axis label\n    $$.axis.updateLabels(withTransition);\n\n    // show/hide if manual culling needed\n    if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n        if (config.axis_x_tick_culling && tickValues) {\n            for (i = 1; i < tickValues.length; i++) {\n                if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                    intervalForCulling = i;\n                    break;\n                }\n            }\n            $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                var index = tickValues.indexOf(e);\n                if (index >= 0) {\n                    d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                }\n            });\n        } else {\n            $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n        }\n    }\n\n    // setup drawer - MEMO: these must be called after axis updated\n    drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n    drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n    drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n    xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n    yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n    // Update sub domain\n    if (withY) {\n        $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n        $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n    }\n\n    // xgrid focus\n    $$.updateXgridFocus();\n\n    // Data empty label positioning and text.\n    main.select(\"text.\" + CLASS.text + '.' + CLASS.empty).attr(\"x\", $$.width / 2).attr(\"y\", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1);\n\n    // grid\n    $$.updateGrid(duration);\n\n    // rect for regions\n    $$.updateRegion(duration);\n\n    // bars\n    $$.updateBar(durationForExit);\n\n    // lines, areas and cricles\n    $$.updateLine(durationForExit);\n    $$.updateArea(durationForExit);\n    $$.updateCircle();\n\n    // text\n    if ($$.hasDataLabel()) {\n        $$.updateText(durationForExit);\n    }\n\n    // title\n    if ($$.redrawTitle) {\n        $$.redrawTitle();\n    }\n\n    // arc\n    if ($$.redrawArc) {\n        $$.redrawArc(duration, durationForExit, withTransform);\n    }\n\n    // subchart\n    if ($$.redrawSubchart) {\n        $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n    }\n\n    // circles for select\n    main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove();\n\n    // event rects will redrawn when flow called\n    if (config.interaction_enabled && !options.flow && withEventRect) {\n        $$.redrawEventRect();\n        if ($$.updateZoom) {\n            $$.updateZoom();\n        }\n    }\n\n    // update circleY based on updated parameters\n    $$.updateCircleY();\n\n    // generate circle x/y functions depending on updated params\n    cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n    cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n    if (options.flow) {\n        flow = $$.generateFlow({\n            targets: targetsToShow,\n            flow: options.flow,\n            duration: options.flow.duration,\n            drawBar: drawBar,\n            drawLine: drawLine,\n            drawArea: drawArea,\n            cx: cx,\n            cy: cy,\n            xv: xv,\n            xForText: xForText,\n            yForText: yForText\n        });\n    }\n\n    if ((duration || flow) && $$.isTabVisible()) {\n        // Only use transition if tab visible. See #938.\n        // transition should be derived from one transition\n        d3.transition().duration(duration).each(function () {\n            var transitionsToWait = [];\n\n            // redraw and gather transitions\n            [$$.redrawBar(drawBar, true), $$.redrawLine(drawLine, true), $$.redrawArea(drawArea, true), $$.redrawCircle(cx, cy, true), $$.redrawText(xForText, yForText, options.flow, true), $$.redrawRegion(true), $$.redrawGrid(true)].forEach(function (transitions) {\n                transitions.forEach(function (transition) {\n                    transitionsToWait.push(transition);\n                });\n            });\n\n            // Wait for end of transitions to call flow and onrendered callback\n            waitForDraw = $$.generateWait();\n            transitionsToWait.forEach(function (t) {\n                waitForDraw.add(t);\n            });\n        }).call(waitForDraw, function () {\n            if (flow) {\n                flow();\n            }\n            if (config.onrendered) {\n                config.onrendered.call($$);\n            }\n        });\n    } else {\n        $$.redrawBar(drawBar);\n        $$.redrawLine(drawLine);\n        $$.redrawArea(drawArea);\n        $$.redrawCircle(cx, cy);\n        $$.redrawText(xForText, yForText, options.flow);\n        $$.redrawRegion();\n        $$.redrawGrid();\n        if (config.onrendered) {\n            config.onrendered.call($$);\n        }\n    }\n\n    // update fadein condition\n    $$.mapToIds($$.data.targets).forEach(function (id) {\n        $$.withoutFadeIn[id] = true;\n    });\n};\n\nc3_chart_internal_fn.updateAndRedraw = function (options) {\n    var $$ = this,\n        config = $$.config,\n        transitions;\n    options = options || {};\n    // same with redraw\n    options.withTransition = getOption(options, \"withTransition\", true);\n    options.withTransform = getOption(options, \"withTransform\", false);\n    options.withLegend = getOption(options, \"withLegend\", false);\n    // NOT same with redraw\n    options.withUpdateXDomain = true;\n    options.withUpdateOrgXDomain = true;\n    options.withTransitionForExit = false;\n    options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n    // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n    $$.updateSizes();\n    // MEMO: called in updateLegend in redraw if withLegend\n    if (!(options.withLegend && config.legend_show)) {\n        transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n        // Update scales\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(options.withTransitionForTransform, transitions);\n    }\n    // Draw with new sizes & scales\n    $$.redraw(options, transitions);\n};\nc3_chart_internal_fn.redrawWithoutRescale = function () {\n    this.redraw({\n        withY: false,\n        withSubchart: false,\n        withEventRect: false,\n        withTransitionForAxis: false\n    });\n};\n\nc3_chart_internal_fn.isTimeSeries = function () {\n    return this.config.axis_x_type === 'timeseries';\n};\nc3_chart_internal_fn.isCategorized = function () {\n    return this.config.axis_x_type.indexOf('categor') >= 0;\n};\nc3_chart_internal_fn.isCustomX = function () {\n    var $$ = this,\n        config = $$.config;\n    return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n};\n\nc3_chart_internal_fn.isTimeSeriesY = function () {\n    return this.config.axis_y_type === 'timeseries';\n};\n\nc3_chart_internal_fn.getTranslate = function (target) {\n    var $$ = this,\n        config = $$.config,\n        x,\n        y;\n    if (target === 'main') {\n        x = asHalfPixel($$.margin.left);\n        y = asHalfPixel($$.margin.top);\n    } else if (target === 'context') {\n        x = asHalfPixel($$.margin2.left);\n        y = asHalfPixel($$.margin2.top);\n    } else if (target === 'legend') {\n        x = $$.margin3.left;\n        y = $$.margin3.top;\n    } else if (target === 'x') {\n        x = 0;\n        y = config.axis_rotated ? 0 : $$.height;\n    } else if (target === 'y') {\n        x = 0;\n        y = config.axis_rotated ? $$.height : 0;\n    } else if (target === 'y2') {\n        x = config.axis_rotated ? 0 : $$.width;\n        y = config.axis_rotated ? 1 : 0;\n    } else if (target === 'subx') {\n        x = 0;\n        y = config.axis_rotated ? 0 : $$.height2;\n    } else if (target === 'arc') {\n        x = $$.arcWidth / 2;\n        y = $$.arcHeight / 2;\n    }\n    return \"translate(\" + x + \",\" + y + \")\";\n};\nc3_chart_internal_fn.initialOpacity = function (d) {\n    return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n};\nc3_chart_internal_fn.initialOpacityForCircle = function (d) {\n    return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n};\nc3_chart_internal_fn.opacityForCircle = function (d) {\n    var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;\n    var opacity = isPointShouldBeShown ? 1 : 0;\n    return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;\n};\nc3_chart_internal_fn.opacityForText = function () {\n    return this.hasDataLabel() ? 1 : 0;\n};\nc3_chart_internal_fn.xx = function (d) {\n    return d ? this.x(d.x) : null;\n};\nc3_chart_internal_fn.xv = function (d) {\n    var $$ = this,\n        value = d.value;\n    if ($$.isTimeSeries()) {\n        value = $$.parseDate(d.value);\n    } else if ($$.isCategorized() && typeof d.value === 'string') {\n        value = $$.config.axis_x_categories.indexOf(d.value);\n    }\n    return Math.ceil($$.x(value));\n};\nc3_chart_internal_fn.yv = function (d) {\n    var $$ = this,\n        yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n    return Math.ceil(yScale(d.value));\n};\nc3_chart_internal_fn.subxx = function (d) {\n    return d ? this.subX(d.x) : null;\n};\n\nc3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n    var $$ = this,\n        xAxis,\n        yAxis,\n        y2Axis;\n    if (transitions && transitions.axisX) {\n        xAxis = transitions.axisX;\n    } else {\n        xAxis = $$.main.select('.' + CLASS.axisX);\n        if (withTransition) {\n            xAxis = xAxis.transition();\n        }\n    }\n    if (transitions && transitions.axisY) {\n        yAxis = transitions.axisY;\n    } else {\n        yAxis = $$.main.select('.' + CLASS.axisY);\n        if (withTransition) {\n            yAxis = yAxis.transition();\n        }\n    }\n    if (transitions && transitions.axisY2) {\n        y2Axis = transitions.axisY2;\n    } else {\n        y2Axis = $$.main.select('.' + CLASS.axisY2);\n        if (withTransition) {\n            y2Axis = y2Axis.transition();\n        }\n    }\n    (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n    xAxis.attr(\"transform\", $$.getTranslate('x'));\n    yAxis.attr(\"transform\", $$.getTranslate('y'));\n    y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n    $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n};\nc3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n    var $$ = this;\n    $$.transformMain(withTransition, transitions);\n    if ($$.config.subchart_show) {\n        $$.transformContext(withTransition, transitions);\n    }\n    if ($$.legend) {\n        $$.transformLegend(withTransition);\n    }\n};\n\nc3_chart_internal_fn.updateSvgSize = function () {\n    var $$ = this,\n        brush = $$.svg.select(\".c3-brush .background\");\n    $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n    $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);\n    $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));\n    $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));\n    $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);\n    $$.svg.select('.' + CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height);\n    // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n    $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n};\n\nc3_chart_internal_fn.updateDimension = function (withoutAxis) {\n    var $$ = this;\n    if (!withoutAxis) {\n        if ($$.config.axis_rotated) {\n            $$.axes.x.call($$.xAxis);\n            $$.axes.subx.call($$.subXAxis);\n        } else {\n            $$.axes.y.call($$.yAxis);\n            $$.axes.y2.call($$.y2Axis);\n        }\n    }\n    $$.updateSizes();\n    $$.updateScales();\n    $$.updateSvgSize();\n    $$.transformAll(false);\n};\n\nc3_chart_internal_fn.observeInserted = function (selection) {\n    var $$ = this,\n        observer;\n    if (typeof MutationObserver === 'undefined') {\n        window.console.error(\"MutationObserver not defined.\");\n        return;\n    }\n    observer = new MutationObserver(function (mutations) {\n        mutations.forEach(function (mutation) {\n            if (mutation.type === 'childList' && mutation.previousSibling) {\n                observer.disconnect();\n                // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                $$.intervalForObserveInserted = window.setInterval(function () {\n                    // parentNode will NOT be null when completed\n                    if (selection.node().parentNode) {\n                        window.clearInterval($$.intervalForObserveInserted);\n                        $$.updateDimension();\n                        if ($$.brush) {\n                            $$.brush.update();\n                        }\n                        $$.config.oninit.call($$);\n                        $$.redraw({\n                            withTransform: true,\n                            withUpdateXDomain: true,\n                            withUpdateOrgXDomain: true,\n                            withTransition: false,\n                            withTransitionForTransform: false,\n                            withLegend: true\n                        });\n                        selection.transition().style('opacity', 1);\n                    }\n                }, 10);\n            }\n        });\n    });\n    observer.observe(selection.node(), { attributes: true, childList: true, characterData: true });\n};\n\nc3_chart_internal_fn.bindResize = function () {\n    var $$ = this,\n        config = $$.config;\n\n    $$.resizeFunction = $$.generateResize();\n\n    $$.resizeFunction.add(function () {\n        config.onresize.call($$);\n    });\n    if (config.resize_auto) {\n        $$.resizeFunction.add(function () {\n            if ($$.resizeTimeout !== undefined) {\n                window.clearTimeout($$.resizeTimeout);\n            }\n            $$.resizeTimeout = window.setTimeout(function () {\n                delete $$.resizeTimeout;\n                $$.api.flush();\n            }, 100);\n        });\n    }\n    $$.resizeFunction.add(function () {\n        config.onresized.call($$);\n    });\n\n    if (window.attachEvent) {\n        window.attachEvent('onresize', $$.resizeFunction);\n    } else if (window.addEventListener) {\n        window.addEventListener('resize', $$.resizeFunction, false);\n    } else {\n        // fallback to this, if this is a very old browser\n        var wrapper = window.onresize;\n        if (!wrapper) {\n            // create a wrapper that will call all charts\n            wrapper = $$.generateResize();\n        } else if (!wrapper.add || !wrapper.remove) {\n            // there is already a handler registered, make sure we call it too\n            wrapper = $$.generateResize();\n            wrapper.add(window.onresize);\n        }\n        // add this graph to the wrapper, we will be removed if the user calls destroy\n        wrapper.add($$.resizeFunction);\n        window.onresize = wrapper;\n    }\n};\n\nc3_chart_internal_fn.generateResize = function () {\n    var resizeFunctions = [];\n    function callResizeFunctions() {\n        resizeFunctions.forEach(function (f) {\n            f();\n        });\n    }\n    callResizeFunctions.add = function (f) {\n        resizeFunctions.push(f);\n    };\n    callResizeFunctions.remove = function (f) {\n        for (var i = 0; i < resizeFunctions.length; i++) {\n            if (resizeFunctions[i] === f) {\n                resizeFunctions.splice(i, 1);\n                break;\n            }\n        }\n    };\n    return callResizeFunctions;\n};\n\nc3_chart_internal_fn.endall = function (transition, callback) {\n    var n = 0;\n    transition.each(function () {\n        ++n;\n    }).each(\"end\", function () {\n        if (! --n) {\n            callback.apply(this, arguments);\n        }\n    });\n};\nc3_chart_internal_fn.generateWait = function () {\n    var transitionsToWait = [],\n        f = function f(transition, callback) {\n        var timer = setInterval(function () {\n            var done = 0;\n            transitionsToWait.forEach(function (t) {\n                if (t.empty()) {\n                    done += 1;\n                    return;\n                }\n                try {\n                    t.transition();\n                } catch (e) {\n                    done += 1;\n                }\n            });\n            if (done === transitionsToWait.length) {\n                clearInterval(timer);\n                if (callback) {\n                    callback();\n                }\n            }\n        }, 10);\n    };\n    f.add = function (transition) {\n        transitionsToWait.push(transition);\n    };\n    return f;\n};\n\nc3_chart_internal_fn.parseDate = function (date) {\n    var $$ = this,\n        parsedDate;\n    if (date instanceof Date) {\n        parsedDate = date;\n    } else if (typeof date === 'string') {\n        parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n    } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {\n        parsedDate = new Date(+date);\n    } else if (typeof date === 'number' && !isNaN(date)) {\n        parsedDate = new Date(+date);\n    }\n    if (!parsedDate || isNaN(+parsedDate)) {\n        window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n    }\n    return parsedDate;\n};\n\nc3_chart_internal_fn.isTabVisible = function () {\n    var hidden;\n    if (typeof document.hidden !== \"undefined\") {\n        // Opera 12.10 and Firefox 18 and later support\n        hidden = \"hidden\";\n    } else if (typeof document.mozHidden !== \"undefined\") {\n        hidden = \"mozHidden\";\n    } else if (typeof document.msHidden !== \"undefined\") {\n        hidden = \"msHidden\";\n    } else if (typeof document.webkitHidden !== \"undefined\") {\n        hidden = \"webkitHidden\";\n    }\n\n    return document[hidden] ? false : true;\n};\n\nc3_chart_internal_fn.isValue = isValue;\nc3_chart_internal_fn.isFunction = isFunction;\nc3_chart_internal_fn.isString = isString;\nc3_chart_internal_fn.isUndefined = isUndefined;\nc3_chart_internal_fn.isDefined = isDefined;\nc3_chart_internal_fn.ceil10 = ceil10;\nc3_chart_internal_fn.asHalfPixel = asHalfPixel;\nc3_chart_internal_fn.diffDomain = diffDomain;\nc3_chart_internal_fn.isEmpty = isEmpty;\nc3_chart_internal_fn.notEmpty = notEmpty;\nc3_chart_internal_fn.notEmpty = notEmpty;\nc3_chart_internal_fn.getOption = getOption;\nc3_chart_internal_fn.hasValue = hasValue;\nc3_chart_internal_fn.sanitise = sanitise;\nc3_chart_internal_fn.getPathBox = getPathBox;\nc3_chart_internal_fn.CLASS = CLASS;\n\n/* jshint ignore:start */\n\n// PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n// this polyfill to avoid the confusion.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== 'function') {\n            // closest thing possible to the ECMAScript 5\n            // internal IsCallable function\n            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function fNOP() {},\n            fBound = function fBound() {\n            return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\n// SVGPathSeg API polyfill\n// https://github.com/progers/pathseg\n//\n// This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n// SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n// changes which were implemented in Firefox 43 and Chrome 46.\n\n(function () {\n    \"use strict\";\n\n    if (!(\"SVGPathSeg\" in window)) {\n        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n        window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\n            this.pathSegType = type;\n            this.pathSegTypeAsLetter = typeAsLetter;\n            this._owningPathSegList = owningPathSegList;\n        };\n\n        window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\n\n        window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\n        window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n        window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n        window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n        window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n        window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\n        window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n        window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n        window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n        window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n        window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\n        window.SVGPathSeg.PATHSEG_ARC_REL = 11;\n        window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n        window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n        window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n        window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n        window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n        window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n        window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n        window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n        // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n        window.SVGPathSeg.prototype._segmentChanged = function () {\n            if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);\n        };\n\n        window.SVGPathSegClosePath = function (owningPathSegList) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n        };\n        window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegClosePath.prototype.toString = function () {\n            return \"[object SVGPathSegClosePath]\";\n        };\n        window.SVGPathSegClosePath.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter;\n        };\n        window.SVGPathSegClosePath.prototype.clone = function () {\n            return new window.SVGPathSegClosePath(undefined);\n        };\n\n        window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegMovetoAbs.prototype.toString = function () {\n            return \"[object SVGPathSegMovetoAbs]\";\n        };\n        window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegMovetoAbs.prototype.clone = function () {\n            return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegMovetoRel.prototype.toString = function () {\n            return \"[object SVGPathSegMovetoRel]\";\n        };\n        window.SVGPathSegMovetoRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegMovetoRel.prototype.clone = function () {\n            return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoAbs.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoAbs]\";\n        };\n        window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegLinetoAbs.prototype.clone = function () {\n            return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoRel.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoRel]\";\n        };\n        window.SVGPathSegLinetoRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegLinetoRel.prototype.clone = function () {\n            return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x1 = x1;\n            this._y1 = y1;\n            this._x2 = x2;\n            this._y2 = y2;\n        };\n        window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoCubicAbs]\";\n        };\n        window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function get() {\n                return this._x1;\n            }, set: function set(x1) {\n                this._x1 = x1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function get() {\n                return this._y1;\n            }, set: function set(y1) {\n                this._y1 = y1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function get() {\n                return this._x2;\n            }, set: function set(x2) {\n                this._x2 = x2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function get() {\n                return this._y2;\n            }, set: function set(y2) {\n                this._y2 = y2;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x1 = x1;\n            this._y1 = y1;\n            this._x2 = x2;\n            this._y2 = y2;\n        };\n        window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoCubicRel]\";\n        };\n        window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function get() {\n                return this._x1;\n            }, set: function set(x1) {\n                this._x1 = x1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function get() {\n                return this._y1;\n            }, set: function set(y1) {\n                this._y1 = y1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function get() {\n                return this._x2;\n            }, set: function set(x2) {\n                this._x2 = x2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function get() {\n                return this._y2;\n            }, set: function set(y2) {\n                this._y2 = y2;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x1 = x1;\n            this._y1 = y1;\n        };\n        window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoQuadraticAbs]\";\n        };\n        window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function get() {\n                return this._x1;\n            }, set: function set(x1) {\n                this._x1 = x1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function get() {\n                return this._y1;\n            }, set: function set(y1) {\n                this._y1 = y1;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x1 = x1;\n            this._y1 = y1;\n        };\n        window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoQuadraticRel]\";\n        };\n        window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function get() {\n                return this._x1;\n            }, set: function set(x1) {\n                this._x1 = x1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function get() {\n                return this._y1;\n            }, set: function set(y1) {\n                this._y1 = y1;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._r1 = r1;\n            this._r2 = r2;\n            this._angle = angle;\n            this._largeArcFlag = largeArcFlag;\n            this._sweepFlag = sweepFlag;\n        };\n        window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegArcAbs.prototype.toString = function () {\n            return \"[object SVGPathSegArcAbs]\";\n        };\n        window.SVGPathSegArcAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegArcAbs.prototype.clone = function () {\n            return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n        };\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", { get: function get() {\n                return this._r1;\n            }, set: function set(r1) {\n                this._r1 = r1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", { get: function get() {\n                return this._r2;\n            }, set: function set(r2) {\n                this._r2 = r2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", { get: function get() {\n                return this._angle;\n            }, set: function set(angle) {\n                this._angle = angle;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function get() {\n                return this._largeArcFlag;\n            }, set: function set(largeArcFlag) {\n                this._largeArcFlag = largeArcFlag;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function get() {\n                return this._sweepFlag;\n            }, set: function set(sweepFlag) {\n                this._sweepFlag = sweepFlag;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._r1 = r1;\n            this._r2 = r2;\n            this._angle = angle;\n            this._largeArcFlag = largeArcFlag;\n            this._sweepFlag = sweepFlag;\n        };\n        window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegArcRel.prototype.toString = function () {\n            return \"[object SVGPathSegArcRel]\";\n        };\n        window.SVGPathSegArcRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegArcRel.prototype.clone = function () {\n            return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n        };\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", { get: function get() {\n                return this._r1;\n            }, set: function set(r1) {\n                this._r1 = r1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", { get: function get() {\n                return this._r2;\n            }, set: function set(r2) {\n                this._r2 = r2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", { get: function get() {\n                return this._angle;\n            }, set: function set(angle) {\n                this._angle = angle;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function get() {\n                return this._largeArcFlag;\n            }, set: function set(largeArcFlag) {\n                this._largeArcFlag = largeArcFlag;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function get() {\n                return this._sweepFlag;\n            }, set: function set(sweepFlag) {\n                this._sweepFlag = sweepFlag;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n            this._x = x;\n        };\n        window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoHorizontalAbs]\";\n        };\n        window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x;\n        };\n        window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\n            return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n            this._x = x;\n        };\n        window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoHorizontalRel]\";\n        };\n        window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x;\n        };\n        window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\n            return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n            this._y = y;\n        };\n        window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoVerticalAbs]\";\n        };\n        window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._y;\n        };\n        window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\n            return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n            this._y = y;\n        };\n        window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoVerticalRel]\";\n        };\n        window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._y;\n        };\n        window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\n            return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x2 = x2;\n            this._y2 = y2;\n        };\n        window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\n        };\n        window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function get() {\n                return this._x2;\n            }, set: function set(x2) {\n                this._x2 = x2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function get() {\n                return this._y2;\n            }, set: function set(y2) {\n                this._y2 = y2;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x2 = x2;\n            this._y2 = y2;\n        };\n        window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\n        };\n        window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function get() {\n                return this._x2;\n            }, set: function set(x2) {\n                this._x2 = x2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function get() {\n                return this._y2;\n            }, set: function set(y2) {\n                this._y2 = y2;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        // Add createSVGPathSeg* functions to window.SVGPathElement.\n        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\n        window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\n            return new window.SVGPathSegClosePath(undefined);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\n            return new window.SVGPathSegMovetoAbs(undefined, x, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\n            return new window.SVGPathSegMovetoRel(undefined, x, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\n            return new window.SVGPathSegLinetoAbs(undefined, x, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\n            return new window.SVGPathSegLinetoRel(undefined, x, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\n            return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\n            return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\n            return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\n            return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n            return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n            return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\n            return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\n            return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\n            return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\n            return new window.SVGPathSegLinetoVerticalRel(undefined, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\n            return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\n            return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\n            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\n            return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\n        };\n\n        if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\n            // Add getPathSegAtLength to SVGPathElement.\n            // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\n            // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\n            window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\n                if (distance === undefined || !isFinite(distance)) throw \"Invalid arguments.\";\n\n                var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\n                var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\n\n                // If the path is empty, return 0.\n                if (lastPathSegment <= 0) return 0;\n\n                do {\n                    measurementElement.pathSegList.removeItem(lastPathSegment);\n                    if (distance > measurementElement.getTotalLength()) break;\n                    lastPathSegment--;\n                } while (lastPathSegment > 0);\n                return lastPathSegment;\n            };\n        }\n    }\n\n    if (!(\"SVGPathSegList\" in window)) {\n        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n        window.SVGPathSegList = function (pathElement) {\n            this._pathElement = pathElement;\n            this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n            // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n            this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n            this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n            this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n        };\n\n        window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\n\n        Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\n            get: function get() {\n                this._checkPathSynchronizedToList();\n                return this._list.length;\n            },\n            enumerable: true\n        });\n\n        // Add the pathSegList accessors to window.SVGPathElement.\n        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n        Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\n            get: function get() {\n                if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);\n                return this._pathSegList;\n            },\n            enumerable: true\n        });\n        // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\n        Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", { get: function get() {\n                return this.pathSegList;\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", { get: function get() {\n                return this.pathSegList;\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function get() {\n                return this.pathSegList;\n            }, enumerable: true });\n\n        // Process any pending mutations to the path element and update the list as needed.\n        // This should be the first call of all public functions and is needed because\n        // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n        window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\n            this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n        };\n\n        window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\n            if (!this._pathElement) return;\n            var hasPathMutations = false;\n            mutationRecords.forEach(function (record) {\n                if (record.attributeName == \"d\") hasPathMutations = true;\n            });\n            if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n        };\n\n        // Serialize the list and update the path's 'd' attribute.\n        window.SVGPathSegList.prototype._writeListToPath = function () {\n            this._pathElementMutationObserver.disconnect();\n            this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\n            this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n        };\n\n        // When a path segment changes the list needs to be synchronized back to the path element.\n        window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\n            this._writeListToPath();\n        };\n\n        window.SVGPathSegList.prototype.clear = function () {\n            this._checkPathSynchronizedToList();\n\n            this._list.forEach(function (pathSeg) {\n                pathSeg._owningPathSegList = null;\n            });\n            this._list = [];\n            this._writeListToPath();\n        };\n\n        window.SVGPathSegList.prototype.initialize = function (newItem) {\n            this._checkPathSynchronizedToList();\n\n            this._list = [newItem];\n            newItem._owningPathSegList = this;\n            this._writeListToPath();\n            return newItem;\n        };\n\n        window.SVGPathSegList.prototype._checkValidIndex = function (index) {\n            if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw \"INDEX_SIZE_ERR\";\n        };\n\n        window.SVGPathSegList.prototype.getItem = function (index) {\n            this._checkPathSynchronizedToList();\n\n            this._checkValidIndex(index);\n            return this._list[index];\n        };\n\n        window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\n            this._checkPathSynchronizedToList();\n\n            // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n            if (index > this.numberOfItems) index = this.numberOfItems;\n            if (newItem._owningPathSegList) {\n                // SVG2 spec says to make a copy.\n                newItem = newItem.clone();\n            }\n            this._list.splice(index, 0, newItem);\n            newItem._owningPathSegList = this;\n            this._writeListToPath();\n            return newItem;\n        };\n\n        window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\n            this._checkPathSynchronizedToList();\n\n            if (newItem._owningPathSegList) {\n                // SVG2 spec says to make a copy.\n                newItem = newItem.clone();\n            }\n            this._checkValidIndex(index);\n            this._list[index] = newItem;\n            newItem._owningPathSegList = this;\n            this._writeListToPath();\n            return newItem;\n        };\n\n        window.SVGPathSegList.prototype.removeItem = function (index) {\n            this._checkPathSynchronizedToList();\n\n            this._checkValidIndex(index);\n            var item = this._list[index];\n            this._list.splice(index, 1);\n            this._writeListToPath();\n            return item;\n        };\n\n        window.SVGPathSegList.prototype.appendItem = function (newItem) {\n            this._checkPathSynchronizedToList();\n\n            if (newItem._owningPathSegList) {\n                // SVG2 spec says to make a copy.\n                newItem = newItem.clone();\n            }\n            this._list.push(newItem);\n            newItem._owningPathSegList = this;\n            // TODO: Optimize this to just append to the existing attribute.\n            this._writeListToPath();\n            return newItem;\n        };\n\n        window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\n            var string = \"\";\n            var first = true;\n            pathSegArray.forEach(function (pathSeg) {\n                if (first) {\n                    first = false;\n                    string += pathSeg._asPathString();\n                } else {\n                    string += \" \" + pathSeg._asPathString();\n                }\n            });\n            return string;\n        };\n\n        // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n        window.SVGPathSegList.prototype._parsePath = function (string) {\n            if (!string || string.length == 0) return [];\n\n            var owningPathSegList = this;\n\n            var Builder = function Builder() {\n                this.pathSegList = [];\n            };\n\n            Builder.prototype.appendSegment = function (pathSeg) {\n                this.pathSegList.push(pathSeg);\n            };\n\n            var Source = function Source(string) {\n                this._string = string;\n                this._currentIndex = 0;\n                this._endIndex = this._string.length;\n                this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\n\n                this._skipOptionalSpaces();\n            };\n\n            Source.prototype._isCurrentSpace = function () {\n                var character = this._string[this._currentIndex];\n                return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n            };\n\n            Source.prototype._skipOptionalSpaces = function () {\n                while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\n                    this._currentIndex++;\n                }return this._currentIndex < this._endIndex;\n            };\n\n            Source.prototype._skipOptionalSpacesOrDelimiter = function () {\n                if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\") return false;\n                if (this._skipOptionalSpaces()) {\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                        this._currentIndex++;\n                        this._skipOptionalSpaces();\n                    }\n                }\n                return this._currentIndex < this._endIndex;\n            };\n\n            Source.prototype.hasMoreData = function () {\n                return this._currentIndex < this._endIndex;\n            };\n\n            Source.prototype.peekSegmentType = function () {\n                var lookahead = this._string[this._currentIndex];\n                return this._pathSegTypeFromChar(lookahead);\n            };\n\n            Source.prototype._pathSegTypeFromChar = function (lookahead) {\n                switch (lookahead) {\n                    case \"Z\":\n                    case \"z\":\n                        return window.SVGPathSeg.PATHSEG_CLOSEPATH;\n                    case \"M\":\n                        return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\n                    case \"m\":\n                        return window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                    case \"L\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                    case \"l\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                    case \"C\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                    case \"c\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                    case \"Q\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                    case \"q\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                    case \"A\":\n                        return window.SVGPathSeg.PATHSEG_ARC_ABS;\n                    case \"a\":\n                        return window.SVGPathSeg.PATHSEG_ARC_REL;\n                    case \"H\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                    case \"h\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                    case \"V\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                    case \"v\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                    case \"S\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                    case \"s\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                    case \"T\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                    case \"t\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                    default:\n                        return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                }\n            };\n\n            Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\n                // Check for remaining coordinates in the current command.\n                if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || lookahead >= \"0\" && lookahead <= \"9\") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\n                    if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                    if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                    return previousCommand;\n                }\n                return window.SVGPathSeg.PATHSEG_UNKNOWN;\n            };\n\n            Source.prototype.initialCommandIsMoveTo = function () {\n                // If the path is empty it is still valid, so return true.\n                if (!this.hasMoreData()) return true;\n                var command = this.peekSegmentType();\n                // Path must start with moveTo.\n                return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\n            };\n\n            // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n            Source.prototype._parseNumber = function () {\n                var exponent = 0;\n                var integer = 0;\n                var frac = 1;\n                var decimal = 0;\n                var sign = 1;\n                var expsign = 1;\n\n                var startIndex = this._currentIndex;\n\n                this._skipOptionalSpaces();\n\n                // Read the sign.\n                if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                    this._currentIndex++;\n                    sign = -1;\n                }\n\n                if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\")\n                    // The first character of a number must be one of [0-9+-.].\n                    return undefined;\n\n                // Read the integer part, build right-to-left.\n                var startIntPartIndex = this._currentIndex;\n                while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                    this._currentIndex++;\n                } // Advance to first non-digit.\n\n                if (this._currentIndex != startIntPartIndex) {\n                    var scanIntPartIndex = this._currentIndex - 1;\n                    var multiplier = 1;\n                    while (scanIntPartIndex >= startIntPartIndex) {\n                        integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                        multiplier *= 10;\n                    }\n                }\n\n                // Read the decimals.\n                if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                    this._currentIndex++;\n\n                    // There must be a least one digit following the .\n                    if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                        frac *= 10;\n                        decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n                        this._currentIndex += 1;\n                    }\n                }\n\n                // Read the exponent part.\n                if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\") {\n                    this._currentIndex++;\n\n                    // Read the sign of the exponent.\n                    if (this._string.charAt(this._currentIndex) == \"+\") {\n                        this._currentIndex++;\n                    } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                        this._currentIndex++;\n                        expsign = -1;\n                    }\n\n                    // There must be an exponent.\n                    if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                        exponent *= 10;\n                        exponent += this._string.charAt(this._currentIndex) - \"0\";\n                        this._currentIndex++;\n                    }\n                }\n\n                var number = integer + decimal;\n                number *= sign;\n\n                if (exponent) number *= Math.pow(10, expsign * exponent);\n\n                if (startIndex == this._currentIndex) return undefined;\n\n                this._skipOptionalSpacesOrDelimiter();\n\n                return number;\n            };\n\n            Source.prototype._parseArcFlag = function () {\n                if (this._currentIndex >= this._endIndex) return undefined;\n                var flag = false;\n                var flagChar = this._string.charAt(this._currentIndex++);\n                if (flagChar == \"0\") flag = false;else if (flagChar == \"1\") flag = true;else return undefined;\n\n                this._skipOptionalSpacesOrDelimiter();\n                return flag;\n            };\n\n            Source.prototype.parseSegment = function () {\n                var lookahead = this._string[this._currentIndex];\n                var command = this._pathSegTypeFromChar(lookahead);\n                if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\n                    // Possibly an implicit command. Not allowed if this is the first command.\n                    if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                    command = this._nextCommandHelper(lookahead, this._previousCommand);\n                    if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                } else {\n                    this._currentIndex++;\n                }\n\n                this._previousCommand = command;\n\n                switch (command) {\n                    case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                        return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                        return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                        return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                        return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                        return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                        return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                        return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                        return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                        this._skipOptionalSpaces();\n                        return new window.SVGPathSegClosePath(owningPathSegList);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                        var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                        var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                        return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                        return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_ARC_REL:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                    case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                    default:\n                        throw \"Unknown path seg type.\";\n                }\n            };\n\n            var builder = new Builder();\n            var source = new Source(string);\n\n            if (!source.initialCommandIsMoveTo()) return [];\n            while (source.hasMoreData()) {\n                var pathSeg = source.parseSegment();\n                if (!pathSeg) return [];\n                builder.appendSegment(pathSeg);\n            }\n\n            return builder.pathSegList;\n        };\n    }\n})();\n\n/* jshint ignore:end */\n\nc3_chart_fn.axis = function () {};\nc3_chart_fn.axis.labels = function (labels) {\n    var $$ = this.internal;\n    if (arguments.length) {\n        Object.keys(labels).forEach(function (axisId) {\n            $$.axis.setLabelText(axisId, labels[axisId]);\n        });\n        $$.axis.updateLabels();\n    }\n    // TODO: return some values?\n};\nc3_chart_fn.axis.max = function (max) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (arguments.length) {\n        if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {\n            if (isValue(max.x)) {\n                config.axis_x_max = max.x;\n            }\n            if (isValue(max.y)) {\n                config.axis_y_max = max.y;\n            }\n            if (isValue(max.y2)) {\n                config.axis_y2_max = max.y2;\n            }\n        } else {\n            config.axis_y_max = config.axis_y2_max = max;\n        }\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n    } else {\n        return {\n            x: config.axis_x_max,\n            y: config.axis_y_max,\n            y2: config.axis_y2_max\n        };\n    }\n};\nc3_chart_fn.axis.min = function (min) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (arguments.length) {\n        if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {\n            if (isValue(min.x)) {\n                config.axis_x_min = min.x;\n            }\n            if (isValue(min.y)) {\n                config.axis_y_min = min.y;\n            }\n            if (isValue(min.y2)) {\n                config.axis_y2_min = min.y2;\n            }\n        } else {\n            config.axis_y_min = config.axis_y2_min = min;\n        }\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n    } else {\n        return {\n            x: config.axis_x_min,\n            y: config.axis_y_min,\n            y2: config.axis_y2_min\n        };\n    }\n};\nc3_chart_fn.axis.range = function (range) {\n    if (arguments.length) {\n        if (isDefined(range.max)) {\n            this.axis.max(range.max);\n        }\n        if (isDefined(range.min)) {\n            this.axis.min(range.min);\n        }\n    } else {\n        return {\n            max: this.axis.max(),\n            min: this.axis.min()\n        };\n    }\n};\n\nc3_chart_fn.category = function (i, category) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (arguments.length > 1) {\n        config.axis_x_categories[i] = category;\n        $$.redraw();\n    }\n    return config.axis_x_categories[i];\n};\nc3_chart_fn.categories = function (categories) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (!arguments.length) {\n        return config.axis_x_categories;\n    }\n    config.axis_x_categories = categories;\n    $$.redraw();\n    return config.axis_x_categories;\n};\n\nc3_chart_fn.resize = function (size) {\n    var $$ = this.internal,\n        config = $$.config;\n    config.size_width = size ? size.width : null;\n    config.size_height = size ? size.height : null;\n    this.flush();\n};\n\nc3_chart_fn.flush = function () {\n    var $$ = this.internal;\n    $$.updateAndRedraw({ withLegend: true, withTransition: false, withTransitionForTransform: false });\n};\n\nc3_chart_fn.destroy = function () {\n    var $$ = this.internal;\n\n    window.clearInterval($$.intervalForObserveInserted);\n\n    if ($$.resizeTimeout !== undefined) {\n        window.clearTimeout($$.resizeTimeout);\n    }\n\n    if (window.detachEvent) {\n        window.detachEvent('onresize', $$.resizeFunction);\n    } else if (window.removeEventListener) {\n        window.removeEventListener('resize', $$.resizeFunction);\n    } else {\n        var wrapper = window.onresize;\n        // check if no one else removed our wrapper and remove our resizeFunction from it\n        if (wrapper && wrapper.add && wrapper.remove) {\n            wrapper.remove($$.resizeFunction);\n        }\n    }\n\n    $$.selectChart.classed('c3', false).html(\"\");\n\n    // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n    Object.keys($$).forEach(function (key) {\n        $$[key] = null;\n    });\n\n    return null;\n};\n\n// TODO: fix\nc3_chart_fn.color = function (id) {\n    var $$ = this.internal;\n    return $$.color(id); // more patterns\n};\n\nc3_chart_fn.data = function (targetIds) {\n    var targets = this.internal.data.targets;\n    return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n        return [].concat(targetIds).indexOf(t.id) >= 0;\n    });\n};\nc3_chart_fn.data.shown = function (targetIds) {\n    return this.internal.filterTargetsToShow(this.data(targetIds));\n};\nc3_chart_fn.data.values = function (targetId) {\n    var targets,\n        values = null;\n    if (targetId) {\n        targets = this.data(targetId);\n        values = targets[0] ? targets[0].values.map(function (d) {\n            return d.value;\n        }) : null;\n    }\n    return values;\n};\nc3_chart_fn.data.names = function (names) {\n    this.internal.clearLegendItemTextBoxCache();\n    return this.internal.updateDataAttributes('names', names);\n};\nc3_chart_fn.data.colors = function (colors) {\n    return this.internal.updateDataAttributes('colors', colors);\n};\nc3_chart_fn.data.axes = function (axes) {\n    return this.internal.updateDataAttributes('axes', axes);\n};\n\nc3_chart_fn.flow = function (args) {\n    var $$ = this.internal,\n        targets,\n        data,\n        notfoundIds = [],\n        orgDataCount = $$.getMaxDataCount(),\n        dataCount,\n        domain,\n        baseTarget,\n        baseValue,\n        length = 0,\n        tail = 0,\n        diff,\n        to;\n\n    if (args.json) {\n        data = $$.convertJsonToData(args.json, args.keys);\n    } else if (args.rows) {\n        data = $$.convertRowsToData(args.rows);\n    } else if (args.columns) {\n        data = $$.convertColumnsToData(args.columns);\n    } else {\n        return;\n    }\n    targets = $$.convertDataToTargets(data, true);\n\n    // Update/Add data\n    $$.data.targets.forEach(function (t) {\n        var found = false,\n            i,\n            j;\n        for (i = 0; i < targets.length; i++) {\n            if (t.id === targets[i].id) {\n                found = true;\n\n                if (t.values[t.values.length - 1]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                }\n                length = targets[i].values.length;\n\n                for (j = 0; j < length; j++) {\n                    targets[i].values[j].index = tail + j;\n                    if (!$$.isTimeSeries()) {\n                        targets[i].values[j].x = tail + j;\n                    }\n                }\n                t.values = t.values.concat(targets[i].values);\n\n                targets.splice(i, 1);\n                break;\n            }\n        }\n        if (!found) {\n            notfoundIds.push(t.id);\n        }\n    });\n\n    // Append null for not found targets\n    $$.data.targets.forEach(function (t) {\n        var i, j;\n        for (i = 0; i < notfoundIds.length; i++) {\n            if (t.id === notfoundIds[i]) {\n                tail = t.values[t.values.length - 1].index + 1;\n                for (j = 0; j < length; j++) {\n                    t.values.push({\n                        id: t.id,\n                        index: tail + j,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                        value: null\n                    });\n                }\n            }\n        }\n    });\n\n    // Generate null values for new target\n    if ($$.data.targets.length) {\n        targets.forEach(function (t) {\n            var i,\n                missing = [];\n            for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                missing.push({\n                    id: t.id,\n                    index: i,\n                    x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                    value: null\n                });\n            }\n            t.values.forEach(function (v) {\n                v.index += tail;\n                if (!$$.isTimeSeries()) {\n                    v.x += tail;\n                }\n            });\n            t.values = missing.concat(t.values);\n        });\n    }\n    $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n    // check data count because behavior needs to change when it's only one\n    dataCount = $$.getMaxDataCount();\n    baseTarget = $$.data.targets[0];\n    baseValue = baseTarget.values[0];\n\n    // Update length to flow if needed\n    if (isDefined(args.to)) {\n        length = 0;\n        to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n        baseTarget.values.forEach(function (v) {\n            if (v.x < to) {\n                length++;\n            }\n        });\n    } else if (isDefined(args.length)) {\n        length = args.length;\n    }\n\n    // If only one data, update the domain to flow from left edge of the chart\n    if (!orgDataCount) {\n        if ($$.isTimeSeries()) {\n            if (baseTarget.values.length > 1) {\n                diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n            } else {\n                diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n            }\n        } else {\n            diff = 1;\n        }\n        domain = [baseValue.x - diff, baseValue.x];\n        $$.updateXDomain(null, true, true, false, domain);\n    } else if (orgDataCount === 1) {\n        if ($$.isTimeSeries()) {\n            diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n            domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n            $$.updateXDomain(null, true, true, false, domain);\n        }\n    }\n\n    // Set targets\n    $$.updateTargets($$.data.targets);\n\n    // Redraw with new targets\n    $$.redraw({\n        flow: {\n            index: baseValue.index,\n            length: length,\n            duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n            done: args.done,\n            orgDataCount: orgDataCount\n        },\n        withLegend: true,\n        withTransition: orgDataCount > 1,\n        withTrimXDomain: false,\n        withUpdateXAxis: true\n    });\n};\n\nc3_chart_internal_fn.generateFlow = function (args) {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3;\n\n    return function () {\n        var targets = args.targets,\n            flow = args.flow,\n            drawBar = args.drawBar,\n            drawLine = args.drawLine,\n            drawArea = args.drawArea,\n            cx = args.cx,\n            cy = args.cy,\n            xv = args.xv,\n            xForText = args.xForText,\n            yForText = args.yForText,\n            duration = args.duration;\n\n        var translateX,\n            scaleX = 1,\n            transform,\n            flowIndex = flow.index,\n            flowLength = flow.length,\n            flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n            flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n            orgDomain = $$.x.domain(),\n            domain,\n            durationForFlow = flow.duration || duration,\n            done = flow.done || function () {},\n            wait = $$.generateWait();\n\n        var xgrid = $$.xgrid || d3.selectAll([]),\n            xgridLines = $$.xgridLines || d3.selectAll([]),\n            mainRegion = $$.mainRegion || d3.selectAll([]),\n            mainText = $$.mainText || d3.selectAll([]),\n            mainBar = $$.mainBar || d3.selectAll([]),\n            mainLine = $$.mainLine || d3.selectAll([]),\n            mainArea = $$.mainArea || d3.selectAll([]),\n            mainCircle = $$.mainCircle || d3.selectAll([]);\n\n        // set flag\n        $$.flowing = true;\n\n        // remove head data after rendered\n        $$.data.targets.forEach(function (d) {\n            d.values.splice(0, flowLength);\n        });\n\n        // update x domain to generate axis elements for flow\n        domain = $$.updateXDomain(targets, true, true);\n        // update elements related to x scale\n        if ($$.updateXGrid) {\n            $$.updateXGrid(true);\n        }\n\n        // generate transform to flow\n        if (!flow.orgDataCount) {\n            // if empty\n            if ($$.data.targets[0].values.length !== 1) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                    flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                    translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                } else {\n                    translateX = diffDomain(domain) / 2;\n                }\n            }\n        } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n            translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n        } else {\n            if ($$.isTimeSeries()) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n            }\n        }\n        scaleX = diffDomain(orgDomain) / diffDomain(domain);\n        transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n        $$.hideXGridFocus();\n\n        d3.transition().ease('linear').duration(durationForFlow).each(function () {\n            wait.add($$.axes.x.transition().call($$.xAxis));\n            wait.add(mainBar.transition().attr('transform', transform));\n            wait.add(mainLine.transition().attr('transform', transform));\n            wait.add(mainArea.transition().attr('transform', transform));\n            wait.add(mainCircle.transition().attr('transform', transform));\n            wait.add(mainText.transition().attr('transform', transform));\n            wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n            wait.add(xgrid.transition().attr('transform', transform));\n            wait.add(xgridLines.transition().attr('transform', transform));\n        }).call(wait, function () {\n            var i,\n                shapes = [],\n                texts = [],\n                eventRects = [];\n\n            // remove flowed elements\n            if (flowLength) {\n                for (i = 0; i < flowLength; i++) {\n                    shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                    texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                    eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n                }\n                $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n                $$.svg.select('.' + CLASS.xgrid).remove();\n            }\n\n            // draw again for removing flowed elements and reverting attr\n            xgrid.attr('transform', null).attr($$.xgridAttr);\n            xgridLines.attr('transform', null);\n            xgridLines.select('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv);\n            xgridLines.select('text').attr(\"x\", config.axis_rotated ? $$.width : 0).attr(\"y\", xv);\n            mainBar.attr('transform', null).attr(\"d\", drawBar);\n            mainLine.attr('transform', null).attr(\"d\", drawLine);\n            mainArea.attr('transform', null).attr(\"d\", drawArea);\n            mainCircle.attr('transform', null).attr(\"cx\", cx).attr(\"cy\", cy);\n            mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));\n            mainRegion.attr('transform', null);\n            mainRegion.select('rect').filter($$.isRegionOnX).attr(\"x\", $$.regionX.bind($$)).attr(\"width\", $$.regionWidth.bind($$));\n\n            if (config.interaction_enabled) {\n                $$.redrawEventRect();\n            }\n\n            // callback for end of flow\n            done();\n\n            $$.flowing = false;\n        });\n    };\n};\n\nc3_chart_fn.focus = function (targetIds) {\n    var $$ = this.internal,\n        candidates;\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();\n    this.defocus();\n    candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n    if ($$.hasArcType()) {\n        $$.expandArc(targetIds);\n    }\n    $$.toggleFocusLegend(targetIds, true);\n\n    $$.focusedTargetIds = targetIds;\n    $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n        return targetIds.indexOf(id) < 0;\n    });\n};\n\nc3_chart_fn.defocus = function (targetIds) {\n    var $$ = this.internal,\n        candidates;\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n    if ($$.hasArcType()) {\n        $$.unexpandArc(targetIds);\n    }\n    $$.toggleFocusLegend(targetIds, false);\n\n    $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n        return targetIds.indexOf(id) < 0;\n    });\n    $$.defocusedTargetIds = targetIds;\n};\n\nc3_chart_fn.revert = function (targetIds) {\n    var $$ = this.internal,\n        candidates;\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n    candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n    if ($$.hasArcType()) {\n        $$.unexpandArc(targetIds);\n    }\n    if ($$.config.legend_show) {\n        $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n        $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {\n            return $$.d3.select(this).classed(CLASS.legendItemFocused);\n        }).classed(CLASS.legendItemFocused, false);\n    }\n\n    $$.focusedTargetIds = [];\n    $$.defocusedTargetIds = [];\n};\n\nc3_chart_fn.xgrids = function (grids) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (!grids) {\n        return config.grid_x_lines;\n    }\n    config.grid_x_lines = grids;\n    $$.redrawWithoutRescale();\n    return config.grid_x_lines;\n};\nc3_chart_fn.xgrids.add = function (grids) {\n    var $$ = this.internal;\n    return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n};\nc3_chart_fn.xgrids.remove = function (params) {\n    // TODO: multiple\n    var $$ = this.internal;\n    $$.removeGridLines(params, true);\n};\n\nc3_chart_fn.ygrids = function (grids) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (!grids) {\n        return config.grid_y_lines;\n    }\n    config.grid_y_lines = grids;\n    $$.redrawWithoutRescale();\n    return config.grid_y_lines;\n};\nc3_chart_fn.ygrids.add = function (grids) {\n    var $$ = this.internal;\n    return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n};\nc3_chart_fn.ygrids.remove = function (params) {\n    // TODO: multiple\n    var $$ = this.internal;\n    $$.removeGridLines(params, false);\n};\n\nc3_chart_fn.groups = function (groups) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (isUndefined(groups)) {\n        return config.data_groups;\n    }\n    config.data_groups = groups;\n    $$.redraw();\n    return config.data_groups;\n};\n\nc3_chart_fn.legend = function () {};\nc3_chart_fn.legend.show = function (targetIds) {\n    var $$ = this.internal;\n    $$.showLegend($$.mapToTargetIds(targetIds));\n    $$.updateAndRedraw({ withLegend: true });\n};\nc3_chart_fn.legend.hide = function (targetIds) {\n    var $$ = this.internal;\n    $$.hideLegend($$.mapToTargetIds(targetIds));\n    $$.updateAndRedraw({ withLegend: true });\n};\n\nc3_chart_fn.load = function (args) {\n    var $$ = this.internal,\n        config = $$.config;\n    // update xs if specified\n    if (args.xs) {\n        $$.addXs(args.xs);\n    }\n    // update names if exists\n    if ('names' in args) {\n        c3_chart_fn.data.names.bind(this)(args.names);\n    }\n    // update classes if exists\n    if ('classes' in args) {\n        Object.keys(args.classes).forEach(function (id) {\n            config.data_classes[id] = args.classes[id];\n        });\n    }\n    // update categories if exists\n    if ('categories' in args && $$.isCategorized()) {\n        config.axis_x_categories = args.categories;\n    }\n    // update axes if exists\n    if ('axes' in args) {\n        Object.keys(args.axes).forEach(function (id) {\n            config.data_axes[id] = args.axes[id];\n        });\n    }\n    // update colors if exists\n    if ('colors' in args) {\n        Object.keys(args.colors).forEach(function (id) {\n            config.data_colors[id] = args.colors[id];\n        });\n    }\n    // use cache if exists\n    if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n        $$.load($$.getCaches(args.cacheIds), args.done);\n        return;\n    }\n    // unload if needed\n    if ('unload' in args) {\n        // TODO: do not unload if target will load (included in url/rows/columns)\n        $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {\n            $$.loadFromArgs(args);\n        });\n    } else {\n        $$.loadFromArgs(args);\n    }\n};\n\nc3_chart_fn.unload = function (args) {\n    var $$ = this.internal;\n    args = args || {};\n    if (args instanceof Array) {\n        args = { ids: args };\n    } else if (typeof args === 'string') {\n        args = { ids: [args] };\n    }\n    $$.unload($$.mapToTargetIds(args.ids), function () {\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n        if (args.done) {\n            args.done();\n        }\n    });\n};\n\nc3_chart_fn.regions = function (regions) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (!regions) {\n        return config.regions;\n    }\n    config.regions = regions;\n    $$.redrawWithoutRescale();\n    return config.regions;\n};\nc3_chart_fn.regions.add = function (regions) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (!regions) {\n        return config.regions;\n    }\n    config.regions = config.regions.concat(regions);\n    $$.redrawWithoutRescale();\n    return config.regions;\n};\nc3_chart_fn.regions.remove = function (options) {\n    var $$ = this.internal,\n        config = $$.config,\n        duration,\n        classes,\n        regions;\n\n    options = options || {};\n    duration = $$.getOption(options, \"duration\", config.transition_duration);\n    classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n    regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\n        return '.' + c;\n    }));\n    (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();\n\n    config.regions = config.regions.filter(function (region) {\n        var found = false;\n        if (!region['class']) {\n            return true;\n        }\n        region['class'].split(' ').forEach(function (c) {\n            if (classes.indexOf(c) >= 0) {\n                found = true;\n            }\n        });\n        return !found;\n    });\n\n    return config.regions;\n};\n\nc3_chart_fn.selected = function (targetId) {\n    var $$ = this.internal,\n        d3 = $$.d3;\n    return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {\n        return d3.select(this).classed(CLASS.SELECTED);\n    }).map(function (d) {\n        return d.map(function (d) {\n            var data = d.__data__;return data.data ? data.data : data;\n        });\n    }));\n};\nc3_chart_fn.select = function (ids, indices, resetOther) {\n    var $$ = this.internal,\n        d3 = $$.d3,\n        config = $$.config;\n    if (!config.data_selection_enabled) {\n        return;\n    }\n    $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n        var shape = d3.select(this),\n            id = d.data ? d.data.id : d.id,\n            toggle = $$.getToggle(this, d).bind($$),\n            isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n            isTargetIndex = !indices || indices.indexOf(i) >= 0,\n            isSelected = shape.classed(CLASS.SELECTED);\n        // line/area selection not supported yet\n        if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n            return;\n        }\n        if (isTargetId && isTargetIndex) {\n            if (config.data_selection_isselectable(d) && !isSelected) {\n                toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n            }\n        } else if (isDefined(resetOther) && resetOther) {\n            if (isSelected) {\n                toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n            }\n        }\n    });\n};\nc3_chart_fn.unselect = function (ids, indices) {\n    var $$ = this.internal,\n        d3 = $$.d3,\n        config = $$.config;\n    if (!config.data_selection_enabled) {\n        return;\n    }\n    $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n        var shape = d3.select(this),\n            id = d.data ? d.data.id : d.id,\n            toggle = $$.getToggle(this, d).bind($$),\n            isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n            isTargetIndex = !indices || indices.indexOf(i) >= 0,\n            isSelected = shape.classed(CLASS.SELECTED);\n        // line/area selection not supported yet\n        if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n            return;\n        }\n        if (isTargetId && isTargetIndex) {\n            if (config.data_selection_isselectable(d)) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        }\n    });\n};\n\nc3_chart_fn.show = function (targetIds, options) {\n    var $$ = this.internal,\n        targets;\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    options = options || {};\n\n    $$.removeHiddenTargetIds(targetIds);\n    targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n    targets.transition().style('opacity', 1, 'important').call($$.endall, function () {\n        targets.style('opacity', null).style('opacity', 1);\n    });\n\n    if (options.withLegend) {\n        $$.showLegend(targetIds);\n    }\n\n    $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n};\n\nc3_chart_fn.hide = function (targetIds, options) {\n    var $$ = this.internal,\n        targets;\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    options = options || {};\n\n    $$.addHiddenTargetIds(targetIds);\n    targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n    targets.transition().style('opacity', 0, 'important').call($$.endall, function () {\n        targets.style('opacity', null).style('opacity', 0);\n    });\n\n    if (options.withLegend) {\n        $$.hideLegend(targetIds);\n    }\n\n    $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n};\n\nc3_chart_fn.toggle = function (targetIds, options) {\n    var that = this,\n        $$ = this.internal;\n    $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n        $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n    });\n};\n\nc3_chart_fn.tooltip = function () {};\nc3_chart_fn.tooltip.show = function (args) {\n    var $$ = this.internal,\n        index,\n        mouse;\n\n    // determine mouse position on the chart\n    if (args.mouse) {\n        mouse = args.mouse;\n    }\n\n    // determine focus data\n    if (args.data) {\n        if ($$.isMultipleX()) {\n            // if multiple xs, target point will be determined by mouse\n            mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n            index = null;\n        } else {\n            // TODO: when tooltip_grouped = false\n            index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n        }\n    } else if (typeof args.x !== 'undefined') {\n        index = $$.getIndexByX(args.x);\n    } else if (typeof args.index !== 'undefined') {\n        index = args.index;\n    }\n\n    // emulate mouse events to show\n    $$.dispatchEvent('mouseover', index, mouse);\n    $$.dispatchEvent('mousemove', index, mouse);\n\n    $$.config.tooltip_onshow.call($$, args.data);\n};\nc3_chart_fn.tooltip.hide = function () {\n    // TODO: get target data by checking the state of focus\n    this.internal.dispatchEvent('mouseout', 0);\n\n    this.internal.config.tooltip_onhide.call(this);\n};\n\nc3_chart_fn.transform = function (type, targetIds) {\n    var $$ = this.internal,\n        options = ['pie', 'donut'].indexOf(type) >= 0 ? { withTransform: true } : null;\n    $$.transformTo(targetIds, type, options);\n};\n\nc3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n    var $$ = this,\n        withTransitionForAxis = !$$.hasArcType(),\n        options = optionsForRedraw || { withTransitionForAxis: withTransitionForAxis };\n    options.withTransitionForTransform = false;\n    $$.transiting = false;\n    $$.setTargetType(targetIds, type);\n    $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n    $$.updateAndRedraw(options);\n};\n\nc3_chart_fn.x = function (x) {\n    var $$ = this.internal;\n    if (arguments.length) {\n        $$.updateTargetX($$.data.targets, x);\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n    }\n    return $$.data.xs;\n};\nc3_chart_fn.xs = function (xs) {\n    var $$ = this.internal;\n    if (arguments.length) {\n        $$.updateTargetXs($$.data.targets, xs);\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n    }\n    return $$.data.xs;\n};\n\nc3_chart_fn.zoom = function (domain) {\n    var $$ = this.internal;\n    if (domain) {\n        if ($$.isTimeSeries()) {\n            domain = domain.map(function (x) {\n                return $$.parseDate(x);\n            });\n        }\n        $$.brush.extent(domain);\n        $$.redraw({ withUpdateXDomain: true, withY: $$.config.zoom_rescale });\n        $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n    }\n    return $$.brush.extent();\n};\nc3_chart_fn.zoom.enable = function (enabled) {\n    var $$ = this.internal;\n    $$.config.zoom_enabled = enabled;\n    $$.updateAndRedraw();\n};\nc3_chart_fn.unzoom = function () {\n    var $$ = this.internal;\n    $$.brush.clear().update();\n    $$.redraw({ withUpdateXDomain: true });\n};\n\nc3_chart_fn.zoom.max = function (max) {\n    var $$ = this.internal,\n        config = $$.config,\n        d3 = $$.d3;\n    if (max === 0 || max) {\n        config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n    } else {\n        return config.zoom_x_max;\n    }\n};\n\nc3_chart_fn.zoom.min = function (min) {\n    var $$ = this.internal,\n        config = $$.config,\n        d3 = $$.d3;\n    if (min === 0 || min) {\n        config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n    } else {\n        return config.zoom_x_min;\n    }\n};\n\nc3_chart_fn.zoom.range = function (range) {\n    if (arguments.length) {\n        if (isDefined(range.max)) {\n            this.domain.max(range.max);\n        }\n        if (isDefined(range.min)) {\n            this.domain.min(range.min);\n        }\n    } else {\n        return {\n            max: this.domain.max(),\n            min: this.domain.min()\n        };\n    }\n};\n\nc3_chart_internal_fn.initPie = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n    $$.pie = d3.layout.pie().value(function (d) {\n        return d.values.reduce(function (a, b) {\n            return a + b.value;\n        }, 0);\n    });\n    if (!config.data_order) {\n        $$.pie.sort(null);\n    }\n};\n\nc3_chart_internal_fn.updateRadius = function () {\n    var $$ = this,\n        config = $$.config,\n        w = config.gauge_width || config.donut_width;\n    $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2;\n    $$.radius = $$.radiusExpanded * 0.95;\n    $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n    $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n};\n\nc3_chart_internal_fn.updateArc = function () {\n    var $$ = this;\n    $$.svgArc = $$.getSvgArc();\n    $$.svgArcExpanded = $$.getSvgArcExpanded();\n    $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n};\n\nc3_chart_internal_fn.updateAngle = function (d) {\n    var $$ = this,\n        config = $$.config,\n        found = false,\n        index = 0,\n        gMin,\n        gMax,\n        gTic,\n        gValue;\n\n    if (!config) {\n        return null;\n    }\n\n    $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n        if (!found && t.data.id === d.data.id) {\n            found = true;\n            d = t;\n            d.index = index;\n        }\n        index++;\n    });\n    if (isNaN(d.startAngle)) {\n        d.startAngle = 0;\n    }\n    if (isNaN(d.endAngle)) {\n        d.endAngle = d.startAngle;\n    }\n    if ($$.isGaugeType(d.data)) {\n        gMin = config.gauge_min;\n        gMax = config.gauge_max;\n        gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);\n        gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\n        d.startAngle = config.gauge_startingAngle;\n        d.endAngle = d.startAngle + gTic * gValue;\n    }\n    return found ? d : null;\n};\n\nc3_chart_internal_fn.getSvgArc = function () {\n    var $$ = this,\n        arc = $$.d3.svg.arc().outerRadius($$.radius).innerRadius($$.innerRadius),\n        newArc = function newArc(d, withoutUpdate) {\n        var updated;\n        if (withoutUpdate) {\n            return arc(d);\n        } // for interpolate\n        updated = $$.updateAngle(d);\n        return updated ? arc(updated) : \"M 0 0\";\n    };\n    // TODO: extends all function\n    newArc.centroid = arc.centroid;\n    return newArc;\n};\n\nc3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n    var $$ = this,\n        arc = $$.d3.svg.arc().outerRadius($$.radiusExpanded * (rate ? rate : 1)).innerRadius($$.innerRadius);\n    return function (d) {\n        var updated = $$.updateAngle(d);\n        return updated ? arc(updated) : \"M 0 0\";\n    };\n};\n\nc3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n    return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n};\n\nc3_chart_internal_fn.transformForArcLabel = function (d) {\n    var $$ = this,\n        config = $$.config,\n        updated = $$.updateAngle(d),\n        c,\n        x,\n        y,\n        h,\n        ratio,\n        translate = \"\";\n    if (updated && !$$.hasType('gauge')) {\n        c = this.svgArc.centroid(updated);\n        x = isNaN(c[0]) ? 0 : c[0];\n        y = isNaN(c[1]) ? 0 : c[1];\n        h = Math.sqrt(x * x + y * y);\n        if ($$.hasType('donut') && config.donut_label_ratio) {\n            ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n        } else if ($$.hasType('pie') && config.pie_label_ratio) {\n            ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n        } else {\n            ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n        }\n        translate = \"translate(\" + x * ratio + ',' + y * ratio + \")\";\n    }\n    return translate;\n};\n\nc3_chart_internal_fn.getArcRatio = function (d) {\n    var $$ = this,\n        config = $$.config,\n        whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n    return d ? (d.endAngle - d.startAngle) / whole : null;\n};\n\nc3_chart_internal_fn.convertToArcData = function (d) {\n    return this.addName({\n        id: d.data.id,\n        value: d.value,\n        ratio: this.getArcRatio(d),\n        index: d.index\n    });\n};\n\nc3_chart_internal_fn.textForArcLabel = function (d) {\n    var $$ = this,\n        updated,\n        value,\n        ratio,\n        id,\n        format;\n    if (!$$.shouldShowArcLabel()) {\n        return \"\";\n    }\n    updated = $$.updateAngle(d);\n    value = updated ? updated.value : null;\n    ratio = $$.getArcRatio(updated);\n    id = d.data.id;\n    if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\n        return \"\";\n    }\n    format = $$.getArcLabelFormat();\n    return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n};\n\nc3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {\n    var $$ = this,\n        format = $$.getGaugeLabelExtents();\n\n    return format ? format(value, isMax) : value;\n};\n\nc3_chart_internal_fn.expandArc = function (targetIds) {\n    var $$ = this,\n        interval;\n\n    // MEMO: avoid to cancel transition\n    if ($$.transiting) {\n        interval = window.setInterval(function () {\n            if (!$$.transiting) {\n                window.clearInterval(interval);\n                if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                    $$.expandArc(targetIds);\n                }\n            }\n        }, 10);\n        return;\n    }\n\n    targetIds = $$.mapToTargetIds(targetIds);\n\n    $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n        if (!$$.shouldExpand(d.data.id)) {\n            return;\n        }\n        $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr(\"d\", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr(\"d\", $$.svgArcExpandedSub).each(function (d) {\n            if ($$.isDonutType(d.data)) {\n                // callback here\n            }\n        });\n    });\n};\n\nc3_chart_internal_fn.unexpandArc = function (targetIds) {\n    var $$ = this;\n\n    if ($$.transiting) {\n        return;\n    }\n\n    targetIds = $$.mapToTargetIds(targetIds);\n\n    $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {\n        return $$.expandDuration(d.data.id);\n    }).attr(\"d\", $$.svgArc);\n    $$.svg.selectAll('.' + CLASS.arc);\n};\n\nc3_chart_internal_fn.expandDuration = function (id) {\n    var $$ = this,\n        config = $$.config;\n\n    if ($$.isDonutType(id)) {\n        return config.donut_expand_duration;\n    } else if ($$.isGaugeType(id)) {\n        return config.gauge_expand_duration;\n    } else if ($$.isPieType(id)) {\n        return config.pie_expand_duration;\n    } else {\n        return 50;\n    }\n};\n\nc3_chart_internal_fn.shouldExpand = function (id) {\n    var $$ = this,\n        config = $$.config;\n    return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;\n};\n\nc3_chart_internal_fn.shouldShowArcLabel = function () {\n    var $$ = this,\n        config = $$.config,\n        shouldShow = true;\n    if ($$.hasType('donut')) {\n        shouldShow = config.donut_label_show;\n    } else if ($$.hasType('pie')) {\n        shouldShow = config.pie_label_show;\n    }\n    // when gauge, always true\n    return shouldShow;\n};\n\nc3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n    var $$ = this,\n        config = $$.config,\n        threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n    return ratio >= threshold;\n};\n\nc3_chart_internal_fn.getArcLabelFormat = function () {\n    var $$ = this,\n        config = $$.config,\n        format = config.pie_label_format;\n    if ($$.hasType('gauge')) {\n        format = config.gauge_label_format;\n    } else if ($$.hasType('donut')) {\n        format = config.donut_label_format;\n    }\n    return format;\n};\n\nc3_chart_internal_fn.getGaugeLabelExtents = function () {\n    var $$ = this,\n        config = $$.config;\n    return config.gauge_label_extents;\n};\n\nc3_chart_internal_fn.getArcTitle = function () {\n    var $$ = this;\n    return $$.hasType('donut') ? $$.config.donut_title : \"\";\n};\n\nc3_chart_internal_fn.updateTargetsForArc = function (targets) {\n    var $$ = this,\n        main = $$.main,\n        mainPieUpdate,\n        mainPieEnter,\n        classChartArc = $$.classChartArc.bind($$),\n        classArcs = $$.classArcs.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr(\"class\", function (d) {\n        return classChartArc(d) + classFocus(d.data);\n    });\n    mainPieEnter = mainPieUpdate.enter().append(\"g\").attr(\"class\", classChartArc);\n    mainPieEnter.append('g').attr('class', classArcs);\n    mainPieEnter.append(\"text\").attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\").style(\"opacity\", 0).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n    // MEMO: can not keep same color..., but not bad to update color in redraw\n    //mainPieUpdate.exit().remove();\n};\n\nc3_chart_internal_fn.initArc = function () {\n    var $$ = this;\n    $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style(\"text-anchor\", \"middle\").text($$.getArcTitle());\n};\n\nc3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        main = $$.main,\n        mainArc;\n    mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));\n    mainArc.enter().append('path').attr(\"class\", $$.classArc.bind($$)).style(\"fill\", function (d) {\n        return $$.color(d.data);\n    }).style(\"cursor\", function (d) {\n        return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null;\n    }).each(function (d) {\n        if ($$.isGaugeType(d.data)) {\n            d.startAngle = d.endAngle = config.gauge_startingAngle;\n        }\n        this._current = d;\n    });\n    mainArc.attr(\"transform\", function (d) {\n        return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\";\n    }).on('mouseover', config.interaction_enabled ? function (d) {\n        var updated, arcData;\n        if ($$.transiting) {\n            // skip while transiting\n            return;\n        }\n        updated = $$.updateAngle(d);\n        if (updated) {\n            arcData = $$.convertToArcData(updated);\n            // transitions\n            $$.expandArc(updated.data.id);\n            $$.api.focus(updated.data.id);\n            $$.toggleFocusLegend(updated.data.id, true);\n            $$.config.data_onmouseover(arcData, this);\n        }\n    } : null).on('mousemove', config.interaction_enabled ? function (d) {\n        var updated = $$.updateAngle(d),\n            arcData,\n            selectedData;\n        if (updated) {\n            arcData = $$.convertToArcData(updated), selectedData = [arcData];\n            $$.showTooltip(selectedData, this);\n        }\n    } : null).on('mouseout', config.interaction_enabled ? function (d) {\n        var updated, arcData;\n        if ($$.transiting) {\n            // skip while transiting\n            return;\n        }\n        updated = $$.updateAngle(d);\n        if (updated) {\n            arcData = $$.convertToArcData(updated);\n            // transitions\n            $$.unexpandArc(updated.data.id);\n            $$.api.revert();\n            $$.revertLegend();\n            $$.hideTooltip();\n            $$.config.data_onmouseout(arcData, this);\n        }\n    } : null).on('click', config.interaction_enabled ? function (d, i) {\n        var updated = $$.updateAngle(d),\n            arcData;\n        if (updated) {\n            arcData = $$.convertToArcData(updated);\n            if ($$.toggleShape) {\n                $$.toggleShape(this, arcData, i);\n            }\n            $$.config.data_onclick.call($$.api, arcData, this);\n        }\n    } : null).each(function () {\n        $$.transiting = true;\n    }).transition().duration(duration).attrTween(\"d\", function (d) {\n        var updated = $$.updateAngle(d),\n            interpolate;\n        if (!updated) {\n            return function () {\n                return \"M 0 0\";\n            };\n        }\n        //                if (this._current === d) {\n        //                    this._current = {\n        //                        startAngle: Math.PI*2,\n        //                        endAngle: Math.PI*2,\n        //                    };\n        //                }\n        if (isNaN(this._current.startAngle)) {\n            this._current.startAngle = 0;\n        }\n        if (isNaN(this._current.endAngle)) {\n            this._current.endAngle = this._current.startAngle;\n        }\n        interpolate = d3.interpolate(this._current, updated);\n        this._current = interpolate(0);\n        return function (t) {\n            var interpolated = interpolate(t);\n            interpolated.data = d.data; // data.id will be updated by interporator\n            return $$.getArc(interpolated, true);\n        };\n    }).attr(\"transform\", withTransform ? \"scale(1)\" : \"\").style(\"fill\", function (d) {\n        return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n    } // Where gauge reading color would receive customization.\n    ).call($$.endall, function () {\n        $$.transiting = false;\n    });\n    mainArc.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    main.selectAll('.' + CLASS.chartArc).select('text').style(\"opacity\", 0).attr('class', function (d) {\n        return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\n    }).text($$.textForArcLabel.bind($$)).attr(\"transform\", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {\n        return $$.isGaugeType(d.data) ? Math.round($$.radius / 5) + 'px' : '';\n    }).transition().duration(duration).style(\"opacity\", function (d) {\n        return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\n    });\n    main.select('.' + CLASS.chartArcsTitle).style(\"opacity\", $$.hasType('donut') || $$.hasType('gauge') ? 1 : 0);\n\n    if ($$.hasType('gauge')) {\n        $$.arcs.select('.' + CLASS.chartArcsBackground).attr(\"d\", function () {\n            var d = {\n                data: [{ value: config.gauge_max }],\n                startAngle: config.gauge_startingAngle,\n                endAngle: -1 * config.gauge_startingAngle\n            };\n            return $$.getArc(d, true, true);\n        });\n        $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr(\"dy\", \".75em\").text(config.gauge_label_show ? config.gauge_units : '');\n        $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr(\"dx\", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');\n        $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr(\"dx\", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');\n    }\n};\nc3_chart_internal_fn.initGauge = function () {\n    var arcs = this.arcs;\n    if (this.hasType('gauge')) {\n        arcs.append('path').attr(\"class\", CLASS.chartArcsBackground);\n        arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeUnit).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMin).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMax).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n    }\n};\nc3_chart_internal_fn.getGaugeLabelHeight = function () {\n    return this.config.gauge_label_show ? 20 : 0;\n};\n\nc3_chart_internal_fn.hasCaches = function (ids) {\n    for (var i = 0; i < ids.length; i++) {\n        if (!(ids[i] in this.cache)) {\n            return false;\n        }\n    }\n    return true;\n};\nc3_chart_internal_fn.addCache = function (id, target) {\n    this.cache[id] = this.cloneTarget(target);\n};\nc3_chart_internal_fn.getCaches = function (ids) {\n    var targets = [],\n        i;\n    for (i = 0; i < ids.length; i++) {\n        if (ids[i] in this.cache) {\n            targets.push(this.cloneTarget(this.cache[ids[i]]));\n        }\n    }\n    return targets;\n};\n\nc3_chart_internal_fn.categoryName = function (i) {\n    var config = this.config;\n    return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n};\n\nc3_chart_internal_fn.generateClass = function (prefix, targetId) {\n    return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n};\nc3_chart_internal_fn.classText = function (d) {\n    return this.generateClass(CLASS.text, d.index);\n};\nc3_chart_internal_fn.classTexts = function (d) {\n    return this.generateClass(CLASS.texts, d.id);\n};\nc3_chart_internal_fn.classShape = function (d) {\n    return this.generateClass(CLASS.shape, d.index);\n};\nc3_chart_internal_fn.classShapes = function (d) {\n    return this.generateClass(CLASS.shapes, d.id);\n};\nc3_chart_internal_fn.classLine = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n};\nc3_chart_internal_fn.classLines = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n};\nc3_chart_internal_fn.classCircle = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n};\nc3_chart_internal_fn.classCircles = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n};\nc3_chart_internal_fn.classBar = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n};\nc3_chart_internal_fn.classBars = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n};\nc3_chart_internal_fn.classArc = function (d) {\n    return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n};\nc3_chart_internal_fn.classArcs = function (d) {\n    return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n};\nc3_chart_internal_fn.classArea = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n};\nc3_chart_internal_fn.classAreas = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n};\nc3_chart_internal_fn.classRegion = function (d, i) {\n    return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n};\nc3_chart_internal_fn.classEvent = function (d) {\n    return this.generateClass(CLASS.eventRect, d.index);\n};\nc3_chart_internal_fn.classTarget = function (id) {\n    var $$ = this;\n    var additionalClassSuffix = $$.config.data_classes[id],\n        additionalClass = '';\n    if (additionalClassSuffix) {\n        additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n    }\n    return $$.generateClass(CLASS.target, id) + additionalClass;\n};\nc3_chart_internal_fn.classFocus = function (d) {\n    return this.classFocused(d) + this.classDefocused(d);\n};\nc3_chart_internal_fn.classFocused = function (d) {\n    return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n};\nc3_chart_internal_fn.classDefocused = function (d) {\n    return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n};\nc3_chart_internal_fn.classChartText = function (d) {\n    return CLASS.chartText + this.classTarget(d.id);\n};\nc3_chart_internal_fn.classChartLine = function (d) {\n    return CLASS.chartLine + this.classTarget(d.id);\n};\nc3_chart_internal_fn.classChartBar = function (d) {\n    return CLASS.chartBar + this.classTarget(d.id);\n};\nc3_chart_internal_fn.classChartArc = function (d) {\n    return CLASS.chartArc + this.classTarget(d.data.id);\n};\nc3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n    return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n};\nc3_chart_internal_fn.selectorTarget = function (id, prefix) {\n    return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n};\nc3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n    var $$ = this;\n    ids = ids || [];\n    return ids.length ? ids.map(function (id) {\n        return $$.selectorTarget(id, prefix);\n    }) : null;\n};\nc3_chart_internal_fn.selectorLegend = function (id) {\n    return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n};\nc3_chart_internal_fn.selectorLegends = function (ids) {\n    var $$ = this;\n    return ids && ids.length ? ids.map(function (id) {\n        return $$.selectorLegend(id);\n    }) : null;\n};\n\nc3_chart_internal_fn.getClipPath = function (id) {\n    var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n    return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n};\nc3_chart_internal_fn.appendClip = function (parent, id) {\n    return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n};\nc3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n    // axis line width + padding for left\n    var left = Math.max(30, this.margin.left);\n    return forHorizontal ? -(1 + left) : -(left - 1);\n};\nc3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n    return forHorizontal ? -20 : -this.margin.top;\n};\nc3_chart_internal_fn.getXAxisClipX = function () {\n    var $$ = this;\n    return $$.getAxisClipX(!$$.config.axis_rotated);\n};\nc3_chart_internal_fn.getXAxisClipY = function () {\n    var $$ = this;\n    return $$.getAxisClipY(!$$.config.axis_rotated);\n};\nc3_chart_internal_fn.getYAxisClipX = function () {\n    var $$ = this;\n    return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n};\nc3_chart_internal_fn.getYAxisClipY = function () {\n    var $$ = this;\n    return $$.getAxisClipY($$.config.axis_rotated);\n};\nc3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n    var $$ = this,\n        left = Math.max(30, $$.margin.left),\n        right = Math.max(30, $$.margin.right);\n    // width + axis line width + padding for left/right\n    return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n};\nc3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n    // less than 20 is not enough to show the axis label 'outer' without legend\n    return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;\n};\nc3_chart_internal_fn.getXAxisClipWidth = function () {\n    var $$ = this;\n    return $$.getAxisClipWidth(!$$.config.axis_rotated);\n};\nc3_chart_internal_fn.getXAxisClipHeight = function () {\n    var $$ = this;\n    return $$.getAxisClipHeight(!$$.config.axis_rotated);\n};\nc3_chart_internal_fn.getYAxisClipWidth = function () {\n    var $$ = this;\n    return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n};\nc3_chart_internal_fn.getYAxisClipHeight = function () {\n    var $$ = this;\n    return $$.getAxisClipHeight($$.config.axis_rotated);\n};\n\nc3_chart_internal_fn.generateColor = function () {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3,\n        colors = config.data_colors,\n        pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n        callback = config.data_color,\n        ids = [];\n\n    return function (d) {\n        var id = d.id || d.data && d.data.id || d,\n            color;\n\n        // if callback function is provided\n        if (colors[id] instanceof Function) {\n            color = colors[id](d);\n        }\n        // if specified, choose that color\n        else if (colors[id]) {\n                color = colors[id];\n            }\n            // if not specified, choose from pattern\n            else {\n                    if (ids.indexOf(id) < 0) {\n                        ids.push(id);\n                    }\n                    color = pattern[ids.indexOf(id) % pattern.length];\n                    colors[id] = color;\n                }\n        return callback instanceof Function ? callback(color, d) : color;\n    };\n};\nc3_chart_internal_fn.generateLevelColor = function () {\n    var $$ = this,\n        config = $$.config,\n        colors = config.color_pattern,\n        threshold = config.color_threshold,\n        asValue = threshold.unit === 'value',\n        values = threshold.values && threshold.values.length ? threshold.values : [],\n        max = threshold.max || 100;\n    return notEmpty(config.color_threshold) ? function (value) {\n        var i,\n            v,\n            color = colors[colors.length - 1];\n        for (i = 0; i < values.length; i++) {\n            v = asValue ? value : value * 100 / max;\n            if (v < values[i]) {\n                color = colors[i];\n                break;\n            }\n        }\n        return color;\n    } : null;\n};\n\nc3_chart_internal_fn.getDefaultConfig = function () {\n    var config = {\n        bindto: '#chart',\n        svg_classname: undefined,\n        size_width: undefined,\n        size_height: undefined,\n        padding_left: undefined,\n        padding_right: undefined,\n        padding_top: undefined,\n        padding_bottom: undefined,\n        resize_auto: true,\n        zoom_enabled: false,\n        zoom_extent: undefined,\n        zoom_privileged: false,\n        zoom_rescale: false,\n        zoom_onzoom: function zoom_onzoom() {},\n        zoom_onzoomstart: function zoom_onzoomstart() {},\n        zoom_onzoomend: function zoom_onzoomend() {},\n        zoom_x_min: undefined,\n        zoom_x_max: undefined,\n        interaction_brighten: true,\n        interaction_enabled: true,\n        onmouseover: function onmouseover() {},\n        onmouseout: function onmouseout() {},\n        onresize: function onresize() {},\n        onresized: function onresized() {},\n        oninit: function oninit() {},\n        onrendered: function onrendered() {},\n        transition_duration: 350,\n        data_x: undefined,\n        data_xs: {},\n        data_xFormat: '%Y-%m-%d',\n        data_xLocaltime: true,\n        data_xSort: true,\n        data_idConverter: function data_idConverter(id) {\n            return id;\n        },\n        data_names: {},\n        data_classes: {},\n        data_groups: [],\n        data_axes: {},\n        data_type: undefined,\n        data_types: {},\n        data_labels: {},\n        data_order: 'desc',\n        data_regions: {},\n        data_color: undefined,\n        data_colors: {},\n        data_hide: false,\n        data_filter: undefined,\n        data_selection_enabled: false,\n        data_selection_grouped: false,\n        data_selection_isselectable: function data_selection_isselectable() {\n            return true;\n        },\n        data_selection_multiple: true,\n        data_selection_draggable: false,\n        data_onclick: function data_onclick() {},\n        data_onmouseover: function data_onmouseover() {},\n        data_onmouseout: function data_onmouseout() {},\n        data_onselected: function data_onselected() {},\n        data_onunselected: function data_onunselected() {},\n        data_url: undefined,\n        data_headers: undefined,\n        data_json: undefined,\n        data_rows: undefined,\n        data_columns: undefined,\n        data_mimeType: undefined,\n        data_keys: undefined,\n        // configuration for no plot-able data supplied.\n        data_empty_label_text: \"\",\n        // subchart\n        subchart_show: false,\n        subchart_size_height: 60,\n        subchart_axis_x_show: true,\n        subchart_onbrush: function subchart_onbrush() {},\n        // color\n        color_pattern: [],\n        color_threshold: {},\n        // legend\n        legend_show: true,\n        legend_hide: false,\n        legend_position: 'bottom',\n        legend_inset_anchor: 'top-left',\n        legend_inset_x: 10,\n        legend_inset_y: 0,\n        legend_inset_step: undefined,\n        legend_item_onclick: undefined,\n        legend_item_onmouseover: undefined,\n        legend_item_onmouseout: undefined,\n        legend_equally: false,\n        legend_padding: 0,\n        legend_item_tile_width: 10,\n        legend_item_tile_height: 10,\n        // axis\n        axis_rotated: false,\n        axis_x_show: true,\n        axis_x_type: 'indexed',\n        axis_x_localtime: true,\n        axis_x_categories: [],\n        axis_x_tick_centered: false,\n        axis_x_tick_format: undefined,\n        axis_x_tick_culling: {},\n        axis_x_tick_culling_max: 10,\n        axis_x_tick_count: undefined,\n        axis_x_tick_fit: true,\n        axis_x_tick_values: null,\n        axis_x_tick_rotate: 0,\n        axis_x_tick_outer: true,\n        axis_x_tick_multiline: true,\n        axis_x_tick_width: null,\n        axis_x_max: undefined,\n        axis_x_min: undefined,\n        axis_x_padding: {},\n        axis_x_height: undefined,\n        axis_x_extent: undefined,\n        axis_x_label: {},\n        axis_y_show: true,\n        axis_y_type: undefined,\n        axis_y_max: undefined,\n        axis_y_min: undefined,\n        axis_y_inverted: false,\n        axis_y_center: undefined,\n        axis_y_inner: undefined,\n        axis_y_label: {},\n        axis_y_tick_format: undefined,\n        axis_y_tick_outer: true,\n        axis_y_tick_values: null,\n        axis_y_tick_rotate: 0,\n        axis_y_tick_count: undefined,\n        axis_y_tick_time_value: undefined,\n        axis_y_tick_time_interval: undefined,\n        axis_y_padding: {},\n        axis_y_default: undefined,\n        axis_y2_show: false,\n        axis_y2_max: undefined,\n        axis_y2_min: undefined,\n        axis_y2_inverted: false,\n        axis_y2_center: undefined,\n        axis_y2_inner: undefined,\n        axis_y2_label: {},\n        axis_y2_tick_format: undefined,\n        axis_y2_tick_outer: true,\n        axis_y2_tick_values: null,\n        axis_y2_tick_count: undefined,\n        axis_y2_padding: {},\n        axis_y2_default: undefined,\n        // grid\n        grid_x_show: false,\n        grid_x_type: 'tick',\n        grid_x_lines: [],\n        grid_y_show: false,\n        // not used\n        // grid_y_type: 'tick',\n        grid_y_lines: [],\n        grid_y_ticks: 10,\n        grid_focus_show: true,\n        grid_lines_front: true,\n        // point - point of each data\n        point_show: true,\n        point_r: 2.5,\n        point_sensitivity: 10,\n        point_focus_expand_enabled: true,\n        point_focus_expand_r: undefined,\n        point_select_r: undefined,\n        // line\n        line_connectNull: false,\n        line_step_type: 'step',\n        // bar\n        bar_width: undefined,\n        bar_width_ratio: 0.6,\n        bar_width_max: undefined,\n        bar_zerobased: true,\n        // area\n        area_zerobased: true,\n        area_above: false,\n        // pie\n        pie_label_show: true,\n        pie_label_format: undefined,\n        pie_label_threshold: 0.05,\n        pie_label_ratio: undefined,\n        pie_expand: {},\n        pie_expand_duration: 50,\n        // gauge\n        gauge_fullCircle: false,\n        gauge_label_show: true,\n        gauge_label_format: undefined,\n        gauge_min: 0,\n        gauge_max: 100,\n        gauge_startingAngle: -1 * Math.PI / 2,\n        gauge_label_extents: undefined,\n        gauge_units: undefined,\n        gauge_width: undefined,\n        gauge_expand: {},\n        gauge_expand_duration: 50,\n        // donut\n        donut_label_show: true,\n        donut_label_format: undefined,\n        donut_label_threshold: 0.05,\n        donut_label_ratio: undefined,\n        donut_width: undefined,\n        donut_title: \"\",\n        donut_expand: {},\n        donut_expand_duration: 50,\n        // spline\n        spline_interpolation_type: 'cardinal',\n        // region - region to change style\n        regions: [],\n        // tooltip - show when mouseover on each data\n        tooltip_show: true,\n        tooltip_grouped: true,\n        tooltip_order: undefined,\n        tooltip_format_title: undefined,\n        tooltip_format_name: undefined,\n        tooltip_format_value: undefined,\n        tooltip_position: undefined,\n        tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {\n            return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n        },\n        tooltip_init_show: false,\n        tooltip_init_x: 0,\n        tooltip_init_position: { top: '0px', left: '50px' },\n        tooltip_onshow: function tooltip_onshow() {},\n        tooltip_onhide: function tooltip_onhide() {},\n        // title\n        title_text: undefined,\n        title_padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        },\n        title_position: 'top-center'\n    };\n\n    Object.keys(this.additionalConfig).forEach(function (key) {\n        config[key] = this.additionalConfig[key];\n    }, this);\n\n    return config;\n};\nc3_chart_internal_fn.additionalConfig = {};\n\nc3_chart_internal_fn.loadConfig = function (config) {\n    var this_config = this.config,\n        target,\n        keys,\n        read;\n    function find() {\n        var key = keys.shift();\n        //        console.log(\"key =>\", key, \", target =>\", target);\n        if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {\n            target = target[key];\n            return find();\n        } else if (!key) {\n            return target;\n        } else {\n            return undefined;\n        }\n    }\n    Object.keys(this_config).forEach(function (key) {\n        target = config;\n        keys = key.split('_');\n        read = find();\n        //        console.log(\"CONFIG : \", key, read);\n        if (isDefined(read)) {\n            this_config[key] = read;\n        }\n    });\n};\n\nc3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n    var $$ = this,\n        type = mimeType ? mimeType : 'csv';\n    var req = $$.d3.xhr(url);\n    if (headers) {\n        Object.keys(headers).forEach(function (header) {\n            req.header(header, headers[header]);\n        });\n    }\n    req.get(function (error, data) {\n        var d;\n        var dataResponse = data.response || data.responseText; // Fixes IE9 XHR issue; see #1345\n        if (!data) {\n            throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n        }\n        if (type === 'json') {\n            d = $$.convertJsonToData(JSON.parse(dataResponse), keys);\n        } else if (type === 'tsv') {\n            d = $$.convertTsvToData(dataResponse);\n        } else {\n            d = $$.convertCsvToData(dataResponse);\n        }\n        done.call($$, d);\n    });\n};\nc3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n    var rows = parser.parseRows(xsv),\n        d;\n    if (rows.length === 1) {\n        d = [{}];\n        rows[0].forEach(function (id) {\n            d[0][id] = null;\n        });\n    } else {\n        d = parser.parse(xsv);\n    }\n    return d;\n};\nc3_chart_internal_fn.convertCsvToData = function (csv) {\n    return this.convertXsvToData(csv, this.d3.csv);\n};\nc3_chart_internal_fn.convertTsvToData = function (tsv) {\n    return this.convertXsvToData(tsv, this.d3.tsv);\n};\nc3_chart_internal_fn.convertJsonToData = function (json, keys) {\n    var $$ = this,\n        new_rows = [],\n        targetKeys,\n        data;\n    if (keys) {\n        // when keys specified, json would be an array that includes objects\n        if (keys.x) {\n            targetKeys = keys.value.concat(keys.x);\n            $$.config.data_x = keys.x;\n        } else {\n            targetKeys = keys.value;\n        }\n        new_rows.push(targetKeys);\n        json.forEach(function (o) {\n            var new_row = [];\n            targetKeys.forEach(function (key) {\n                // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                var v = $$.findValueInJson(o, key);\n                if (isUndefined(v)) {\n                    v = null;\n                }\n                new_row.push(v);\n            });\n            new_rows.push(new_row);\n        });\n        data = $$.convertRowsToData(new_rows);\n    } else {\n        Object.keys(json).forEach(function (key) {\n            new_rows.push([key].concat(json[key]));\n        });\n        data = $$.convertColumnsToData(new_rows);\n    }\n    return data;\n};\nc3_chart_internal_fn.findValueInJson = function (object, path) {\n    path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n    path = path.replace(/^\\./, ''); // strip a leading dot\n    var pathArray = path.split('.');\n    for (var i = 0; i < pathArray.length; ++i) {\n        var k = pathArray[i];\n        if (k in object) {\n            object = object[k];\n        } else {\n            return;\n        }\n    }\n    return object;\n};\n\n/**\n * Converts the rows to normalized data.\n * @param {any[][]} rows The row data\n * @return {Object[]}\n */\nc3_chart_internal_fn.convertRowsToData = function (rows) {\n    var newRows = [];\n    var keys = rows[0];\n\n    for (var i = 1; i < rows.length; i++) {\n        var newRow = {};\n        for (var j = 0; j < rows[i].length; j++) {\n            if (isUndefined(rows[i][j])) {\n                throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n            }\n            newRow[keys[j]] = rows[i][j];\n        }\n        newRows.push(newRow);\n    }\n    return newRows;\n};\n\n/**\n * Converts the columns to normalized data.\n * @param {any[][]} columns The column data\n * @return {Object[]}\n */\nc3_chart_internal_fn.convertColumnsToData = function (columns) {\n    var newRows = [];\n\n    for (var i = 0; i < columns.length; i++) {\n        var key = columns[i][0];\n        for (var j = 1; j < columns[i].length; j++) {\n            if (isUndefined(newRows[j - 1])) {\n                newRows[j - 1] = {};\n            }\n            if (isUndefined(columns[i][j])) {\n                throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n            }\n            newRows[j - 1][key] = columns[i][j];\n        }\n    }\n\n    return newRows;\n};\n\nc3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n    var $$ = this,\n        config = $$.config,\n        ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n        xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n        targets;\n\n    // save x for update data by load when custom x and c3.x API\n    ids.forEach(function (id) {\n        var xKey = $$.getXKey(id);\n\n        if ($$.isCustomX() || $$.isTimeSeries()) {\n            // if included in input data\n            if (xs.indexOf(xKey) >= 0) {\n                $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {\n                    return d[xKey];\n                }).filter(isValue).map(function (rawX, i) {\n                    return $$.generateTargetX(rawX, id, i);\n                }));\n            }\n            // if not included in input data, find from preloaded data of other id's x\n            else if (config.data_x) {\n                    $$.data.xs[id] = $$.getOtherTargetXs();\n                }\n                // if not included in input data, find from preloaded data\n                else if (notEmpty(config.data_xs)) {\n                        $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                    }\n            // MEMO: if no x included, use same x of current will be used\n        } else {\n            $$.data.xs[id] = data.map(function (d, i) {\n                return i;\n            });\n        }\n    });\n\n    // check x is defined\n    ids.forEach(function (id) {\n        if (!$$.data.xs[id]) {\n            throw new Error('x is not defined for id = \"' + id + '\".');\n        }\n    });\n\n    // convert to target\n    targets = ids.map(function (id, index) {\n        var convertedId = config.data_idConverter(id);\n        return {\n            id: convertedId,\n            id_org: id,\n            values: data.map(function (d, i) {\n                var xKey = $$.getXKey(id),\n                    rawX = d[xKey],\n                    value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,\n                    x;\n                // use x as categories if custom x and categorized\n                if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\n                    if (index === 0 && i === 0) {\n                        config.axis_x_categories = [];\n                    }\n                    x = config.axis_x_categories.indexOf(rawX);\n                    if (x === -1) {\n                        x = config.axis_x_categories.length;\n                        config.axis_x_categories.push(rawX);\n                    }\n                } else {\n                    x = $$.generateTargetX(rawX, id, i);\n                }\n                // mark as x = undefined if value is undefined and filter to remove after mapped\n                if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                    x = undefined;\n                }\n                return { x: x, value: value, id: convertedId };\n            }).filter(function (v) {\n                return isDefined(v.x);\n            })\n        };\n    });\n\n    // finish targets\n    targets.forEach(function (t) {\n        var i;\n        // sort values by its x\n        if (config.data_xSort) {\n            t.values = t.values.sort(function (v1, v2) {\n                var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                    x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                return x1 - x2;\n            });\n        }\n        // indexing each value\n        i = 0;\n        t.values.forEach(function (v) {\n            v.index = i++;\n        });\n        // this needs to be sorted because its index and value.index is identical\n        $$.data.xs[t.id].sort(function (v1, v2) {\n            return v1 - v2;\n        });\n    });\n\n    // cache information about values\n    $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n    $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n    // set target types\n    if (config.data_type) {\n        $$.setTargetType($$.mapToIds(targets).filter(function (id) {\n            return !(id in config.data_types);\n        }), config.data_type);\n    }\n\n    // cache as original id keyed\n    targets.forEach(function (d) {\n        $$.addCache(d.id_org, d);\n    });\n\n    return targets;\n};\n\nc3_chart_internal_fn.isX = function (key) {\n    var $$ = this,\n        config = $$.config;\n    return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);\n};\nc3_chart_internal_fn.isNotX = function (key) {\n    return !this.isX(key);\n};\nc3_chart_internal_fn.getXKey = function (id) {\n    var $$ = this,\n        config = $$.config;\n    return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n};\nc3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n    var $$ = this,\n        xValues,\n        ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n    ids.forEach(function (id) {\n        if ($$.getXKey(id) === key) {\n            xValues = $$.data.xs[id];\n        }\n    });\n    return xValues;\n};\nc3_chart_internal_fn.getIndexByX = function (x) {\n    var $$ = this,\n        data = $$.filterByX($$.data.targets, x);\n    return data.length ? data[0].index : null;\n};\nc3_chart_internal_fn.getXValue = function (id, i) {\n    var $$ = this;\n    return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n};\nc3_chart_internal_fn.getOtherTargetXs = function () {\n    var $$ = this,\n        idsForX = Object.keys($$.data.xs);\n    return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n};\nc3_chart_internal_fn.getOtherTargetX = function (index) {\n    var xs = this.getOtherTargetXs();\n    return xs && index < xs.length ? xs[index] : null;\n};\nc3_chart_internal_fn.addXs = function (xs) {\n    var $$ = this;\n    Object.keys(xs).forEach(function (id) {\n        $$.config.data_xs[id] = xs[id];\n    });\n};\nc3_chart_internal_fn.hasMultipleX = function (xs) {\n    return this.d3.set(Object.keys(xs).map(function (id) {\n        return xs[id];\n    })).size() > 1;\n};\nc3_chart_internal_fn.isMultipleX = function () {\n    return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n};\nc3_chart_internal_fn.addName = function (data) {\n    var $$ = this,\n        name;\n    if (data) {\n        name = $$.config.data_names[data.id];\n        data.name = name !== undefined ? name : data.id;\n    }\n    return data;\n};\nc3_chart_internal_fn.getValueOnIndex = function (values, index) {\n    var valueOnIndex = values.filter(function (v) {\n        return v.index === index;\n    });\n    return valueOnIndex.length ? valueOnIndex[0] : null;\n};\nc3_chart_internal_fn.updateTargetX = function (targets, x) {\n    var $$ = this;\n    targets.forEach(function (t) {\n        t.values.forEach(function (v, i) {\n            v.x = $$.generateTargetX(x[i], t.id, i);\n        });\n        $$.data.xs[t.id] = x;\n    });\n};\nc3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n    var $$ = this;\n    targets.forEach(function (t) {\n        if (xs[t.id]) {\n            $$.updateTargetX([t], xs[t.id]);\n        }\n    });\n};\nc3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n    var $$ = this,\n        x;\n    if ($$.isTimeSeries()) {\n        x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n    } else if ($$.isCustomX() && !$$.isCategorized()) {\n        x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n    } else {\n        x = index;\n    }\n    return x;\n};\nc3_chart_internal_fn.cloneTarget = function (target) {\n    return {\n        id: target.id,\n        id_org: target.id_org,\n        values: target.values.map(function (d) {\n            return { x: d.x, value: d.value, id: d.id };\n        })\n    };\n};\nc3_chart_internal_fn.updateXs = function () {\n    var $$ = this;\n    if ($$.data.targets.length) {\n        $$.xs = [];\n        $$.data.targets[0].values.forEach(function (v) {\n            $$.xs[v.index] = v.x;\n        });\n    }\n};\nc3_chart_internal_fn.getPrevX = function (i) {\n    var x = this.xs[i - 1];\n    return typeof x !== 'undefined' ? x : null;\n};\nc3_chart_internal_fn.getNextX = function (i) {\n    var x = this.xs[i + 1];\n    return typeof x !== 'undefined' ? x : null;\n};\nc3_chart_internal_fn.getMaxDataCount = function () {\n    var $$ = this;\n    return $$.d3.max($$.data.targets, function (t) {\n        return t.values.length;\n    });\n};\nc3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n    var length = targets.length,\n        max = 0,\n        maxTarget;\n    if (length > 1) {\n        targets.forEach(function (t) {\n            if (t.values.length > max) {\n                maxTarget = t;\n                max = t.values.length;\n            }\n        });\n    } else {\n        maxTarget = length ? targets[0] : null;\n    }\n    return maxTarget;\n};\nc3_chart_internal_fn.getEdgeX = function (targets) {\n    var $$ = this;\n    return !targets.length ? [0, 0] : [$$.d3.min(targets, function (t) {\n        return t.values[0].x;\n    }), $$.d3.max(targets, function (t) {\n        return t.values[t.values.length - 1].x;\n    })];\n};\nc3_chart_internal_fn.mapToIds = function (targets) {\n    return targets.map(function (d) {\n        return d.id;\n    });\n};\nc3_chart_internal_fn.mapToTargetIds = function (ids) {\n    var $$ = this;\n    return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n};\nc3_chart_internal_fn.hasTarget = function (targets, id) {\n    var ids = this.mapToIds(targets),\n        i;\n    for (i = 0; i < ids.length; i++) {\n        if (ids[i] === id) {\n            return true;\n        }\n    }\n    return false;\n};\nc3_chart_internal_fn.isTargetToShow = function (targetId) {\n    return this.hiddenTargetIds.indexOf(targetId) < 0;\n};\nc3_chart_internal_fn.isLegendToShow = function (targetId) {\n    return this.hiddenLegendIds.indexOf(targetId) < 0;\n};\nc3_chart_internal_fn.filterTargetsToShow = function (targets) {\n    var $$ = this;\n    return targets.filter(function (t) {\n        return $$.isTargetToShow(t.id);\n    });\n};\nc3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n    var $$ = this;\n    var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {\n        return t.values.map(function (v) {\n            return +v.x;\n        });\n    }))).values();\n    xs = $$.isTimeSeries() ? xs.map(function (x) {\n        return new Date(+x);\n    }) : xs.map(function (x) {\n        return +x;\n    });\n    return xs.sort(function (a, b) {\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n    });\n};\nc3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n    targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n    for (var i = 0; i < targetIds.length; i++) {\n        if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\n            this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\n        }\n    }\n};\nc3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n    this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\n        return targetIds.indexOf(id) < 0;\n    });\n};\nc3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n    targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n    for (var i = 0; i < targetIds.length; i++) {\n        if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\n            this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\n        }\n    }\n};\nc3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n    this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\n        return targetIds.indexOf(id) < 0;\n    });\n};\nc3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n    var ys = {};\n    targets.forEach(function (t) {\n        ys[t.id] = [];\n        t.values.forEach(function (v) {\n            ys[t.id].push(v.value);\n        });\n    });\n    return ys;\n};\nc3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n    var ids = Object.keys(targets),\n        i,\n        j,\n        values;\n    for (i = 0; i < ids.length; i++) {\n        values = targets[ids[i]].values;\n        for (j = 0; j < values.length; j++) {\n            if (checker(values[j].value)) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\nc3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n    return this.checkValueInTargets(targets, function (v) {\n        return v < 0;\n    });\n};\nc3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n    return this.checkValueInTargets(targets, function (v) {\n        return v > 0;\n    });\n};\nc3_chart_internal_fn.isOrderDesc = function () {\n    var config = this.config;\n    return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';\n};\nc3_chart_internal_fn.isOrderAsc = function () {\n    var config = this.config;\n    return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';\n};\nc3_chart_internal_fn.orderTargets = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        orderAsc = $$.isOrderAsc(),\n        orderDesc = $$.isOrderDesc();\n    if (orderAsc || orderDesc) {\n        targets.sort(function (t1, t2) {\n            var reducer = function reducer(p, c) {\n                return p + Math.abs(c.value);\n            };\n            var t1Sum = t1.values.reduce(reducer, 0),\n                t2Sum = t2.values.reduce(reducer, 0);\n            return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\n        });\n    } else if (isFunction(config.data_order)) {\n        targets.sort(config.data_order);\n    } else if (isArray(config.data_order)) {\n        targets.sort(function (t1, t2) {\n            return config.data_order.indexOf(t1.id) - config.data_order.indexOf(t2.id);\n        });\n    }\n    return targets;\n};\nc3_chart_internal_fn.filterByX = function (targets, x) {\n    return this.d3.merge(targets.map(function (t) {\n        return t.values;\n    })).filter(function (v) {\n        return v.x - x === 0;\n    });\n};\nc3_chart_internal_fn.filterRemoveNull = function (data) {\n    return data.filter(function (d) {\n        return isValue(d.value);\n    });\n};\nc3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n    return targets.map(function (t) {\n        return {\n            id: t.id,\n            id_org: t.id_org,\n            values: t.values.filter(function (v) {\n                return xDomain[0] <= v.x && v.x <= xDomain[1];\n            })\n        };\n    });\n};\nc3_chart_internal_fn.hasDataLabel = function () {\n    var config = this.config;\n    if (typeof config.data_labels === 'boolean' && config.data_labels) {\n        return true;\n    } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {\n        return true;\n    }\n    return false;\n};\nc3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n    var $$ = this,\n        lengths = [0, 0],\n        paddingCoef = 1.3;\n    $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {\n        return $$.dataLabelFormat(d.id)(d);\n    }).each(function (d, i) {\n        lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n    }).remove();\n    return lengths;\n};\nc3_chart_internal_fn.isNoneArc = function (d) {\n    return this.hasTarget(this.data.targets, d.id);\n}, c3_chart_internal_fn.isArc = function (d) {\n    return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n};\nc3_chart_internal_fn.findSameXOfValues = function (values, index) {\n    var i,\n        targetX = values[index].x,\n        sames = [];\n    for (i = index - 1; i >= 0; i--) {\n        if (targetX !== values[i].x) {\n            break;\n        }\n        sames.push(values[i]);\n    }\n    for (i = index; i < values.length; i++) {\n        if (targetX !== values[i].x) {\n            break;\n        }\n        sames.push(values[i]);\n    }\n    return sames;\n};\n\nc3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n    var $$ = this,\n        candidates;\n\n    // map to array of closest points of each target\n    candidates = targets.map(function (target) {\n        return $$.findClosest(target.values, pos);\n    });\n\n    // decide closest point and return\n    return $$.findClosest(candidates, pos);\n};\nc3_chart_internal_fn.findClosest = function (values, pos) {\n    var $$ = this,\n        minDist = $$.config.point_sensitivity,\n        closest;\n\n    // find mouseovering bar\n    values.filter(function (v) {\n        return v && $$.isBarType(v.id);\n    }).forEach(function (v) {\n        var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n        if (!closest && $$.isWithinBar(shape)) {\n            closest = v;\n        }\n    });\n\n    // find closest point from non-bar\n    values.filter(function (v) {\n        return v && !$$.isBarType(v.id);\n    }).forEach(function (v) {\n        var d = $$.dist(v, pos);\n        if (d < minDist) {\n            minDist = d;\n            closest = v;\n        }\n    });\n\n    return closest;\n};\nc3_chart_internal_fn.dist = function (data, pos) {\n    var $$ = this,\n        config = $$.config,\n        xIndex = config.axis_rotated ? 1 : 0,\n        yIndex = config.axis_rotated ? 0 : 1,\n        y = $$.circleY(data, data.index),\n        x = $$.x(data.x);\n    return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n};\nc3_chart_internal_fn.convertValuesToStep = function (values) {\n    var converted = [].concat(values),\n        i;\n\n    if (!this.isCategorized()) {\n        return values;\n    }\n\n    for (i = values.length + 1; 0 < i; i--) {\n        converted[i] = converted[i - 1];\n    }\n\n    converted[0] = {\n        x: converted[0].x - 1,\n        value: converted[0].value,\n        id: converted[0].id\n    };\n    converted[values.length + 1] = {\n        x: converted[values.length].x + 1,\n        value: converted[values.length].value,\n        id: converted[values.length].id\n    };\n\n    return converted;\n};\nc3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n    var $$ = this,\n        config = $$.config,\n        current = config['data_' + name];\n    if (typeof attrs === 'undefined') {\n        return current;\n    }\n    Object.keys(attrs).forEach(function (id) {\n        current[id] = attrs[id];\n    });\n    $$.redraw({ withLegend: true });\n    return current;\n};\n\nc3_chart_internal_fn.load = function (targets, args) {\n    var $$ = this;\n    if (targets) {\n        // filter loading targets if needed\n        if (args.filter) {\n            targets = targets.filter(args.filter);\n        }\n        // set type if args.types || args.type specified\n        if (args.type || args.types) {\n            targets.forEach(function (t) {\n                var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                $$.setTargetType(t.id, type);\n            });\n        }\n        // Update/Add data\n        $$.data.targets.forEach(function (d) {\n            for (var i = 0; i < targets.length; i++) {\n                if (d.id === targets[i].id) {\n                    d.values = targets[i].values;\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n        });\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n    }\n\n    // Set targets\n    $$.updateTargets($$.data.targets);\n\n    // Redraw with new targets\n    $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n\n    if (args.done) {\n        args.done();\n    }\n};\nc3_chart_internal_fn.loadFromArgs = function (args) {\n    var $$ = this;\n    if (args.data) {\n        $$.load($$.convertDataToTargets(args.data), args);\n    } else if (args.url) {\n        $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n            $$.load($$.convertDataToTargets(data), args);\n        });\n    } else if (args.json) {\n        $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n    } else if (args.rows) {\n        $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n    } else if (args.columns) {\n        $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n    } else {\n        $$.load(null, args);\n    }\n};\nc3_chart_internal_fn.unload = function (targetIds, done) {\n    var $$ = this;\n    if (!done) {\n        done = function done() {};\n    }\n    // filter existing target\n    targetIds = targetIds.filter(function (id) {\n        return $$.hasTarget($$.data.targets, id);\n    });\n    // If no target, call done and return\n    if (!targetIds || targetIds.length === 0) {\n        done();\n        return;\n    }\n    $$.svg.selectAll(targetIds.map(function (id) {\n        return $$.selectorTarget(id);\n    })).transition().style('opacity', 0).remove().call($$.endall, done);\n    targetIds.forEach(function (id) {\n        // Reset fadein for future load\n        $$.withoutFadeIn[id] = false;\n        // Remove target's elements\n        if ($$.legend) {\n            $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n        }\n        // Remove target\n        $$.data.targets = $$.data.targets.filter(function (t) {\n            return t.id !== id;\n        });\n    });\n};\n\nc3_chart_internal_fn.getYDomainMin = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        ids = $$.mapToIds(targets),\n        ys = $$.getValuesAsIdKeyed(targets),\n        j,\n        k,\n        baseId,\n        idsInGroup,\n        id,\n        hasNegativeValue;\n    if (config.data_groups.length > 0) {\n        hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        for (j = 0; j < config.data_groups.length; j++) {\n            // Determine baseId\n            idsInGroup = config.data_groups[j].filter(function (id) {\n                return ids.indexOf(id) >= 0;\n            });\n            if (idsInGroup.length === 0) {\n                continue;\n            }\n            baseId = idsInGroup[0];\n            // Consider negative values\n            if (hasNegativeValue && ys[baseId]) {\n                ys[baseId].forEach(function (v, i) {\n                    ys[baseId][i] = v < 0 ? v : 0;\n                });\n            }\n            // Compute min\n            for (k = 1; k < idsInGroup.length; k++) {\n                id = idsInGroup[k];\n                if (!ys[id]) {\n                    continue;\n                }\n                ys[id].forEach(function (v, i) {\n                    if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                        ys[baseId][i] += +v;\n                    }\n                });\n            }\n        }\n    }\n    return $$.d3.min(Object.keys(ys).map(function (key) {\n        return $$.d3.min(ys[key]);\n    }));\n};\nc3_chart_internal_fn.getYDomainMax = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        ids = $$.mapToIds(targets),\n        ys = $$.getValuesAsIdKeyed(targets),\n        j,\n        k,\n        baseId,\n        idsInGroup,\n        id,\n        hasPositiveValue;\n    if (config.data_groups.length > 0) {\n        hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n        for (j = 0; j < config.data_groups.length; j++) {\n            // Determine baseId\n            idsInGroup = config.data_groups[j].filter(function (id) {\n                return ids.indexOf(id) >= 0;\n            });\n            if (idsInGroup.length === 0) {\n                continue;\n            }\n            baseId = idsInGroup[0];\n            // Consider positive values\n            if (hasPositiveValue && ys[baseId]) {\n                ys[baseId].forEach(function (v, i) {\n                    ys[baseId][i] = v > 0 ? v : 0;\n                });\n            }\n            // Compute max\n            for (k = 1; k < idsInGroup.length; k++) {\n                id = idsInGroup[k];\n                if (!ys[id]) {\n                    continue;\n                }\n                ys[id].forEach(function (v, i) {\n                    if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                        ys[baseId][i] += +v;\n                    }\n                });\n            }\n        }\n    }\n    return $$.d3.max(Object.keys(ys).map(function (key) {\n        return $$.d3.max(ys[key]);\n    }));\n};\nc3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n    var $$ = this,\n        config = $$.config,\n        targetsByAxisId = targets.filter(function (t) {\n        return $$.axis.getId(t.id) === axisId;\n    }),\n        yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n        yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n        yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n        yDomainMin = $$.getYDomainMin(yTargets),\n        yDomainMax = $$.getYDomainMax(yTargets),\n        domain,\n        domainLength,\n        padding,\n        padding_top,\n        padding_bottom,\n        center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n        yDomainAbs,\n        lengths,\n        diff,\n        ratio,\n        isAllPositive,\n        isAllNegative,\n        isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,\n        isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n        showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n        showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n    // MEMO: avoid inverting domain unexpectedly\n    yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;\n    yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;\n\n    if (yTargets.length === 0) {\n        // use current domain if target of axisId is none\n        return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n    }\n    if (isNaN(yDomainMin)) {\n        // set minimum to zero when not number\n        yDomainMin = 0;\n    }\n    if (isNaN(yDomainMax)) {\n        // set maximum to have same value as yDomainMin\n        yDomainMax = yDomainMin;\n    }\n    if (yDomainMin === yDomainMax) {\n        yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n    }\n    isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n    isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n    // Cancel zerobased if axis_*_min / axis_*_max specified\n    if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {\n        isZeroBased = false;\n    }\n\n    // Bar/Area chart should be 0-based if all positive|negative\n    if (isZeroBased) {\n        if (isAllPositive) {\n            yDomainMin = 0;\n        }\n        if (isAllNegative) {\n            yDomainMax = 0;\n        }\n    }\n\n    domainLength = Math.abs(yDomainMax - yDomainMin);\n    padding = padding_top = padding_bottom = domainLength * 0.1;\n\n    if (typeof center !== 'undefined') {\n        yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n        yDomainMax = center + yDomainAbs;\n        yDomainMin = center - yDomainAbs;\n    }\n    // add padding for data label\n    if (showHorizontalDataLabel) {\n        lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n        diff = diffDomain($$.y.range());\n        ratio = [lengths[0] / diff, lengths[1] / diff];\n        padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n        padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n    } else if (showVerticalDataLabel) {\n        lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n        padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n        padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n    }\n    if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n        padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n        padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n    }\n    if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n        padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n        padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n    }\n    // Bar/Area chart should be 0-based if all positive|negative\n    if (isZeroBased) {\n        if (isAllPositive) {\n            padding_bottom = yDomainMin;\n        }\n        if (isAllNegative) {\n            padding_top = -yDomainMax;\n        }\n    }\n    domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n    return isInverted ? domain.reverse() : domain;\n};\nc3_chart_internal_fn.getXDomainMin = function (targets) {\n    var $$ = this,\n        config = $$.config;\n    return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {\n        return $$.d3.min(t.values, function (v) {\n            return v.x;\n        });\n    });\n};\nc3_chart_internal_fn.getXDomainMax = function (targets) {\n    var $$ = this,\n        config = $$.config;\n    return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {\n        return $$.d3.max(t.values, function (v) {\n            return v.x;\n        });\n    });\n};\nc3_chart_internal_fn.getXDomainPadding = function (domain) {\n    var $$ = this,\n        config = $$.config,\n        diff = domain[1] - domain[0],\n        maxDataCount,\n        padding,\n        paddingLeft,\n        paddingRight;\n    if ($$.isCategorized()) {\n        padding = 0;\n    } else if ($$.hasType('bar')) {\n        maxDataCount = $$.getMaxDataCount();\n        padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\n    } else {\n        padding = diff * 0.01;\n    }\n    if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {\n        paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n        paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n    } else if (typeof config.axis_x_padding === 'number') {\n        paddingLeft = paddingRight = config.axis_x_padding;\n    } else {\n        paddingLeft = paddingRight = padding;\n    }\n    return { left: paddingLeft, right: paddingRight };\n};\nc3_chart_internal_fn.getXDomain = function (targets) {\n    var $$ = this,\n        xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n        firstX = xDomain[0],\n        lastX = xDomain[1],\n        padding = $$.getXDomainPadding(xDomain),\n        min = 0,\n        max = 0;\n    // show center of x domain if min and max are the same\n    if (firstX - lastX === 0 && !$$.isCategorized()) {\n        if ($$.isTimeSeries()) {\n            firstX = new Date(firstX.getTime() * 0.5);\n            lastX = new Date(lastX.getTime() * 1.5);\n        } else {\n            firstX = firstX === 0 ? 1 : firstX * 0.5;\n            lastX = lastX === 0 ? -1 : lastX * 1.5;\n        }\n    }\n    if (firstX || firstX === 0) {\n        min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n    }\n    if (lastX || lastX === 0) {\n        max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n    }\n    return [min, max];\n};\nc3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n    var $$ = this,\n        config = $$.config;\n\n    if (withUpdateOrgXDomain) {\n        $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n        $$.orgXDomain = $$.x.domain();\n        if (config.zoom_enabled) {\n            $$.zoom.scale($$.x).updateScaleExtent();\n        }\n        $$.subX.domain($$.x.domain());\n        if ($$.brush) {\n            $$.brush.scale($$.subX);\n        }\n    }\n    if (withUpdateXDomain) {\n        $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.extent());\n        if (config.zoom_enabled) {\n            $$.zoom.scale($$.x).updateScaleExtent();\n        }\n    }\n\n    // Trim domain when too big by zoom mousemove event\n    if (withTrim) {\n        $$.x.domain($$.trimXDomain($$.x.orgDomain()));\n    }\n\n    return $$.x.domain();\n};\nc3_chart_internal_fn.trimXDomain = function (domain) {\n    var zoomDomain = this.getZoomDomain(),\n        min = zoomDomain[0],\n        max = zoomDomain[1];\n    if (domain[0] <= min) {\n        domain[1] = +domain[1] + (min - domain[0]);\n        domain[0] = min;\n    }\n    if (max <= domain[1]) {\n        domain[0] = +domain[0] - (domain[1] - max);\n        domain[1] = max;\n    }\n    return domain;\n};\n\nc3_chart_internal_fn.drag = function (mouse) {\n    var $$ = this,\n        config = $$.config,\n        main = $$.main,\n        d3 = $$.d3;\n    var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n    if ($$.hasArcType()) {\n        return;\n    }\n    if (!config.data_selection_enabled) {\n        return;\n    } // do nothing if not selectable\n    if (config.zoom_enabled && !$$.zoom.altDomain) {\n        return;\n    } // skip if zoomable because of conflict drag dehavior\n    if (!config.data_selection_multiple) {\n        return;\n    } // skip when single selection because drag is used for multiple selection\n\n    sx = $$.dragStart[0];\n    sy = $$.dragStart[1];\n    mx = mouse[0];\n    my = mouse[1];\n    minX = Math.min(sx, mx);\n    maxX = Math.max(sx, mx);\n    minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\n    maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\n\n    main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY);\n    // TODO: binary search when multiple xs\n    main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {\n        return config.data_selection_isselectable(d);\n    }).each(function (d, i) {\n        var shape = d3.select(this),\n            isSelected = shape.classed(CLASS.SELECTED),\n            isIncluded = shape.classed(CLASS.INCLUDED),\n            _x,\n            _y,\n            _w,\n            _h,\n            toggle,\n            isWithin = false,\n            box;\n        if (shape.classed(CLASS.circle)) {\n            _x = shape.attr(\"cx\") * 1;\n            _y = shape.attr(\"cy\") * 1;\n            toggle = $$.togglePoint;\n            isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n        } else if (shape.classed(CLASS.bar)) {\n            box = getPathBox(this);\n            _x = box.x;\n            _y = box.y;\n            _w = box.width;\n            _h = box.height;\n            toggle = $$.togglePath;\n            isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n        } else {\n            // line/area selection not supported yet\n            return;\n        }\n        if (isWithin ^ isIncluded) {\n            shape.classed(CLASS.INCLUDED, !isIncluded);\n            // TODO: included/unincluded callback here\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle.call($$, !isSelected, shape, d, i);\n        }\n    });\n};\n\nc3_chart_internal_fn.dragstart = function (mouse) {\n    var $$ = this,\n        config = $$.config;\n    if ($$.hasArcType()) {\n        return;\n    }\n    if (!config.data_selection_enabled) {\n        return;\n    } // do nothing if not selectable\n    $$.dragStart = mouse;\n    $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);\n    $$.dragging = true;\n};\n\nc3_chart_internal_fn.dragend = function () {\n    var $$ = this,\n        config = $$.config;\n    if ($$.hasArcType()) {\n        return;\n    }\n    if (!config.data_selection_enabled) {\n        return;\n    } // do nothing if not selectable\n    $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();\n    $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\n    $$.dragging = false;\n};\n\nc3_chart_internal_fn.getYFormat = function (forArc) {\n    var $$ = this,\n        formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n        formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n    return function (v, ratio, id) {\n        var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n        return format.call($$, v, ratio);\n    };\n};\nc3_chart_internal_fn.yFormat = function (v) {\n    var $$ = this,\n        config = $$.config,\n        format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n    return format(v);\n};\nc3_chart_internal_fn.y2Format = function (v) {\n    var $$ = this,\n        config = $$.config,\n        format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n    return format(v);\n};\nc3_chart_internal_fn.defaultValueFormat = function (v) {\n    return isValue(v) ? +v : \"\";\n};\nc3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n    return (ratio * 100).toFixed(1) + '%';\n};\nc3_chart_internal_fn.dataLabelFormat = function (targetId) {\n    var $$ = this,\n        data_labels = $$.config.data_labels,\n        format,\n        defaultFormat = function defaultFormat(v) {\n        return isValue(v) ? +v : \"\";\n    };\n    // find format according to axis id\n    if (typeof data_labels.format === 'function') {\n        format = data_labels.format;\n    } else if (_typeof(data_labels.format) === 'object') {\n        if (data_labels.format[targetId]) {\n            format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n        } else {\n            format = function format() {\n                return '';\n            };\n        }\n    } else {\n        format = defaultFormat;\n    }\n    return format;\n};\n\nc3_chart_internal_fn.initGrid = function () {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3;\n    $$.grid = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid);\n    if (config.grid_x_show) {\n        $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n    }\n    if (config.grid_y_show) {\n        $$.grid.append('g').attr('class', CLASS.ygrids);\n    }\n    if (config.grid_focus_show) {\n        $$.grid.append('g').attr(\"class\", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);\n    }\n    $$.xgrid = d3.selectAll([]);\n    if (!config.grid_lines_front) {\n        $$.initGridLines();\n    }\n};\nc3_chart_internal_fn.initGridLines = function () {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.gridLines = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n    $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n    $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n    $$.xgridLines = d3.selectAll([]);\n};\nc3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3,\n        xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n        tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n    $$.xgridAttr = config.axis_rotated ? {\n        'x1': 0,\n        'x2': $$.width,\n        'y1': function y1(d) {\n            return $$.x(d) - tickOffset;\n        },\n        'y2': function y2(d) {\n            return $$.x(d) - tickOffset;\n        }\n    } : {\n        'x1': function x1(d) {\n            return $$.x(d) + tickOffset;\n        },\n        'x2': function x2(d) {\n            return $$.x(d) + tickOffset;\n        },\n        'y1': 0,\n        'y2': $$.height\n    };\n\n    $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);\n    $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n    if (!withoutUpdate) {\n        $$.xgrid.attr($$.xgridAttr).style(\"opacity\", function () {\n            return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\n        });\n    }\n    $$.xgrid.exit().remove();\n};\n\nc3_chart_internal_fn.updateYGrid = function () {\n    var $$ = this,\n        config = $$.config,\n        gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n    $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);\n    $$.ygrid.enter().append('line').attr('class', CLASS.ygrid);\n    $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0).attr(\"x2\", config.axis_rotated ? $$.y : $$.width).attr(\"y1\", config.axis_rotated ? 0 : $$.y).attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n    $$.ygrid.exit().remove();\n    $$.smoothLines($$.ygrid, 'grid');\n};\n\nc3_chart_internal_fn.gridTextAnchor = function (d) {\n    return d.position ? d.position : \"end\";\n};\nc3_chart_internal_fn.gridTextDx = function (d) {\n    return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n};\nc3_chart_internal_fn.xGridTextX = function (d) {\n    return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n};\nc3_chart_internal_fn.yGridTextX = function (d) {\n    return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n};\nc3_chart_internal_fn.updateGrid = function (duration) {\n    var $$ = this,\n        main = $$.main,\n        config = $$.config,\n        xgridLine,\n        ygridLine,\n        yv;\n\n    // hide if arc type\n    $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n    main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    if (config.grid_x_show) {\n        $$.updateXGrid();\n    }\n    $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines);\n    // enter\n    xgridLine = $$.xgridLines.enter().append('g').attr(\"class\", function (d) {\n        return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\n    });\n    xgridLine.append('line').style(\"opacity\", 0);\n    xgridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n    // udpate\n    // done in d3.transition() of the end of this function\n    // exit\n    $$.xgridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n\n    // Y-Grid\n    if (config.grid_y_show) {\n        $$.updateYGrid();\n    }\n    $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines);\n    // enter\n    ygridLine = $$.ygridLines.enter().append('g').attr(\"class\", function (d) {\n        return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\n    });\n    ygridLine.append('line').style(\"opacity\", 0);\n    ygridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n    // update\n    yv = $$.yv.bind($$);\n    $$.ygridLines.select('line').transition().duration(duration).attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 1);\n    $$.ygridLines.select('text').transition().duration(duration).attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr(\"y\", yv).text(function (d) {\n        return d.text;\n    }).style(\"opacity\", 1);\n    // exit\n    $$.ygridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n};\nc3_chart_internal_fn.redrawGrid = function (withTransition) {\n    var $$ = this,\n        config = $$.config,\n        xv = $$.xv.bind($$),\n        lines = $$.xgridLines.select('line'),\n        texts = $$.xgridLines.select('text');\n    return [(withTransition ? lines.transition() : lines).attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 1), (withTransition ? texts.transition() : texts).attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr(\"y\", xv).text(function (d) {\n        return d.text;\n    }).style(\"opacity\", 1)];\n};\nc3_chart_internal_fn.showXGridFocus = function (selectedData) {\n    var $$ = this,\n        config = $$.config,\n        dataToShow = selectedData.filter(function (d) {\n        return d && isValue(d.value);\n    }),\n        focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n        xx = $$.xx.bind($$);\n    if (!config.tooltip_show) {\n        return;\n    }\n    // Hide when scatter plot exists\n    if ($$.hasType('scatter') || $$.hasArcType()) {\n        return;\n    }\n    focusEl.style(\"visibility\", \"visible\").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);\n    $$.smoothLines(focusEl, 'grid');\n};\nc3_chart_internal_fn.hideXGridFocus = function () {\n    this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n};\nc3_chart_internal_fn.updateXgridFocus = function () {\n    var $$ = this,\n        config = $$.config;\n    $$.main.select('line.' + CLASS.xgridFocus).attr(\"x1\", config.axis_rotated ? 0 : -10).attr(\"x2\", config.axis_rotated ? $$.width : -10).attr(\"y1\", config.axis_rotated ? -10 : 0).attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n};\nc3_chart_internal_fn.generateGridData = function (type, scale) {\n    var $$ = this,\n        gridData = [],\n        xDomain,\n        firstYear,\n        lastYear,\n        i,\n        tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n    if (type === 'year') {\n        xDomain = $$.getXDomain();\n        firstYear = xDomain[0].getFullYear();\n        lastYear = xDomain[1].getFullYear();\n        for (i = firstYear; i <= lastYear; i++) {\n            gridData.push(new Date(i + '-01-01 00:00:00'));\n        }\n    } else {\n        gridData = scale.ticks(10);\n        if (gridData.length > tickNum) {\n            // use only int\n            gridData = gridData.filter(function (d) {\n                return (\"\" + d).indexOf('.') < 0;\n            });\n        }\n    }\n    return gridData;\n};\nc3_chart_internal_fn.getGridFilterToRemove = function (params) {\n    return params ? function (line) {\n        var found = false;\n        [].concat(params).forEach(function (param) {\n            if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {\n                found = true;\n            }\n        });\n        return found;\n    } : function () {\n        return true;\n    };\n};\nc3_chart_internal_fn.removeGridLines = function (params, forX) {\n    var $$ = this,\n        config = $$.config,\n        toRemove = $$.getGridFilterToRemove(params),\n        toShow = function toShow(line) {\n        return !toRemove(line);\n    },\n        classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n        classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n    $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();\n    if (forX) {\n        config.grid_x_lines = config.grid_x_lines.filter(toShow);\n    } else {\n        config.grid_y_lines = config.grid_y_lines.filter(toShow);\n    }\n};\n\nc3_chart_internal_fn.initEventRect = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.eventRects).style('fill-opacity', 0);\n};\nc3_chart_internal_fn.redrawEventRect = function () {\n    var $$ = this,\n        config = $$.config,\n        eventRectUpdate,\n        maxDataCountTarget,\n        isMultipleX = $$.isMultipleX();\n\n    // rects for mouseover\n    var eventRects = $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null).classed(CLASS.eventRectsMultiple, isMultipleX).classed(CLASS.eventRectsSingle, !isMultipleX);\n\n    // clear old rects\n    eventRects.selectAll('.' + CLASS.eventRect).remove();\n\n    // open as public variable\n    $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n    if (isMultipleX) {\n        eventRectUpdate = $$.eventRect.data([0]);\n        // enter : only one rect will be added\n        $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n        // update\n        $$.updateEventRect(eventRectUpdate);\n        // exit : not needed because always only one rect exists\n    } else {\n        // Set data and update $$.eventRect\n        maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n        eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n        eventRectUpdate = $$.eventRect.data(function (d) {\n            return d;\n        });\n        // enter\n        $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n        // update\n        $$.updateEventRect(eventRectUpdate);\n        // exit\n        eventRectUpdate.exit().remove();\n    }\n};\nc3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n    var $$ = this,\n        config = $$.config,\n        x,\n        y,\n        w,\n        h,\n        rectW,\n        rectX;\n\n    // set update selection if null\n    eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) {\n        return d;\n    });\n\n    if ($$.isMultipleX()) {\n        // TODO: rotated not supported yet\n        x = 0;\n        y = 0;\n        w = $$.width;\n        h = $$.height;\n    } else {\n        if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\n            // update index for x that is used by prevX and nextX\n            $$.updateXs();\n\n            rectW = function rectW(d) {\n                var prevX = $$.getPrevX(d.index),\n                    nextX = $$.getNextX(d.index);\n\n                // if there this is a single data point make the eventRect full width (or height)\n                if (prevX === null && nextX === null) {\n                    return config.axis_rotated ? $$.height : $$.width;\n                }\n\n                if (prevX === null) {\n                    prevX = $$.x.domain()[0];\n                }\n                if (nextX === null) {\n                    nextX = $$.x.domain()[1];\n                }\n\n                return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n            };\n            rectX = function rectX(d) {\n                var prevX = $$.getPrevX(d.index),\n                    nextX = $$.getNextX(d.index),\n                    thisX = $$.data.xs[d.id][d.index];\n\n                // if there this is a single data point position the eventRect at 0\n                if (prevX === null && nextX === null) {\n                    return 0;\n                }\n\n                if (prevX === null) {\n                    prevX = $$.x.domain()[0];\n                }\n\n                return ($$.x(thisX) + $$.x(prevX)) / 2;\n            };\n        } else {\n            rectW = $$.getEventRectWidth();\n            rectX = function rectX(d) {\n                return $$.x(d.x) - rectW / 2;\n            };\n        }\n        x = config.axis_rotated ? 0 : rectX;\n        y = config.axis_rotated ? rectX : 0;\n        w = config.axis_rotated ? $$.width : rectW;\n        h = config.axis_rotated ? rectW : $$.height;\n    }\n\n    eventRectUpdate.attr('class', $$.classEvent.bind($$)).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h);\n};\nc3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n    eventRectEnter.append(\"rect\").attr(\"class\", $$.classEvent.bind($$)).style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null).on('mouseover', function (d) {\n        var index = d.index;\n\n        if ($$.dragging || $$.flowing) {\n            return;\n        } // do nothing while dragging/flowing\n        if ($$.hasArcType()) {\n            return;\n        }\n\n        // Expand shapes for selection\n        if (config.point_focus_expand_enabled) {\n            $$.expandCircles(index, null, true);\n        }\n        $$.expandBars(index, null, true);\n\n        // Call event handler\n        $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n            config.data_onmouseover.call($$.api, d);\n        });\n    }).on('mouseout', function (d) {\n        var index = d.index;\n        if (!$$.config) {\n            return;\n        } // chart is destroyed\n        if ($$.hasArcType()) {\n            return;\n        }\n        $$.hideXGridFocus();\n        $$.hideTooltip();\n        // Undo expanded shapes\n        $$.unexpandCircles();\n        $$.unexpandBars();\n        // Call event handler\n        $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n            config.data_onmouseout.call($$.api, d);\n        });\n    }).on('mousemove', function (d) {\n        var selectedData,\n            index = d.index,\n            eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n        if ($$.dragging || $$.flowing) {\n            return;\n        } // do nothing while dragging/flowing\n        if ($$.hasArcType()) {\n            return;\n        }\n\n        if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n            index -= 1;\n        }\n\n        // Show tooltip\n        selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n            return $$.addName($$.getValueOnIndex(t.values, index));\n        });\n\n        if (config.tooltip_grouped) {\n            $$.showTooltip(selectedData, this);\n            $$.showXGridFocus(selectedData);\n        }\n\n        if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n            return;\n        }\n\n        $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function () {\n            d3.select(this).classed(CLASS.EXPANDED, true);\n            if (config.data_selection_enabled) {\n                eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n            }\n            if (!config.tooltip_grouped) {\n                $$.hideXGridFocus();\n                $$.hideTooltip();\n                if (!config.data_selection_grouped) {\n                    $$.unexpandCircles(index);\n                    $$.unexpandBars(index);\n                }\n            }\n        }).filter(function (d) {\n            return $$.isWithinShape(this, d);\n        }).each(function (d) {\n            if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n                eventRect.style('cursor', 'pointer');\n            }\n            if (!config.tooltip_grouped) {\n                $$.showTooltip([d], this);\n                $$.showXGridFocus([d]);\n                if (config.point_focus_expand_enabled) {\n                    $$.expandCircles(index, d.id, true);\n                }\n                $$.expandBars(index, d.id, true);\n            }\n        });\n    }).on('click', function (d) {\n        var index = d.index;\n        if ($$.hasArcType() || !$$.toggleShape) {\n            return;\n        }\n        if ($$.cancelClick) {\n            $$.cancelClick = false;\n            return;\n        }\n        if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n            index -= 1;\n        }\n        $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n            if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                $$.toggleShape(this, d, index);\n                $$.config.data_onclick.call($$.api, d, this);\n            }\n        });\n    }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n        $$.drag(d3.mouse(this));\n    }).on('dragstart', function () {\n        $$.dragstart(d3.mouse(this));\n    }).on('dragend', function () {\n        $$.dragend();\n    }) : function () {});\n};\n\nc3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n\n    function mouseout() {\n        $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n        $$.hideXGridFocus();\n        $$.hideTooltip();\n        $$.unexpandCircles();\n        $$.unexpandBars();\n    }\n\n    eventRectEnter.append('rect').attr('x', 0).attr('y', 0).attr('width', $$.width).attr('height', $$.height).attr('class', CLASS.eventRect).on('mouseout', function () {\n        if (!$$.config) {\n            return;\n        } // chart is destroyed\n        if ($$.hasArcType()) {\n            return;\n        }\n        mouseout();\n    }).on('mousemove', function () {\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n        var mouse, closest, sameXData, selectedData;\n\n        if ($$.dragging) {\n            return;\n        } // do nothing when dragging\n        if ($$.hasArcType(targetsToShow)) {\n            return;\n        }\n\n        mouse = d3.mouse(this);\n        closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n        if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n            config.data_onmouseout.call($$.api, $$.mouseover);\n            $$.mouseover = undefined;\n        }\n\n        if (!closest) {\n            mouseout();\n            return;\n        }\n\n        if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n            sameXData = [closest];\n        } else {\n            sameXData = $$.filterByX(targetsToShow, closest.x);\n        }\n\n        // show tooltip when cursor is close to some point\n        selectedData = sameXData.map(function (d) {\n            return $$.addName(d);\n        });\n        $$.showTooltip(selectedData, this);\n\n        // expand points\n        if (config.point_focus_expand_enabled) {\n            $$.expandCircles(closest.index, closest.id, true);\n        }\n        $$.expandBars(closest.index, closest.id, true);\n\n        // Show xgrid focus line\n        $$.showXGridFocus(selectedData);\n\n        // Show cursor as pointer if point is close to mouse position\n        if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n            if (!$$.mouseover) {\n                config.data_onmouseover.call($$.api, closest);\n                $$.mouseover = closest;\n            }\n        }\n    }).on('click', function () {\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n        var mouse, closest;\n        if ($$.hasArcType(targetsToShow)) {\n            return;\n        }\n\n        mouse = d3.mouse(this);\n        closest = $$.findClosestFromTargets(targetsToShow, mouse);\n        if (!closest) {\n            return;\n        }\n        // select if selection enabled\n        if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n            $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n                if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n                    $$.toggleShape(this, closest, closest.index);\n                    $$.config.data_onclick.call($$.api, closest, this);\n                }\n            });\n        }\n    }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n        $$.drag(d3.mouse(this));\n    }).on('dragstart', function () {\n        $$.dragstart(d3.mouse(this));\n    }).on('dragend', function () {\n        $$.dragend();\n    }) : function () {});\n};\nc3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n    var $$ = this,\n        selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n        eventRect = $$.main.select(selector).node(),\n        box = eventRect.getBoundingClientRect(),\n        x = box.left + (mouse ? mouse[0] : 0),\n        y = box.top + (mouse ? mouse[1] : 0),\n        event = document.createEvent(\"MouseEvents\");\n\n    event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\n    eventRect.dispatchEvent(event);\n};\n\nc3_chart_internal_fn.initLegend = function () {\n    var $$ = this;\n    $$.legendItemTextBox = {};\n    $$.legendHasRendered = false;\n    $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n    if (!$$.config.legend_show) {\n        $$.legend.style('visibility', 'hidden');\n        $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n        return;\n    }\n    // MEMO: call here to update legend box and tranlate for all\n    // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n    $$.updateLegendWithDefaults();\n};\nc3_chart_internal_fn.updateLegendWithDefaults = function () {\n    var $$ = this;\n    $$.updateLegend($$.mapToIds($$.data.targets), { withTransform: false, withTransitionForTransform: false, withTransition: false });\n};\nc3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n    var $$ = this,\n        config = $$.config,\n        insetLegendPosition = {\n        top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n        left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n    };\n\n    $$.margin3 = {\n        top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n        right: NaN,\n        bottom: 0,\n        left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n    };\n};\nc3_chart_internal_fn.transformLegend = function (withTransition) {\n    var $$ = this;\n    (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n};\nc3_chart_internal_fn.updateLegendStep = function (step) {\n    this.legendStep = step;\n};\nc3_chart_internal_fn.updateLegendItemWidth = function (w) {\n    this.legendItemWidth = w;\n};\nc3_chart_internal_fn.updateLegendItemHeight = function (h) {\n    this.legendItemHeight = h;\n};\nc3_chart_internal_fn.getLegendWidth = function () {\n    var $$ = this;\n    return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n};\nc3_chart_internal_fn.getLegendHeight = function () {\n    var $$ = this,\n        h = 0;\n    if ($$.config.legend_show) {\n        if ($$.isLegendRight) {\n            h = $$.currentHeight;\n        } else {\n            h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n        }\n    }\n    return h;\n};\nc3_chart_internal_fn.opacityForLegend = function (legendItem) {\n    return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n};\nc3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n    return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n};\nc3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n    var $$ = this;\n    targetIds = $$.mapToTargetIds(targetIds);\n    $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {\n        return targetIds.indexOf(id) >= 0;\n    }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {\n        var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n        return opacity.call($$, $$.d3.select(this));\n    });\n};\nc3_chart_internal_fn.revertLegend = function () {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {\n        return $$.opacityForLegend(d3.select(this));\n    });\n};\nc3_chart_internal_fn.showLegend = function (targetIds) {\n    var $$ = this,\n        config = $$.config;\n    if (!config.legend_show) {\n        config.legend_show = true;\n        $$.legend.style('visibility', 'visible');\n        if (!$$.legendHasRendered) {\n            $$.updateLegendWithDefaults();\n        }\n    }\n    $$.removeHiddenLegendIds(targetIds);\n    $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {\n        return $$.opacityForLegend($$.d3.select(this));\n    });\n};\nc3_chart_internal_fn.hideLegend = function (targetIds) {\n    var $$ = this,\n        config = $$.config;\n    if (config.legend_show && isEmpty(targetIds)) {\n        config.legend_show = false;\n        $$.legend.style('visibility', 'hidden');\n    }\n    $$.addHiddenLegendIds(targetIds);\n    $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');\n};\nc3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n    this.legendItemTextBox = {};\n};\nc3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n    var $$ = this,\n        config = $$.config;\n    var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n    var paddingTop = 4,\n        paddingRight = 10,\n        maxWidth = 0,\n        maxHeight = 0,\n        posMin = 10,\n        tileWidth = config.legend_item_tile_width + 5;\n    var l,\n        totalLength = 0,\n        offsets = {},\n        widths = {},\n        heights = {},\n        margins = [0],\n        steps = {},\n        step = 0;\n    var withTransition, withTransitionForTransform;\n    var texts, rects, tiles, background;\n\n    // Skip elements when their name is set to null\n    targetIds = targetIds.filter(function (id) {\n        return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n    });\n\n    options = options || {};\n    withTransition = getOption(options, \"withTransition\", true);\n    withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n    function getTextBox(textElement, id) {\n        if (!$$.legendItemTextBox[id]) {\n            $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n        }\n        return $$.legendItemTextBox[id];\n    }\n\n    function updatePositions(textElement, id, index) {\n        var reset = index === 0,\n            isLast = index === targetIds.length - 1,\n            box = getTextBox(textElement, id),\n            itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n            itemHeight = box.height + paddingTop,\n            itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n            areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n            margin,\n            maxLength;\n\n        // MEMO: care about condifion of step, totalLength\n        function updateValues(id, withoutStep) {\n            if (!withoutStep) {\n                margin = (areaLength - totalLength - itemLength) / 2;\n                if (margin < posMin) {\n                    margin = (areaLength - itemLength) / 2;\n                    totalLength = 0;\n                    step++;\n                }\n            }\n            steps[id] = step;\n            margins[step] = $$.isLegendInset ? 10 : margin;\n            offsets[id] = totalLength;\n            totalLength += itemLength;\n        }\n\n        if (reset) {\n            totalLength = 0;\n            step = 0;\n            maxWidth = 0;\n            maxHeight = 0;\n        }\n\n        if (config.legend_show && !$$.isLegendToShow(id)) {\n            widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n            return;\n        }\n\n        widths[id] = itemWidth;\n        heights[id] = itemHeight;\n\n        if (!maxWidth || itemWidth >= maxWidth) {\n            maxWidth = itemWidth;\n        }\n        if (!maxHeight || itemHeight >= maxHeight) {\n            maxHeight = itemHeight;\n        }\n        maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n        if (config.legend_equally) {\n            Object.keys(widths).forEach(function (id) {\n                widths[id] = maxWidth;\n            });\n            Object.keys(heights).forEach(function (id) {\n                heights[id] = maxHeight;\n            });\n            margin = (areaLength - maxLength * targetIds.length) / 2;\n            if (margin < posMin) {\n                totalLength = 0;\n                step = 0;\n                targetIds.forEach(function (id) {\n                    updateValues(id);\n                });\n            } else {\n                updateValues(id, true);\n            }\n        } else {\n            updateValues(id);\n        }\n    }\n\n    if ($$.isLegendInset) {\n        step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n        $$.updateLegendStep(step);\n    }\n\n    if ($$.isLegendRight) {\n        xForLegend = function xForLegend(id) {\n            return maxWidth * steps[id];\n        };\n        yForLegend = function yForLegend(id) {\n            return margins[steps[id]] + offsets[id];\n        };\n    } else if ($$.isLegendInset) {\n        xForLegend = function xForLegend(id) {\n            return maxWidth * steps[id] + 10;\n        };\n        yForLegend = function yForLegend(id) {\n            return margins[steps[id]] + offsets[id];\n        };\n    } else {\n        xForLegend = function xForLegend(id) {\n            return margins[steps[id]] + offsets[id];\n        };\n        yForLegend = function yForLegend(id) {\n            return maxHeight * steps[id];\n        };\n    }\n    xForLegendText = function xForLegendText(id, i) {\n        return xForLegend(id, i) + 4 + config.legend_item_tile_width;\n    };\n    yForLegendText = function yForLegendText(id, i) {\n        return yForLegend(id, i) + 9;\n    };\n    xForLegendRect = function xForLegendRect(id, i) {\n        return xForLegend(id, i);\n    };\n    yForLegendRect = function yForLegendRect(id, i) {\n        return yForLegend(id, i) - 5;\n    };\n    x1ForLegendTile = function x1ForLegendTile(id, i) {\n        return xForLegend(id, i) - 2;\n    };\n    x2ForLegendTile = function x2ForLegendTile(id, i) {\n        return xForLegend(id, i) - 2 + config.legend_item_tile_width;\n    };\n    yForLegendTile = function yForLegendTile(id, i) {\n        return yForLegend(id, i) + 4;\n    };\n\n    // Define g for legend area\n    l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {\n        return $$.generateClass(CLASS.legendItem, id);\n    }).style('visibility', function (id) {\n        return $$.isLegendToShow(id) ? 'visible' : 'hidden';\n    }).style('cursor', 'pointer').on('click', function (id) {\n        if (config.legend_item_onclick) {\n            config.legend_item_onclick.call($$, id);\n        } else {\n            if ($$.d3.event.altKey) {\n                $$.api.hide();\n                $$.api.show(id);\n            } else {\n                $$.api.toggle(id);\n                $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n            }\n        }\n    }).on('mouseover', function (id) {\n        if (config.legend_item_onmouseover) {\n            config.legend_item_onmouseover.call($$, id);\n        } else {\n            $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n            if (!$$.transiting && $$.isTargetToShow(id)) {\n                $$.api.focus(id);\n            }\n        }\n    }).on('mouseout', function (id) {\n        if (config.legend_item_onmouseout) {\n            config.legend_item_onmouseout.call($$, id);\n        } else {\n            $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n            $$.api.revert();\n        }\n    });\n    l.append('text').text(function (id) {\n        return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n    }).each(function (id, i) {\n        updatePositions(this, id, i);\n    }).style(\"pointer-events\", \"none\").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n    l.append('rect').attr(\"class\", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n    l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style(\"pointer-events\", \"none\").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height);\n\n    // Set background for inset legend\n    background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n    if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n        background = $$.legend.insert('g', '.' + CLASS.legendItem).attr(\"class\", CLASS.legendBackground).append('rect');\n    }\n\n    texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {\n        return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n    } // MEMO: needed for update\n    ).each(function (id, i) {\n        updatePositions(this, id, i);\n    });\n    (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);\n\n    rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\n    (withTransition ? rects.transition() : rects).attr('width', function (id) {\n        return widths[id];\n    }).attr('height', function (id) {\n        return heights[id];\n    }).attr('x', xForLegendRect).attr('y', yForLegendRect);\n\n    tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\n    (withTransition ? tiles.transition() : tiles).style('stroke', $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);\n\n    if (background) {\n        (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);\n    }\n\n    // toggle legend state\n    $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {\n        return !$$.isTargetToShow(id);\n    });\n\n    // Update all to reflect change of legend\n    $$.updateLegendItemWidth(maxWidth);\n    $$.updateLegendItemHeight(maxHeight);\n    $$.updateLegendStep(step);\n    // Update size and scale\n    $$.updateSizes();\n    $$.updateScales();\n    $$.updateSvgSize();\n    // Update g positions\n    $$.transformAll(withTransitionForTransform, transitions);\n    $$.legendHasRendered = true;\n};\n\nc3_chart_internal_fn.initRegion = function () {\n    var $$ = this;\n    $$.region = $$.main.append('g').attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.regions);\n};\nc3_chart_internal_fn.updateRegion = function (duration) {\n    var $$ = this,\n        config = $$.config;\n\n    // hide if arc type\n    $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n    $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);\n    $$.mainRegion.enter().append('g').append('rect').style(\"fill-opacity\", 0);\n    $$.mainRegion.attr('class', $$.classRegion.bind($$));\n    $$.mainRegion.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n};\nc3_chart_internal_fn.redrawRegion = function (withTransition) {\n    var $$ = this,\n        regions = $$.mainRegion.selectAll('rect').each(function () {\n        // data is binded to g and it's not transferred to rect (child node) automatically,\n        // then data of each rect has to be updated manually.\n        // TODO: there should be more efficient way to solve this?\n        var parentData = $$.d3.select(this.parentNode).datum();\n        $$.d3.select(this).datum(parentData);\n    }),\n        x = $$.regionX.bind($$),\n        y = $$.regionY.bind($$),\n        w = $$.regionWidth.bind($$),\n        h = $$.regionHeight.bind($$);\n    return [(withTransition ? regions.transition() : regions).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h).style(\"fill-opacity\", function (d) {\n        return isValue(d.opacity) ? d.opacity : 0.1;\n    })];\n};\nc3_chart_internal_fn.regionX = function (d) {\n    var $$ = this,\n        config = $$.config,\n        xPos,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n    if (d.axis === 'y' || d.axis === 'y2') {\n        xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;\n    } else {\n        xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;\n    }\n    return xPos;\n};\nc3_chart_internal_fn.regionY = function (d) {\n    var $$ = this,\n        config = $$.config,\n        yPos,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n    if (d.axis === 'y' || d.axis === 'y2') {\n        yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\n    } else {\n        yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;\n    }\n    return yPos;\n};\nc3_chart_internal_fn.regionWidth = function (d) {\n    var $$ = this,\n        config = $$.config,\n        start = $$.regionX(d),\n        end,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n    if (d.axis === 'y' || d.axis === 'y2') {\n        end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;\n    } else {\n        end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;\n    }\n    return end < start ? 0 : end - start;\n};\nc3_chart_internal_fn.regionHeight = function (d) {\n    var $$ = this,\n        config = $$.config,\n        start = this.regionY(d),\n        end,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n    if (d.axis === 'y' || d.axis === 'y2') {\n        end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;\n    } else {\n        end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;\n    }\n    return end < start ? 0 : end - start;\n};\nc3_chart_internal_fn.isRegionOnX = function (d) {\n    return !d.axis || d.axis === 'x';\n};\n\nc3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n    return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n};\nc3_chart_internal_fn.getX = function (min, max, domain, offset) {\n    var $$ = this,\n        scale = $$.getScale(min, max, $$.isTimeSeries()),\n        _scale = domain ? scale.domain(domain) : scale,\n        key;\n    // Define customized scale if categorized axis\n    if ($$.isCategorized()) {\n        offset = offset || function () {\n            return 0;\n        };\n        scale = function scale(d, raw) {\n            var v = _scale(d) + offset(d);\n            return raw ? v : Math.ceil(v);\n        };\n    } else {\n        scale = function scale(d, raw) {\n            var v = _scale(d);\n            return raw ? v : Math.ceil(v);\n        };\n    }\n    // define functions\n    for (key in _scale) {\n        scale[key] = _scale[key];\n    }\n    scale.orgDomain = function () {\n        return _scale.domain();\n    };\n    // define custom domain() for categorized axis\n    if ($$.isCategorized()) {\n        scale.domain = function (domain) {\n            if (!arguments.length) {\n                domain = this.orgDomain();\n                return [domain[0], domain[1] + 1];\n            }\n            _scale.domain(domain);\n            return scale;\n        };\n    }\n    return scale;\n};\nc3_chart_internal_fn.getY = function (min, max, domain) {\n    var scale = this.getScale(min, max, this.isTimeSeriesY());\n    if (domain) {\n        scale.domain(domain);\n    }\n    return scale;\n};\nc3_chart_internal_fn.getYScale = function (id) {\n    return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n};\nc3_chart_internal_fn.getSubYScale = function (id) {\n    return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n};\nc3_chart_internal_fn.updateScales = function () {\n    var $$ = this,\n        config = $$.config,\n        forInit = !$$.x;\n    // update edges\n    $$.xMin = config.axis_rotated ? 1 : 0;\n    $$.xMax = config.axis_rotated ? $$.height : $$.width;\n    $$.yMin = config.axis_rotated ? 0 : $$.height;\n    $$.yMax = config.axis_rotated ? $$.width : 1;\n    $$.subXMin = $$.xMin;\n    $$.subXMax = $$.xMax;\n    $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n    $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n    // update scales\n    $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\n        return $$.xAxis.tickOffset();\n    });\n    $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n    $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n    $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\n        return d % 1 ? 0 : $$.subXAxis.tickOffset();\n    });\n    $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n    $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n    // update axes\n    $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n    $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n    $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n    $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n    $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n    $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n    $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n    $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n    // Set initialized scales to brush and zoom\n    if (!forInit) {\n        if ($$.brush) {\n            $$.brush.scale($$.subX);\n        }\n        if (config.zoom_enabled) {\n            $$.zoom.scale($$.x);\n        }\n    }\n    // update for arc\n    if ($$.updateArc) {\n        $$.updateArc();\n    }\n};\n\nc3_chart_internal_fn.selectPoint = function (target, d, i) {\n    var $$ = this,\n        config = $$.config,\n        cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n        cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n        r = $$.pointSelectR.bind($$);\n    config.data_onselected.call($$.api, d, target.node());\n    // add selected-circle on low layer g\n    $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr(\"class\", function () {\n        return $$.generateClass(CLASS.selectedCircle, i);\n    }).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"stroke\", function () {\n        return $$.color(d);\n    }).attr(\"r\", function (d) {\n        return $$.pointSelectR(d) * 1.4;\n    }).transition().duration(100).attr(\"r\", r);\n};\nc3_chart_internal_fn.unselectPoint = function (target, d, i) {\n    var $$ = this;\n    $$.config.data_onunselected.call($$.api, d, target.node());\n    // remove selected-circle from low layer g\n    $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();\n};\nc3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n    selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n};\nc3_chart_internal_fn.selectPath = function (target, d) {\n    var $$ = this;\n    $$.config.data_onselected.call($$, d, target.node());\n    if ($$.config.interaction_brighten) {\n        target.transition().duration(100).style(\"fill\", function () {\n            return $$.d3.rgb($$.color(d)).brighter(0.75);\n        });\n    }\n};\nc3_chart_internal_fn.unselectPath = function (target, d) {\n    var $$ = this;\n    $$.config.data_onunselected.call($$, d, target.node());\n    if ($$.config.interaction_brighten) {\n        target.transition().duration(100).style(\"fill\", function () {\n            return $$.color(d);\n        });\n    }\n};\nc3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n    selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n};\nc3_chart_internal_fn.getToggle = function (that, d) {\n    var $$ = this,\n        toggle;\n    if (that.nodeName === 'circle') {\n        if ($$.isStepType(d)) {\n            // circle is hidden in step chart, so treat as within the click area\n            toggle = function toggle() {}; // TODO: how to select step chart?\n        } else {\n            toggle = $$.togglePoint;\n        }\n    } else if (that.nodeName === 'path') {\n        toggle = $$.togglePath;\n    }\n    return toggle;\n};\nc3_chart_internal_fn.toggleShape = function (that, d, i) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        shape = d3.select(that),\n        isSelected = shape.classed(CLASS.SELECTED),\n        toggle = $$.getToggle(that, d).bind($$);\n\n    if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n        if (!config.data_selection_multiple) {\n            $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                var shape = d3.select(this);\n                if (shape.classed(CLASS.SELECTED)) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            });\n        }\n        shape.classed(CLASS.SELECTED, !isSelected);\n        toggle(!isSelected, shape, d, i);\n    }\n};\n\nc3_chart_internal_fn.initBar = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n};\nc3_chart_internal_fn.updateTargetsForBar = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        mainBarUpdate,\n        mainBarEnter,\n        classChartBar = $$.classChartBar.bind($$),\n        classBars = $$.classBars.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {\n        return classChartBar(d) + classFocus(d);\n    });\n    mainBarEnter = mainBarUpdate.enter().append('g').attr('class', classChartBar).style(\"pointer-events\", \"none\");\n    // Bars for each data\n    mainBarEnter.append('g').attr(\"class\", classBars).style(\"cursor\", function (d) {\n        return config.data_selection_isselectable(d) ? \"pointer\" : null;\n    });\n};\nc3_chart_internal_fn.updateBar = function (durationForExit) {\n    var $$ = this,\n        barData = $$.barData.bind($$),\n        classBar = $$.classBar.bind($$),\n        initialOpacity = $$.initialOpacity.bind($$),\n        color = function color(d) {\n        return $$.color(d.id);\n    };\n    $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);\n    $$.mainBar.enter().append('path').attr(\"class\", classBar).style(\"stroke\", color).style(\"fill\", color);\n    $$.mainBar.style(\"opacity\", initialOpacity);\n    $$.mainBar.exit().transition().duration(durationForExit).remove();\n};\nc3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n    return [(withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar).attr('d', drawBar).style(\"fill\", this.color).style(\"opacity\", 1)];\n};\nc3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n    var $$ = this,\n        config = $$.config,\n        w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;\n    return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n};\nc3_chart_internal_fn.getBars = function (i, id) {\n    var $$ = this;\n    return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n};\nc3_chart_internal_fn.expandBars = function (i, id, reset) {\n    var $$ = this;\n    if (reset) {\n        $$.unexpandBars();\n    }\n    $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n};\nc3_chart_internal_fn.unexpandBars = function (i) {\n    var $$ = this;\n    $$.getBars(i).classed(CLASS.EXPANDED, false);\n};\nc3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n    var $$ = this,\n        config = $$.config,\n        getPoints = $$.generateGetBarPoints(barIndices, isSub);\n    return function (d, i) {\n        // 4 points that make a bar\n        var points = getPoints(d, i);\n\n        // switch points if axis is rotated, not applicable for sub chart\n        var indexX = config.axis_rotated ? 1 : 0;\n        var indexY = config.axis_rotated ? 0 : 1;\n\n        var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';\n\n        return path;\n    };\n};\nc3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n    var $$ = this,\n        axis = isSub ? $$.subXAxis : $$.xAxis,\n        barTargetsNum = barIndices.__max__ + 1,\n        barW = $$.getBarW(axis, barTargetsNum),\n        barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n        barY = $$.getShapeY(!!isSub),\n        barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n        yScale = isSub ? $$.getSubYScale : $$.getYScale;\n    return function (d, i) {\n        var y0 = yScale.call($$, d.id)(0),\n            offset = barOffset(d, i) || y0,\n            // offset is for stacked bar chart\n        posX = barX(d),\n            posY = barY(d);\n        // fix posY not to overflow opposite quadrant\n        if ($$.config.axis_rotated) {\n            if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                posY = y0;\n            }\n        }\n        // 4 points that make a bar\n        return [[posX, offset], [posX, posY - (y0 - offset)], [posX + barW, posY - (y0 - offset)], [posX + barW, offset]];\n    };\n};\nc3_chart_internal_fn.isWithinBar = function (that) {\n    var mouse = this.d3.mouse(that),\n        box = that.getBoundingClientRect(),\n        seg0 = that.pathSegList.getItem(0),\n        seg1 = that.pathSegList.getItem(1),\n        x = Math.min(seg0.x, seg1.x),\n        y = Math.min(seg0.y, seg1.y),\n        w = box.width,\n        h = box.height,\n        offset = 2,\n        sx = x - offset,\n        ex = x + w + offset,\n        sy = y + h + offset,\n        ey = y - offset;\n    return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n};\n\nc3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n    var $$ = this,\n        config = $$.config,\n        indices = {},\n        i = 0,\n        j,\n        k;\n    $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n        for (j = 0; j < config.data_groups.length; j++) {\n            if (config.data_groups[j].indexOf(d.id) < 0) {\n                continue;\n            }\n            for (k = 0; k < config.data_groups[j].length; k++) {\n                if (config.data_groups[j][k] in indices) {\n                    indices[d.id] = indices[config.data_groups[j][k]];\n                    break;\n                }\n            }\n        }\n        if (isUndefined(indices[d.id])) {\n            indices[d.id] = i++;\n        }\n    });\n    indices.__max__ = i - 1;\n    return indices;\n};\nc3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n    var $$ = this,\n        scale = isSub ? $$.subX : $$.x;\n    return function (d) {\n        var index = d.id in indices ? indices[d.id] : 0;\n        return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n    };\n};\nc3_chart_internal_fn.getShapeY = function (isSub) {\n    var $$ = this;\n    return function (d) {\n        var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n        return scale(d.value);\n    };\n};\nc3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n    var $$ = this,\n        targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n        targetIds = targets.map(function (t) {\n        return t.id;\n    });\n    return function (d, i) {\n        var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n            y0 = scale(0),\n            offset = y0;\n        targets.forEach(function (t) {\n            var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n            if (t.id === d.id || indices[t.id] !== indices[d.id]) {\n                return;\n            }\n            if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                // check if the x values line up\n                if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {\n                    // \"+\" for timeseries\n                    // if not, try to find the value that does line up\n                    i = -1;\n                    values.forEach(function (v, j) {\n                        if (v.x === d.x) {\n                            i = j;\n                        }\n                    });\n                }\n                if (i in values && values[i].value * d.value >= 0) {\n                    offset += scale(values[i].value) - y0;\n                }\n            }\n        });\n        return offset;\n    };\n};\nc3_chart_internal_fn.isWithinShape = function (that, d) {\n    var $$ = this,\n        shape = $$.d3.select(that),\n        isWithin;\n    if (!$$.isTargetToShow(d.id)) {\n        isWithin = false;\n    } else if (that.nodeName === 'circle') {\n        isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n    } else if (that.nodeName === 'path') {\n        isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n    }\n    return isWithin;\n};\n\nc3_chart_internal_fn.getInterpolate = function (d) {\n    var $$ = this,\n        interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n    return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n};\n\nc3_chart_internal_fn.initLine = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n};\nc3_chart_internal_fn.updateTargetsForLine = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        mainLineUpdate,\n        mainLineEnter,\n        classChartLine = $$.classChartLine.bind($$),\n        classLines = $$.classLines.bind($$),\n        classAreas = $$.classAreas.bind($$),\n        classCircles = $$.classCircles.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {\n        return classChartLine(d) + classFocus(d);\n    });\n    mainLineEnter = mainLineUpdate.enter().append('g').attr('class', classChartLine).style('opacity', 0).style(\"pointer-events\", \"none\");\n    // Lines for each data\n    mainLineEnter.append('g').attr(\"class\", classLines);\n    // Areas\n    mainLineEnter.append('g').attr('class', classAreas);\n    // Circles for each data point on lines\n    mainLineEnter.append('g').attr(\"class\", function (d) {\n        return $$.generateClass(CLASS.selectedCircles, d.id);\n    });\n    mainLineEnter.append('g').attr(\"class\", classCircles).style(\"cursor\", function (d) {\n        return config.data_selection_isselectable(d) ? \"pointer\" : null;\n    });\n    // Update date for selected circles\n    targets.forEach(function (t) {\n        $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n            d.value = t.values[d.index].value;\n        });\n    });\n    // MEMO: can not keep same color...\n    //mainLineUpdate.exit().remove();\n};\nc3_chart_internal_fn.updateLine = function (durationForExit) {\n    var $$ = this;\n    $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n    $$.mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style(\"stroke\", $$.color);\n    $$.mainLine.style(\"opacity\", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {\n        return $$.isStepType(d) ? 'crispEdges' : '';\n    }).attr('transform', null);\n    $$.mainLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n    return [(withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine).attr(\"d\", drawLine).style(\"stroke\", this.color).style(\"opacity\", 1)];\n};\nc3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n    var $$ = this,\n        config = $$.config,\n        line = $$.d3.svg.line(),\n        getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n        yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n        xValue = function xValue(d) {\n        return (isSub ? $$.subxx : $$.xx).call($$, d);\n    },\n        yValue = function yValue(d, i) {\n        return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n    };\n\n    line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n    if (!config.line_connectNull) {\n        line = line.defined(function (d) {\n            return d.value != null;\n        });\n    }\n    return function (d) {\n        var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n            x = isSub ? $$.x : $$.subX,\n            y = yScaleGetter.call($$, d.id),\n            x0 = 0,\n            y0 = 0,\n            path;\n        if ($$.isLineType(d)) {\n            if (config.data_regions[d.id]) {\n                path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n            } else {\n                if ($$.isStepType(d)) {\n                    values = $$.convertValuesToStep(values);\n                }\n                path = line.interpolate($$.getInterpolate(d))(values);\n            }\n        } else {\n            if (values[0]) {\n                x0 = x(values[0].x);\n                y0 = y(values[0].value);\n            }\n            path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n        }\n        return path ? path : \"M 0 0\";\n    };\n};\nc3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {\n    // partial duplication of generateGetBarPoints\n    var $$ = this,\n        config = $$.config,\n        lineTargetsNum = lineIndices.__max__ + 1,\n        x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n        y = $$.getShapeY(!!isSub),\n        lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n        yScale = isSub ? $$.getSubYScale : $$.getYScale;\n    return function (d, i) {\n        var y0 = yScale.call($$, d.id)(0),\n            offset = lineOffset(d, i) || y0,\n            // offset is for stacked area chart\n        posX = x(d),\n            posY = y(d);\n        // fix posY not to overflow opposite quadrant\n        if (config.axis_rotated) {\n            if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                posY = y0;\n            }\n        }\n        // 1 point that marks the line position\n        return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n        [posX, posY - (y0 - offset)], // needed for compatibility\n        [posX, posY - (y0 - offset)] // needed for compatibility\n        ];\n    };\n};\n\nc3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n    var $$ = this,\n        config = $$.config,\n        prev = -1,\n        i,\n        j,\n        s = \"M\",\n        sWithRegion,\n        xp,\n        yp,\n        dx,\n        dy,\n        dd,\n        diff,\n        diffx2,\n        xOffset = $$.isCategorized() ? 0.5 : 0,\n        xValue,\n        yValue,\n        regions = [];\n\n    function isWithinRegions(x, regions) {\n        var i;\n        for (i = 0; i < regions.length; i++) {\n            if (regions[i].start < x && x <= regions[i].end) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // Check start/end of regions\n    if (isDefined(_regions)) {\n        for (i = 0; i < _regions.length; i++) {\n            regions[i] = {};\n            if (isUndefined(_regions[i].start)) {\n                regions[i].start = d[0].x;\n            } else {\n                regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n            }\n            if (isUndefined(_regions[i].end)) {\n                regions[i].end = d[d.length - 1].x;\n            } else {\n                regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n            }\n        }\n    }\n\n    // Set scales\n    xValue = config.axis_rotated ? function (d) {\n        return y(d.value);\n    } : function (d) {\n        return x(d.x);\n    };\n    yValue = config.axis_rotated ? function (d) {\n        return x(d.x);\n    } : function (d) {\n        return y(d.value);\n    };\n\n    // Define svg generator function for region\n    function generateM(points) {\n        return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n    }\n    if ($$.isTimeSeries()) {\n        sWithRegion = function sWithRegion(d0, d1, j, diff) {\n            var x0 = d0.x.getTime(),\n                x_diff = d1.x - d0.x,\n                xv0 = new Date(x0 + x_diff * j),\n                xv1 = new Date(x0 + x_diff * (j + diff)),\n                points;\n            if (config.axis_rotated) {\n                points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n            } else {\n                points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n            }\n            return generateM(points);\n        };\n    } else {\n        sWithRegion = function sWithRegion(d0, d1, j, diff) {\n            var points;\n            if (config.axis_rotated) {\n                points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n            } else {\n                points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n            }\n            return generateM(points);\n        };\n    }\n\n    // Generate\n    for (i = 0; i < d.length; i++) {\n\n        // Draw as normal\n        if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\n            s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n        }\n        // Draw with region // TODO: Fix for horizotal charts\n        else {\n                xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                dx = x(d[i].x) - x(d[i - 1].x);\n                dy = y(d[i].value) - y(d[i - 1].value);\n                dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                diff = 2 / dd;\n                diffx2 = diff * 2;\n\n                for (j = diff; j <= 1; j += diffx2) {\n                    s += sWithRegion(d[i - 1], d[i], j, diff);\n                }\n            }\n        prev = d[i].x;\n    }\n\n    return s;\n};\n\nc3_chart_internal_fn.updateArea = function (durationForExit) {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n    $$.mainArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n        $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n    });\n    $$.mainArea.style(\"opacity\", $$.orgAreaOpacity);\n    $$.mainArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n    return [(withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea).attr(\"d\", drawArea).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity)];\n};\nc3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n    var $$ = this,\n        config = $$.config,\n        area = $$.d3.svg.area(),\n        getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n        yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n        xValue = function xValue(d) {\n        return (isSub ? $$.subxx : $$.xx).call($$, d);\n    },\n        value0 = function value0(d, i) {\n        return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n    },\n        value1 = function value1(d, i) {\n        return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n    };\n\n    area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n    if (!config.line_connectNull) {\n        area = area.defined(function (d) {\n            return d.value !== null;\n        });\n    }\n\n    return function (d) {\n        var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n            x0 = 0,\n            y0 = 0,\n            path;\n        if ($$.isAreaType(d)) {\n            if ($$.isStepType(d)) {\n                values = $$.convertValuesToStep(values);\n            }\n            path = area.interpolate($$.getInterpolate(d))(values);\n        } else {\n            if (values[0]) {\n                x0 = $$.x(values[0].x);\n                y0 = $$.getYScale(d.id)(values[0].value);\n            }\n            path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n        }\n        return path ? path : \"M 0 0\";\n    };\n};\nc3_chart_internal_fn.getAreaBaseValue = function () {\n    return 0;\n};\nc3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {\n    // partial duplication of generateGetBarPoints\n    var $$ = this,\n        config = $$.config,\n        areaTargetsNum = areaIndices.__max__ + 1,\n        x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n        y = $$.getShapeY(!!isSub),\n        areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n        yScale = isSub ? $$.getSubYScale : $$.getYScale;\n    return function (d, i) {\n        var y0 = yScale.call($$, d.id)(0),\n            offset = areaOffset(d, i) || y0,\n            // offset is for stacked area chart\n        posX = x(d),\n            posY = y(d);\n        // fix posY not to overflow opposite quadrant\n        if (config.axis_rotated) {\n            if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                posY = y0;\n            }\n        }\n        // 1 point that marks the area position\n        return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n        [posX, offset] // needed for compatibility\n        ];\n    };\n};\n\nc3_chart_internal_fn.updateCircle = function () {\n    var $$ = this;\n    $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));\n    $$.mainCircle.enter().append(\"circle\").attr(\"class\", $$.classCircle.bind($$)).attr(\"r\", $$.pointR.bind($$)).style(\"fill\", $$.color);\n    $$.mainCircle.style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n    $$.mainCircle.exit().remove();\n};\nc3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n    var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n    return [(withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle).style('opacity', this.opacityForCircle.bind(this)).style(\"fill\", this.color).attr(\"cx\", cx).attr(\"cy\", cy), (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles).attr(\"cx\", cx).attr(\"cy\", cy)];\n};\nc3_chart_internal_fn.circleX = function (d) {\n    return d.x || d.x === 0 ? this.x(d.x) : null;\n};\nc3_chart_internal_fn.updateCircleY = function () {\n    var $$ = this,\n        lineIndices,\n        getPoints;\n    if ($$.config.data_groups.length > 0) {\n        lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);\n        $$.circleY = function (d, i) {\n            return getPoints(d, i)[0][1];\n        };\n    } else {\n        $$.circleY = function (d) {\n            return $$.getYScale(d.id)(d.value);\n        };\n    }\n};\nc3_chart_internal_fn.getCircles = function (i, id) {\n    var $$ = this;\n    return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n};\nc3_chart_internal_fn.expandCircles = function (i, id, reset) {\n    var $$ = this,\n        r = $$.pointExpandedR.bind($$);\n    if (reset) {\n        $$.unexpandCircles();\n    }\n    $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);\n};\nc3_chart_internal_fn.unexpandCircles = function (i) {\n    var $$ = this,\n        r = $$.pointR.bind($$);\n    $$.getCircles(i).filter(function () {\n        return $$.d3.select(this).classed(CLASS.EXPANDED);\n    }).classed(CLASS.EXPANDED, false).attr('r', r);\n};\nc3_chart_internal_fn.pointR = function (d) {\n    var $$ = this,\n        config = $$.config;\n    return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;\n};\nc3_chart_internal_fn.pointExpandedR = function (d) {\n    var $$ = this,\n        config = $$.config;\n    return config.point_focus_expand_enabled ? config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75 : $$.pointR(d);\n};\nc3_chart_internal_fn.pointSelectR = function (d) {\n    var $$ = this,\n        config = $$.config;\n    return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;\n};\nc3_chart_internal_fn.isWithinCircle = function (that, r) {\n    var d3 = this.d3,\n        mouse = d3.mouse(that),\n        d3_this = d3.select(that),\n        cx = +d3_this.attr(\"cx\"),\n        cy = +d3_this.attr(\"cy\");\n    return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n};\nc3_chart_internal_fn.isWithinStep = function (that, y) {\n    return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n};\n\nc3_chart_internal_fn.getCurrentWidth = function () {\n    var $$ = this,\n        config = $$.config;\n    return config.size_width ? config.size_width : $$.getParentWidth();\n};\nc3_chart_internal_fn.getCurrentHeight = function () {\n    var $$ = this,\n        config = $$.config,\n        h = config.size_height ? config.size_height : $$.getParentHeight();\n    return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\n};\nc3_chart_internal_fn.getCurrentPaddingTop = function () {\n    var $$ = this,\n        config = $$.config,\n        padding = isValue(config.padding_top) ? config.padding_top : 0;\n    if ($$.title && $$.title.node()) {\n        padding += $$.getTitlePadding();\n    }\n    return padding;\n};\nc3_chart_internal_fn.getCurrentPaddingBottom = function () {\n    var config = this.config;\n    return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n};\nc3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n    var $$ = this,\n        config = $$.config;\n    if (isValue(config.padding_left)) {\n        return config.padding_left;\n    } else if (config.axis_rotated) {\n        return !config.axis_x_show ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n    } else if (!config.axis_y_show || config.axis_y_inner) {\n        // && !config.axis_rotated\n        return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n    } else {\n        return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n    }\n};\nc3_chart_internal_fn.getCurrentPaddingRight = function () {\n    var $$ = this,\n        config = $$.config,\n        defaultPadding = 10,\n        legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n    if (isValue(config.padding_right)) {\n        return config.padding_right + 1; // 1 is needed not to hide tick line\n    } else if (config.axis_rotated) {\n        return defaultPadding + legendWidthOnRight;\n    } else if (!config.axis_y2_show || config.axis_y2_inner) {\n        // && !config.axis_rotated\n        return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n    } else {\n        return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n    }\n};\n\nc3_chart_internal_fn.getParentRectValue = function (key) {\n    var parent = this.selectChart.node(),\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        try {\n            v = parent.getBoundingClientRect()[key];\n        } catch (e) {\n            if (key === 'width') {\n                // In IE in certain cases getBoundingClientRect\n                // will cause an \"unspecified error\"\n                v = parent.offsetWidth;\n            }\n        }\n        if (v) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return v;\n};\nc3_chart_internal_fn.getParentWidth = function () {\n    return this.getParentRectValue('width');\n};\nc3_chart_internal_fn.getParentHeight = function () {\n    var h = this.selectChart.style('height');\n    return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n};\n\nc3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n    var $$ = this,\n        config = $$.config,\n        hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,\n        leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n        leftAxis = $$.main.select('.' + leftAxisClass).node(),\n        svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : { right: 0 },\n        chartRect = $$.selectChart.node().getBoundingClientRect(),\n        hasArc = $$.hasArcType(),\n        svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n    return svgLeft > 0 ? svgLeft : 0;\n};\n\nc3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n    var $$ = this,\n        position = $$.axis.getLabelPositionById(id);\n    return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n};\nc3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n    var $$ = this,\n        config = $$.config,\n        h = 30;\n    if (axisId === 'x' && !config.axis_x_show) {\n        return 8;\n    }\n    if (axisId === 'x' && config.axis_x_height) {\n        return config.axis_x_height;\n    }\n    if (axisId === 'y' && !config.axis_y_show) {\n        return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\n    }\n    if (axisId === 'y2' && !config.axis_y2_show) {\n        return $$.rotated_padding_top;\n    }\n    // Calculate x axis height when tick rotated\n    if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n        h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n    }\n    // Calculate y axis height when tick rotated\n    if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n        h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n    }\n    return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n};\n\nc3_chart_internal_fn.getEventRectWidth = function () {\n    return Math.max(0, this.xAxis.tickInterval());\n};\n\nc3_chart_internal_fn.initBrush = function () {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.brush = d3.svg.brush().on(\"brush\", function () {\n        $$.redrawForBrush();\n    });\n    $$.brush.update = function () {\n        if ($$.context) {\n            $$.context.select('.' + CLASS.brush).call(this);\n        }\n        return this;\n    };\n    $$.brush.scale = function (scale) {\n        return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n    };\n};\nc3_chart_internal_fn.initSubchart = function () {\n    var $$ = this,\n        config = $$.config,\n        context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n        visibility = config.subchart_show ? 'visible' : 'hidden';\n\n    context.style('visibility', visibility);\n\n    // Define g for chart area\n    context.append('g').attr(\"clip-path\", $$.clipPathForSubchart).attr('class', CLASS.chart);\n\n    // Define g for bar chart area\n    context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n\n    // Define g for line chart area\n    context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n\n    // Add extent rect for Brush\n    context.append(\"g\").attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.brush).call($$.brush);\n\n    // ATTENTION: This must be called AFTER chart added\n    // Add Axis\n    $$.axes.subx = context.append(\"g\").attr(\"class\", CLASS.axisX).attr(\"transform\", $$.getTranslate('subx')).attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis).style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n};\nc3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n    var $$ = this,\n        context = $$.context,\n        config = $$.config,\n        contextLineEnter,\n        contextLineUpdate,\n        contextBarEnter,\n        contextBarUpdate,\n        classChartBar = $$.classChartBar.bind($$),\n        classBars = $$.classBars.bind($$),\n        classChartLine = $$.classChartLine.bind($$),\n        classLines = $$.classLines.bind($$),\n        classAreas = $$.classAreas.bind($$);\n\n    if (config.subchart_show) {\n        //-- Bar --//\n        contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', classChartBar);\n        contextBarEnter = contextBarUpdate.enter().append('g').style('opacity', 0).attr('class', classChartBar);\n        // Bars for each data\n        contextBarEnter.append('g').attr(\"class\", classBars);\n\n        //-- Line --//\n        contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', classChartLine);\n        contextLineEnter = contextLineUpdate.enter().append('g').style('opacity', 0).attr('class', classChartLine);\n        // Lines for each data\n        contextLineEnter.append(\"g\").attr(\"class\", classLines);\n        // Area\n        contextLineEnter.append(\"g\").attr(\"class\", classAreas);\n\n        //-- Brush --//\n        context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n    }\n};\nc3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n    var $$ = this;\n    $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));\n    $$.contextBar.enter().append('path').attr(\"class\", $$.classBar.bind($$)).style(\"stroke\", 'none').style(\"fill\", $$.color);\n    $$.contextBar.style(\"opacity\", $$.initialOpacity.bind($$));\n    $$.contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n    (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);\n};\nc3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n    var $$ = this;\n    $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n    $$.contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);\n    $$.contextLine.style(\"opacity\", $$.initialOpacity.bind($$));\n    $$.contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n    (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr(\"d\", drawLineOnSub).style('opacity', 1);\n};\nc3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n    $$.contextArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n        $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n    });\n    $$.contextArea.style(\"opacity\", 0);\n    $$.contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n    (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr(\"d\", drawAreaOnSub).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity);\n};\nc3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        drawAreaOnSub,\n        drawBarOnSub,\n        drawLineOnSub;\n\n    $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n    // subchart\n    if (config.subchart_show) {\n        // reflect main chart to extent on subchart if zoomed\n        if (d3.event && d3.event.type === 'zoom') {\n            $$.brush.extent($$.x.orgDomain()).update();\n        }\n        // update subchart elements if needed\n        if (withSubchart) {\n\n            // extent rect\n            if (!$$.brush.empty()) {\n                $$.brush.extent($$.x.orgDomain()).update();\n            }\n            // setup drawer - MEMO: this must be called after axis updated\n            drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n            drawBarOnSub = $$.generateDrawBar(barIndices, true);\n            drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n            $$.updateBarForSubchart(duration);\n            $$.updateLineForSubchart(duration);\n            $$.updateAreaForSubchart(duration);\n\n            $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n            $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n            $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n        }\n    }\n};\nc3_chart_internal_fn.redrawForBrush = function () {\n    var $$ = this,\n        x = $$.x;\n    $$.redraw({\n        withTransition: false,\n        withY: $$.config.zoom_rescale,\n        withSubchart: false,\n        withUpdateXDomain: true,\n        withDimension: false\n    });\n    $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n};\nc3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n    var $$ = this,\n        subXAxis;\n    if (transitions && transitions.axisSubX) {\n        subXAxis = transitions.axisSubX;\n    } else {\n        subXAxis = $$.context.select('.' + CLASS.axisX);\n        if (withTransition) {\n            subXAxis = subXAxis.transition();\n        }\n    }\n    $$.context.attr(\"transform\", $$.getTranslate('context'));\n    subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n};\nc3_chart_internal_fn.getDefaultExtent = function () {\n    var $$ = this,\n        config = $$.config,\n        extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n    if ($$.isTimeSeries()) {\n        extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n    }\n    return extent;\n};\n\nc3_chart_internal_fn.initText = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartTexts);\n    $$.mainText = $$.d3.selectAll([]);\n};\nc3_chart_internal_fn.updateTargetsForText = function (targets) {\n    var $$ = this,\n        mainTextUpdate,\n        mainTextEnter,\n        classChartText = $$.classChartText.bind($$),\n        classTexts = $$.classTexts.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets).attr('class', function (d) {\n        return classChartText(d) + classFocus(d);\n    });\n    mainTextEnter = mainTextUpdate.enter().append('g').attr('class', classChartText).style('opacity', 0).style(\"pointer-events\", \"none\");\n    mainTextEnter.append('g').attr('class', classTexts);\n};\nc3_chart_internal_fn.updateText = function (durationForExit) {\n    var $$ = this,\n        config = $$.config,\n        barOrLineData = $$.barOrLineData.bind($$),\n        classText = $$.classText.bind($$);\n    $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);\n    $$.mainText.enter().append('text').attr(\"class\", classText).attr('text-anchor', function (d) {\n        return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';\n    }).style(\"stroke\", 'none').style(\"fill\", function (d) {\n        return $$.color(d);\n    }).style(\"fill-opacity\", 0);\n    $$.mainText.text(function (d, i, j) {\n        return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\n    });\n    $$.mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n    return [(withTransition ? this.mainText.transition() : this.mainText).attr('x', xForText).attr('y', yForText).style(\"fill\", this.color).style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))];\n};\nc3_chart_internal_fn.getTextRect = function (text, cls, element) {\n    var dummy = this.d3.select('body').append('div').classed('c3', true),\n        svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n        font = this.d3.select(element).style('font'),\n        rect;\n    svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : \"\", true).style('font', font).text(text).each(function () {\n        rect = this.getBoundingClientRect();\n    });\n    dummy.remove();\n    return rect;\n};\nc3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n    var $$ = this,\n        getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n        getBarPoints = $$.generateGetBarPoints(barIndices, false),\n        getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n        getter = forX ? $$.getXForText : $$.getYForText;\n    return function (d, i) {\n        var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n        return getter.call($$, getPoints(d, i), d, this);\n    };\n};\nc3_chart_internal_fn.getXForText = function (points, d, textElement) {\n    var $$ = this,\n        box = textElement.getBoundingClientRect(),\n        xPos,\n        padding;\n    if ($$.config.axis_rotated) {\n        padding = $$.isBarType(d) ? 4 : 6;\n        xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n    } else {\n        xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n    }\n    // show labels regardless of the domain if value is null\n    if (d.value === null) {\n        if (xPos > $$.width) {\n            xPos = $$.width - box.width;\n        } else if (xPos < 0) {\n            xPos = 4;\n        }\n    }\n    return xPos;\n};\nc3_chart_internal_fn.getYForText = function (points, d, textElement) {\n    var $$ = this,\n        box = textElement.getBoundingClientRect(),\n        yPos;\n    if ($$.config.axis_rotated) {\n        yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n    } else {\n        yPos = points[2][1];\n        if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {\n            yPos += box.height;\n            if ($$.isBarType(d) && $$.isSafari()) {\n                yPos -= 3;\n            } else if (!$$.isBarType(d) && $$.isChrome()) {\n                yPos += 3;\n            }\n        } else {\n            yPos += $$.isBarType(d) ? -3 : -6;\n        }\n    }\n    // show labels regardless of the domain if value is null\n    if (d.value === null && !$$.config.axis_rotated) {\n        if (yPos < box.height) {\n            yPos = box.height;\n        } else if (yPos > this.height) {\n            yPos = this.height - 4;\n        }\n    }\n    return yPos;\n};\n\nc3_chart_internal_fn.initTitle = function () {\n    var $$ = this;\n    $$.title = $$.svg.append(\"text\").text($$.config.title_text).attr(\"class\", $$.CLASS.title);\n};\nc3_chart_internal_fn.redrawTitle = function () {\n    var $$ = this;\n    $$.title.attr(\"x\", $$.xForTitle.bind($$)).attr(\"y\", $$.yForTitle.bind($$));\n};\nc3_chart_internal_fn.xForTitle = function () {\n    var $$ = this,\n        config = $$.config,\n        position = config.title_position || 'left',\n        x;\n    if (position.indexOf('right') >= 0) {\n        x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n    } else if (position.indexOf('center') >= 0) {\n        x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n    } else {\n        // left\n        x = config.title_padding.left;\n    }\n    return x;\n};\nc3_chart_internal_fn.yForTitle = function () {\n    var $$ = this;\n    return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n};\nc3_chart_internal_fn.getTitlePadding = function () {\n    var $$ = this;\n    return $$.yForTitle() + $$.config.title_padding.bottom;\n};\n\nc3_chart_internal_fn.initTooltip = function () {\n    var $$ = this,\n        config = $$.config,\n        i;\n    $$.tooltip = $$.selectChart.style(\"position\", \"relative\").append(\"div\").attr('class', CLASS.tooltipContainer).style(\"position\", \"absolute\").style(\"pointer-events\", \"none\").style(\"display\", \"none\");\n    // Show tooltip if needed\n    if (config.tooltip_init_show) {\n        if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n            config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n            for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\n                    break;\n                }\n            }\n            config.tooltip_init_x = i;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n            return $$.addName(d.values[config.tooltip_init_x]);\n        }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n        $$.tooltip.style(\"top\", config.tooltip_init_position.top).style(\"left\", config.tooltip_init_position.left).style(\"display\", \"block\");\n    }\n};\nc3_chart_internal_fn.getTooltipSortFunction = function () {\n    var $$ = this,\n        config = $$.config;\n\n    if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\n        // if data are not grouped or if an order is specified\n        // for the tooltip values we sort them by their values\n\n        var order = config.tooltip_order;\n        if (order === undefined) {\n            order = config.data_order;\n        }\n\n        var valueOf = function valueOf(obj) {\n            return obj ? obj.value : null;\n        };\n\n        // if data are not grouped, we sort them by their value\n        if (isString(order) && order.toLowerCase() === 'asc') {\n            return function (a, b) {\n                return valueOf(a) - valueOf(b);\n            };\n        } else if (isString(order) && order.toLowerCase() === 'desc') {\n            return function (a, b) {\n                return valueOf(b) - valueOf(a);\n            };\n        } else if (isFunction(order)) {\n\n            // if the function is from data_order we need\n            // to wrap the returned function in order to format\n            // the sorted value to the expected format\n\n            var sortFunction = order;\n\n            if (config.tooltip_order === undefined) {\n                sortFunction = function sortFunction(a, b) {\n                    return order(a ? {\n                        id: a.id,\n                        values: [a]\n                    } : null, b ? {\n                        id: b.id,\n                        values: [b]\n                    } : null);\n                };\n            }\n\n            return sortFunction;\n        } else if (isArray(order)) {\n            return function (a, b) {\n                return order.indexOf(a.id) - order.indexOf(b.id);\n            };\n        }\n    } else {\n        // if data are grouped, we follow the order of grouped targets\n        var ids = $$.orderTargets($$.data.targets).map(function (i) {\n            return i.id;\n        });\n\n        // if it was either asc or desc we need to invert the order\n        // returned by orderTargets\n        if ($$.isOrderAsc() || $$.isOrderDesc()) {\n            ids = ids.reverse();\n        }\n\n        return function (a, b) {\n            return ids.indexOf(a.id) - ids.indexOf(b.id);\n        };\n    }\n};\nc3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n    var $$ = this,\n        config = $$.config,\n        titleFormat = config.tooltip_format_title || defaultTitleFormat,\n        nameFormat = config.tooltip_format_name || function (name) {\n        return name;\n    },\n        valueFormat = config.tooltip_format_value || defaultValueFormat,\n        text,\n        i,\n        title,\n        value,\n        name,\n        bgcolor;\n\n    var tooltipSortFunction = this.getTooltipSortFunction();\n    if (tooltipSortFunction) {\n        d.sort(tooltipSortFunction);\n    }\n\n    for (i = 0; i < d.length; i++) {\n        if (!(d[i] && (d[i].value || d[i].value === 0))) {\n            continue;\n        }\n\n        if (!text) {\n            title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n            text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n        }\n\n        value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n        if (value !== undefined) {\n            // Skip elements when their name is set to null\n            if (d[i].name === null) {\n                continue;\n            }\n            name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n            bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n            text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n            text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n            text += \"<td class='value'>\" + value + \"</td>\";\n            text += \"</tr>\";\n        }\n    }\n    return text + \"</table>\";\n};\nc3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3;\n    var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n    var forArc = $$.hasArcType(),\n        mouse = d3.mouse(element);\n    // Determin tooltip position\n    if (forArc) {\n        tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\n        tooltipTop = $$.height / 2 + mouse[1] + 20;\n    } else {\n        svgLeft = $$.getSvgLeft(true);\n        if (config.axis_rotated) {\n            tooltipLeft = svgLeft + mouse[0] + 100;\n            tooltipRight = tooltipLeft + tWidth;\n            chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n            tooltipTop = $$.x(dataToShow[0].x) + 20;\n        } else {\n            tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n            tooltipRight = tooltipLeft + tWidth;\n            chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n            tooltipTop = mouse[1] + 15;\n        }\n\n        if (tooltipRight > chartRight) {\n            // 20 is needed for Firefox to keep tooltip width\n            tooltipLeft -= tooltipRight - chartRight + 20;\n        }\n        if (tooltipTop + tHeight > $$.currentHeight) {\n            tooltipTop -= tHeight + 30;\n        }\n    }\n    if (tooltipTop < 0) {\n        tooltipTop = 0;\n    }\n    return { top: tooltipTop, left: tooltipLeft };\n};\nc3_chart_internal_fn.showTooltip = function (selectedData, element) {\n    var $$ = this,\n        config = $$.config;\n    var tWidth, tHeight, position;\n    var forArc = $$.hasArcType(),\n        dataToShow = selectedData.filter(function (d) {\n        return d && isValue(d.value);\n    }),\n        positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n    if (dataToShow.length === 0 || !config.tooltip_show) {\n        return;\n    }\n    $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n    // Get tooltip dimensions\n    tWidth = $$.tooltip.property('offsetWidth');\n    tHeight = $$.tooltip.property('offsetHeight');\n\n    position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n    // Set tooltip\n    $$.tooltip.style(\"top\", position.top + \"px\").style(\"left\", position.left + 'px');\n};\nc3_chart_internal_fn.hideTooltip = function () {\n    this.tooltip.style(\"display\", \"none\");\n};\n\nc3_chart_internal_fn.setTargetType = function (targetIds, type) {\n    var $$ = this,\n        config = $$.config;\n    $$.mapToTargetIds(targetIds).forEach(function (id) {\n        $$.withoutFadeIn[id] = type === config.data_types[id];\n        config.data_types[id] = type;\n    });\n    if (!targetIds) {\n        config.data_type = type;\n    }\n};\nc3_chart_internal_fn.hasType = function (type, targets) {\n    var $$ = this,\n        types = $$.config.data_types,\n        has = false;\n    targets = targets || $$.data.targets;\n    if (targets && targets.length) {\n        targets.forEach(function (target) {\n            var t = types[target.id];\n            if (t && t.indexOf(type) >= 0 || !t && type === 'line') {\n                has = true;\n            }\n        });\n    } else if (Object.keys(types).length) {\n        Object.keys(types).forEach(function (id) {\n            if (types[id] === type) {\n                has = true;\n            }\n        });\n    } else {\n        has = $$.config.data_type === type;\n    }\n    return has;\n};\nc3_chart_internal_fn.hasArcType = function (targets) {\n    return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n};\nc3_chart_internal_fn.isLineType = function (d) {\n    var config = this.config,\n        id = isString(d) ? d : d.id;\n    return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n};\nc3_chart_internal_fn.isStepType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n};\nc3_chart_internal_fn.isSplineType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n};\nc3_chart_internal_fn.isAreaType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n};\nc3_chart_internal_fn.isBarType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'bar';\n};\nc3_chart_internal_fn.isScatterType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'scatter';\n};\nc3_chart_internal_fn.isPieType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'pie';\n};\nc3_chart_internal_fn.isGaugeType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'gauge';\n};\nc3_chart_internal_fn.isDonutType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'donut';\n};\nc3_chart_internal_fn.isArcType = function (d) {\n    return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n};\nc3_chart_internal_fn.lineData = function (d) {\n    return this.isLineType(d) ? [d] : [];\n};\nc3_chart_internal_fn.arcData = function (d) {\n    return this.isArcType(d.data) ? [d] : [];\n};\n/* not used\n function scatterData(d) {\n return isScatterType(d) ? d.values : [];\n }\n */\nc3_chart_internal_fn.barData = function (d) {\n    return this.isBarType(d) ? d.values : [];\n};\nc3_chart_internal_fn.lineOrScatterData = function (d) {\n    return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n};\nc3_chart_internal_fn.barOrLineData = function (d) {\n    return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n};\nc3_chart_internal_fn.isInterpolationType = function (type) {\n    return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n};\n\nc3_chart_internal_fn.isSafari = function () {\n    var ua = window.navigator.userAgent;\n    return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n};\nc3_chart_internal_fn.isChrome = function () {\n    var ua = window.navigator.userAgent;\n    return ua.indexOf('Chrome') >= 0;\n};\n\nc3_chart_internal_fn.initZoom = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        startEvent;\n\n    $$.zoom = d3.behavior.zoom().on(\"zoomstart\", function () {\n        startEvent = d3.event.sourceEvent;\n        $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n        config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n    }).on(\"zoom\", function () {\n        $$.redrawForZoom.call($$);\n    }).on('zoomend', function () {\n        var event = d3.event.sourceEvent;\n        // if click, do nothing. otherwise, click interaction will be canceled.\n        if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n            return;\n        }\n        $$.redrawEventRect();\n        $$.updateZoom();\n        config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n    });\n    $$.zoom.scale = function (scale) {\n        return config.axis_rotated ? this.y(scale) : this.x(scale);\n    };\n    $$.zoom.orgScaleExtent = function () {\n        var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n        return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n    };\n    $$.zoom.updateScaleExtent = function () {\n        var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n            extent = this.orgScaleExtent();\n        this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n        return this;\n    };\n};\nc3_chart_internal_fn.getZoomDomain = function () {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3,\n        min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n        max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n    return [min, max];\n};\nc3_chart_internal_fn.updateZoom = function () {\n    var $$ = this,\n        z = $$.config.zoom_enabled ? $$.zoom : function () {};\n    $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n    $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n};\nc3_chart_internal_fn.redrawForZoom = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        zoom = $$.zoom,\n        x = $$.x;\n    if (!config.zoom_enabled) {\n        return;\n    }\n    if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n        return;\n    }\n    if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n        x.domain(zoom.altDomain);\n        zoom.scale(x).updateScaleExtent();\n        return;\n    }\n    if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n        x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n    }\n    $$.redraw({\n        withTransition: false,\n        withY: config.zoom_rescale,\n        withSubchart: false,\n        withEventRect: false,\n        withDimension: false\n    });\n    if (d3.event.sourceEvent.type === 'mousemove') {\n        $$.cancelClick = true;\n    }\n    config.zoom_onzoom.call($$.api, x.orgDomain());\n};\n\nreturn c3$1;\n\n})));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(3)();\n// imports\n\n\n// module\nexports.push([module.i, \".c3 svg{font:10px sans-serif;-webkit-tap-highlight-color:transparent}.c3 line,.c3 path{fill:none;stroke:#000}.c3 text{-webkit-user-select:none;-moz-user-select:none;user-select:none}.c3-bars path,.c3-event-rect,.c3-legend-item-tile,.c3-xgrid-focus,.c3-ygrid{shape-rendering:crispEdges}.c3-chart-arc path{stroke:#fff}.c3-chart-arc text{fill:#fff;font-size:13px}.c3-grid line{stroke:#aaa}.c3-grid text{fill:#aaa}.c3-xgrid,.c3-ygrid{stroke-dasharray:3 3}.c3-text.c3-empty{fill:grey;font-size:2em}.c3-line{stroke-width:1px}.c3-circle._expanded_{stroke-width:1px;stroke:#fff}.c3-selected-circle{fill:#fff;stroke-width:2px}.c3-bar{stroke-width:0}.c3-bar._expanded_{fill-opacity:1;fill-opacity:.75}.c3-target.c3-focused{opacity:1}.c3-target.c3-focused path.c3-line,.c3-target.c3-focused path.c3-step{stroke-width:2px}.c3-target.c3-defocused{opacity:.3!important}.c3-region{fill:#4682b4;fill-opacity:.1}.c3-brush .extent{fill-opacity:.1}.c3-legend-item{font-size:12px}.c3-legend-item-hidden{opacity:.15}.c3-legend-background{opacity:.75;fill:#fff;stroke:#d3d3d3;stroke-width:1}.c3-title{font:14px sans-serif}.c3-tooltip-container{z-index:10}.c3-tooltip{border-collapse:collapse;border-spacing:0;background-color:#fff;empty-cells:show;box-shadow:7px 7px 12px -9px #777;opacity:.9}.c3-tooltip tr{border:1px solid #ccc}.c3-tooltip th{background-color:#aaa;font-size:14px;padding:2px 5px;text-align:left;color:#fff}.c3-tooltip td{font-size:13px;padding:3px 6px;background-color:#fff;border-left:1px dotted #999}.c3-tooltip td>span{display:inline-block;width:10px;height:10px;margin-right:6px}.c3-tooltip td.value{text-align:right}.c3-area{stroke-width:0;opacity:.2}.c3-chart-arcs-title{dominant-baseline:middle;font-size:1.3em}.c3-chart-arcs .c3-chart-arcs-background{fill:#e0e0e0;stroke:none}.c3-chart-arcs .c3-chart-arcs-gauge-unit{fill:#000;font-size:16px}.c3-chart-arcs .c3-chart-arcs-gauge-max,.c3-chart-arcs .c3-chart-arcs-gauge-min{fill:#777}.c3-chart-arc .c3-gauge-value{fill:#000}.c3-chart-arc.c3-target.c3-focused g path,.c3-chart-arc.c3-target g path{opacity:1}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(3)();\n// imports\nexports.i(__webpack_require__(9), \"\");\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', [_vm._t(\"default\")], 2), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": _vm.bindTo\n    }\n  })])\n},staticRenderFns: []}\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(10);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(15)(\"e5307864\", content, true);\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(16)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vue-c3js.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 31839cee7cdf8dad39e8","\nimport VueC3Element from './../mixins/VueC3Element'\n\nexport default {\n\n    mixins: [VueC3Element],\n\n    name: \"c3-line\",\n\n    props: {\n        connectNull: {},\n        stepType: {},\n    },\n\n    data: function data() {\n        return {\n            type: 'line'\n        };\n    },\n\n    mounted() {\n\n    },\n\n    methods: {\n\n    },\n\n    computed: {\n\n    },\n\n    filters: {\n\n    },\n\n    watch: {\n\n    },\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/VueC3Line.js","\nimport VueC3Element from './../mixins/VueC3Element'\n\nexport default {\n\n    mixins: [VueC3Element],\n\n    name: \"c3-spline\",\n\n    props: {\n\n    },\n\n    data: function data() {\n        return {\n            type: 'spline'\n        };\n    },\n\n    mounted() {\n\n    },\n\n    methods: {\n\n    },\n\n    computed: {\n\n    },\n\n    filters: {\n\n    },\n\n    watch: {\n\n    },\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/VueC3Spline.js","\nexport default {\n\n    replace: true,\n\n    props: {\n        id: {\n            type: String\n        },\n        prop: {\n            type: String\n        },\n        color: {\n            type: String\n        },\n        name: {\n            type: String\n        },\n        customClass: {\n            type: String\n        },\n    },\n\n    data: function data() {\n        return {\n            type: ''\n        };\n    },\n\n    mounted() {\n        this.$parent.$emit('c3-chart-element-mounted', this.type, this.prop, this.options)\n    },\n\n    methods: {\n\n        optionExists: function(option) {\n            return (undefined !== option && null !== option && '' !== option) ? true : false\n        },\n    },\n\n    computed: {\n\n        options: function() {\n            var _options = {}\n\n            if (this.optionExists(this.color)) {\n                _options.color = this.color\n            }\n\n            if (this.optionExists(this.name)) {\n                _options.name = this.name\n            }\n\n            if (this.optionExists(this.customClass)) {\n                _options.customClass = this.customClass\n            }\n\n            return _options\n        }\n    },\n\n    watch: {\n\n    },\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mixins/VueC3Element.js","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 3\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-loader/node_modules/vue-style-loader!css-loader?minimize!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-62011295\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./VueC3Chart.vue\")\n}\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./VueC3Chart.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-62011295\\\",\\\"hasScoped\\\":false}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./VueC3Chart.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/VueC3Chart.vue\n// module id = 4\n// module chunks = 0","module.exports = {\"name\":\"vue-c3js\",\"version\":\"0.0.1\",\"description\":\"c3js wrapper for vuejs.\",\"main\":\"./dist/vue-c3js.js\",\"scripts\":{\"test\":\"test\",\"dev:hot\":\"cross-env NODE_ENV=development webpack-dev-server --open --hot\",\"example\":\"cross-env NODE_ENV=production webpack --progress --hide-modules --config  ./build/webpack.config.js\",\"build\":\"cross-env NODE_ENV=production webpack --progress --hide-modules --config  ./build/webpack.prod.js\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/andreas2510/vue-c3js.git\"},\"author\":\"Andreas Papadopoulos <andreaspapadopoulos1@gmail.com>\",\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/andreas2510/vue-c3js/issues\"},\"homepage\":\"https://github.com/andreas2510/vue-c3js#readme\",\"dependencies\":{\"c3\":\"^0.4.15\",\"vue\":\"^2.0.0\"},\"devDependencies\":{\"babel-core\":\"^6.0.0\",\"babel-loader\":\"^6.0.0\",\"babel-preset-env\":\"^1.5.1\",\"cross-env\":\"^3.0.0\",\"css-loader\":\"^0.25.0\",\"file-loader\":\"^0.9.0\",\"vue-loader\":\"^12.1.0\",\"vue-template-compiler\":\"^2.3.3\",\"webpack\":\"^2.6.1\",\"webpack-dev-server\":\"^2.4.5\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 5\n// module chunks = 0","<style>\n    @import url(\"./../../node_modules/c3/c3.min.css\");\n</style>\n\n<template>\n    <div>\n        <div><slot></slot></div>\n        <div v-bind:id=\"bindTo\"></div>\n    </div>\n</template>\n\n<script>\n\n    import VueC3Line from './VueC3Line'\n    import VueC3Spline from './VueC3Spline'\n\n    var c3 = require(\"c3\")\n\n    export default {\n\n        components: { VueC3Line, VueC3Spline },\n\n        name: \"c3-chart\",\n\n        props: {\n            id: {\n                type: String,\n                required: true\n            },\n            chartData: {\n                type: Array,\n                required: true\n            },\n\n            // Chart options\n            width: {\n                type: Number\n            },\n            height: {\n                type: Number\n            },\n            paddingTop: {\n                type: Number\n            },\n            paddingRight: {\n                type: Number\n            },\n            paddingBottom: {\n                type: Number\n            },\n            paddingLeft: {\n                type: Number\n            },\n            colorPattern: {\n                type: Array\n            },\n            interactionEnabled: {\n                type: Boolean\n            },\n            transitionDuration: {\n                type: Number\n            },\n\n            // Data\n            labels: {\n                type: Boolean\n            },\n            type: {\n                type: String\n            },\n\n            // Axis\n            axisRotated: {\n                type: Boolean\n            },\n            showXAxis: {\n                type: Boolean\n            },\n            showYAxis: {\n                type: Boolean\n            },\n            axisXTickCentered: {\n                type: Boolean\n            },\n            axisXTickCount: {\n                type: Number\n            },\n            axisXTickFit: {\n                type: Boolean\n            },\n            axisXTickRotate: {\n                type: Number\n            },\n            axisXTickOuter: {\n                type: Boolean\n            },\n            axisXTickMax: {\n                type: Number\n            },\n            axisXTickMin: {\n                type: Number\n            },\n\n            // Grid\n            showGridX: {\n                type: Boolean\n            },\n            showGridY: {\n                type: Boolean\n            },\n\n            // Legend\n            showLegend: {\n                type: Boolean\n            },\n            legendPosition: {\n                type: String\n            },\n\n            // Tooltip\n            showTooltip: {\n                type: Boolean\n            },\n            tooltipGrouped: {\n                type: Boolean\n            },\n            tooltipFormattedTitle: {\n                type: String,\n            },\n\n            // Subchart\n            showSubchart: {\n                type: Boolean\n            },\n            subchartHeight: {\n                type: Number\n            },\n\n            // Zoom\n            zoomEnabled: {\n                type: Boolean\n            },\n            zoomRescale: {\n                type: Boolean\n            },\n            zoomExtent: {\n                type: Array\n            },\n\n            // Point\n            showPoint: {\n                type: Boolean\n            },\n            pointRadius: {\n                type: Number\n            },\n            pointFocusExpandEnabled: {\n                type: Boolean\n            },\n            pointFocusExpandRadius: {\n                type: Number\n            },\n            pointFocusSelectRadius: {\n                type: Number\n            },\n        },\n\n        data: function data() {\n            return {\n                isReady: false,\n                isLoading: false,\n\n                // Options\n                bindTo: '',\n\n                data: {\n                    // url: \"\",\n                    // json: [],\n                    // keys: [],\n                    // mimeType: '', // json\n\n                    // rows: [],\n                    columns: [],\n\n                    names: {},\n                    classes: {},\n                    // groups: {},\n                    // axes: {},\n                    label: \"\",\n                    type: \"\",\n                    types: {},\n                    // labels: false,\n                    // order: false,\n                    // regions: {},\n                    colors: {},\n                },\n\n            };\n        },\n\n        created() {\n            this.bindTo = this.id\n\n            this.$on('c3-chart-element-mounted', function(type, prop, options) {\n\n                this.data.types[prop] = type\n\n                if (options.hasOwnProperty('color') && undefined !== options.color) {\n                    this.data.colors[prop] = options.color\n                }\n\n                if (options.hasOwnProperty('name') && undefined !== options.name) {\n                    this.data.names[prop] = options.name\n                }\n\n                if (options.hasOwnProperty('customClass') && undefined !== options.customClass) {\n                    this.data.classes[prop] = options.customClass\n                }\n            })\n        },\n\n        mounted() {\n            this.data.columns = this.chartData\n\n            var chart = c3.generate(this.options)\n\n            var el = document.getElementById(this.bindTo)\n            el.chartdata = chart\n\n            this.isReady = true\n        },\n\n        methods: {\n            /**\n             * [propExists description]\n             * @param  {[type]} prop [description]\n             * @return {[type]}      [description]\n             */\n            propExists: function(prop) {\n                return (undefined !== prop && null !== prop && '' !== prop) ? true : false\n            },\n\n            /**\n             * [mergeObjects description]\n             * @param  {[type]} obj [description]\n             * @param  {[type]} src [description]\n             * @return {[type]}     [description]\n             */\n            mergeObjects: function(obj, src) {\n                Object.keys(src).forEach(function(key) { obj[key] = src[key]; });\n                return obj;\n            },\n\n            /**\n             * [refresh description]\n             * @return {[type]} [description]\n             */\n            refresh: function() {\n                var chart = document.getElementById(this.bindTo).chartdata\n                chart.load({\n                    columns: this.data.columns\n                })\n            }\n        },\n\n        computed: {\n\n            chartOptions: function() {\n                var _chartOptions = {}\n                _chartOptions.size = {}\n                _chartOptions.padding = {}\n                _chartOptions.color = {}\n                _chartOptions.interaction = {}\n                _chartOptions.transition = {}\n\n                if (this.propExists(this.width)) {\n                    _chartOptions.size.width = this.width\n                }\n                if (this.propExists(this.height)) {\n                    _chartOptions.size.height = this.height\n                }\n                if (this.propExists(this.paddingTop)) {\n                    _chartOptions.padding.top = this.paddingTop\n                }\n                if (this.propExists(this.paddingRight)) {\n                    _chartOptions.padding.right = this.paddingRight\n                }\n                if (this.propExists(this.paddingBottom)) {\n                    _chartOptions.padding.bottom = this.paddingBottom\n                }\n                if (this.propExists(this.paddingLeft)) {\n                    _chartOptions.padding.left = this.paddingLeft\n                }\n                if (this.propExists(this.colorPattern)) {\n                    _chartOptions.color.pattern = this.colorPattern\n                }\n                if (this.propExists(this.interactionEnabled)) {\n                    _chartOptions.interaction.enabled = this.interactionEnabled\n                }\n                if (this.propExists(this.transitionDuration)) {\n                    _chartOptions.transition.duration = this.transitionDuration\n                }\n\n                return _chartOptions\n            },\n\n            dataOptions: function() {\n                var _dataOptions = {}\n\n                if (this.propExists(this.labels)) {\n                    _dataOptions.labels = this.labels\n                }\n                if (this.propExists(this.type)) {\n                    _dataOptions.type = this.type\n                }\n\n                return _dataOptions\n            },\n\n            axisOptions: function() {\n                var _axisOptions = {}\n                _axisOptions.x = {}\n                _axisOptions.x.tick = {}\n                _axisOptions.y = {}\n\n                if (this.propExists(this.axisRotated)) {\n                    _axisOptions.rotated = this.axisRotated\n                }\n                if (this.propExists(this.showXAxis)) {\n                    _axisOptions.x.show = this.showXAxis\n                }\n                if (this.propExists(this.axisXTickCentered)) {\n                    _axisOptions.x.tick.centered = this.axisXTickCentered\n                }\n                if (this.propExists(this.showYAxis)) {\n                    _axisOptions.y.show = this.showYAxis\n                }\n\n                return _axisOptions\n            },\n\n            gridOptions: function() {\n                var _gridOptions = {}\n                _gridOptions.x = {}\n                _gridOptions.y = {}\n\n                if (this.propExists(this.showGridX)) {\n                    _gridOptions.x.show = this.showGridX\n                }\n                if (this.propExists(this.showGridY)) {\n                    _gridOptions.y.show = this.showGridY\n                }\n\n                return _gridOptions\n            },\n\n            legendOptions: function() {\n                var _legendOptions = {}\n\n                if (this.propExists(this.showLegend)) {\n                    _legendOptions.show = this.showLegend\n                }\n                if (this.propExists(this.legendPosition)) {\n                    _legendOptions.position = this.legendPosition\n                }\n\n                return _legendOptions\n            },\n\n            tooltipOptions: function() {\n                var _tooltipOptions = {}\n                _tooltipOptions.format = {}\n\n                if (this.propExists(this.showTooltip)) {\n                    _tooltipOptions.show = this.showTooltip\n                }\n                if (this.propExists(this.tooltipGrouped)) {\n                    _tooltipOptions.grouped = this.tooltipGrouped\n                }\n\n                var that = this\n\n                _tooltipOptions.format = {\n                    title: function (x) {\n                        // that.$emit('tooltip-format-title', x)\n                        if (that.propExists(that.tooltipFormattedTitle)) {\n                            return that.tooltipFormattedTitle\n                        } else {\n                            return x\n                        }\n                    }\n                }\n\n                return _tooltipOptions\n            },\n\n            subchartOptions: function() {\n                var _subchartOptions = {}\n                _subchartOptions.size = {}\n\n                if (this.propExists(this.showSubchart)) {\n                    _subchartOptions.show = this.showSubchart\n                }\n                if (this.propExists(this.subchartHeight)) {\n                    _subchartOptions.size.height = this.subchartHeight\n                }\n\n                return _subchartOptions\n            },\n\n            zoomOptions: function() {\n                var _zoomOptions = {}\n\n                if (this.propExists(this.zoomEnabled)) {\n                    _zoomOptions.enabled = this.zoomEnabled\n                }\n                if (this.propExists(this.zoomRescale)) {\n                    _zoomOptions.rescale = this.zoomRescale\n                }\n                if (this.propExists(this.zoomExtent)) {\n                    _zoomOptions.extent = this.zoomExtent\n                }\n\n                return _zoomOptions\n            },\n\n            pointOptions: function() {\n                var _pointOptions = {}\n                _pointOptions.focus = {}\n                _pointOptions.focus.expand = {}\n                _pointOptions.select = {}\n\n                if (this.propExists(this.showPoint)) {\n                    _pointOptions.show = this.showPoint\n                }\n                if (this.propExists(this.pointRadius)) {\n                    _pointOptions.r = this.pointRadius\n                }\n                if (this.propExists(this.pointFocusExpandEnabled)) {\n                    _pointOptions.focus.expand.enabled = this.pointFocusExpandEnabled\n                }\n                if (this.propExists(this.pointFocusExpandRadius)) {\n                    _pointOptions.focus.expand.r = this.pointFocusExpandRadius\n                }\n                if (this.propExists(this.pointFocusSelectRadius)) {\n                    _pointOptions.select.r = this.pointFocusSelectRadius\n                }\n\n                return _pointOptions\n            },\n\n            chartCallbacks: function() {\n                var that = this\n                return {\n                    oninit: function () {\n                        that.$emit('oninit')\n                    },\n                    onrendered: function () {\n                        that.$emit('onrendered')\n                    },\n                    onmouseover: function () {\n                        that.$emit('onmouseover')\n                    },\n                    onmouseout: function () {\n                        that.$emit('onmouseout')\n                    },\n                    onresize: function () {\n                        that.$emit('onresize')\n                    },\n                    onresized: function () {\n                        that.$emit('onresized')\n                    },\n                }\n            },\n\n            dataCallbacks: function() {\n                var that = this\n                return {\n                    onclick: function (d, element) {\n                        that.$emit('data-onclick', d)\n                        // console.log(d)\n                        // console.log(element)\n                    },\n                    onmouseover: function (d) {\n                        that.$emit('data-onmouseover', d)\n                    },\n                    onmouseout: function (d) {\n                        that.$emit('data-onmouseout', d)\n                    },\n                }\n            },\n\n            options: function() {\n                var _options = {}\n                _options.bindto = '#' + this.bindTo\n                _options.data  = this.data\n                _options.data.labels = this.labels\n                _options.data.type = this.type\n                this.mergeObjects(_options, this.chartOptions)\n                //this.mergeObjects(_options, this.chartCallbacks)\n                this.mergeObjects(_options.data, this.dataOptions)\n                //this.mergeObjects(_options.data, this.dataCallbacks)\n\n                _options.axis = this.axisOptions\n                _options.grid = this.gridOptions\n                _options.legend = this.legendOptions\n                _options.tooltip = this.tooltipOptions\n                _options.point = this.pointOptions\n                _options.subchart = this.subchartOptions\n                _options.zoom = this.zoomOptions\n\n                return _options\n            },\n\n            /**\n             * Serialized chart data.\n             * @return {[type]} [description]\n             */\n            serializedChartData: function() {\n                return JSON.stringify(this.chartData)\n            }\n        },\n\n        filters: {\n            /**\n             * Round value to two decimal float.\n             * @param  {[type]} str [description]\n             * @return {[type]}     [description]\n             */\n            round: function (str) {\n                return parseFloat(str).toFixed(2)\n            },\n        },\n\n        watch: {\n\n            'data.columns': function(newVal, oldVal) {\n                if (this.isReady) {\n                    this.refresh()\n                }\n            },\n\n            chartData: function(newVal, oldVal) {\n                this.data.columns = newVal\n            },\n\n            /**\n             * [chartData description]\n             * @param  {[type]} newVal [description]\n             * @param  {[type]} oldVal [description]\n             * @return {[type]}        [description]\n             */\n            columns: function(newVal, oldVal) {\n                var that  = this\n                var chart = $('#' + this.id).data('c3-chart')\n                that.isLoading = true\n                setTimeout(function () {\n                    chart.load({\n                        columns: newVal\n                    })\n                    that.isLoading = false\n                }, 1000)\n\n                // var chartLegendFocus = {}\n                // newVal.forEach(function (key) {\n                //     chartLegendFocus[key] = 0\n                // })\n                // this.chartLegendFocus = chartLegendFocus\n\n                // this.chartLegendItems = []\n                // for (var i = 0; i < newVal.length; i++) {\n                //     var legend = newVal[i]\n                //     this.chartLegendItems.push(legend[0])\n                // }\n            },\n        },\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// VueC3Chart.vue?6e3874a1","\nimport VueC3Chart from './components/VueC3Chart.vue'\nimport VueC3Line from './components/VueC3Line'\nimport VueC3Spline from './components/VueC3Spline'\nimport npmCfg from './../package.json'\n\nconst components = [\n    VueC3Chart,\n    VueC3Line,\n    VueC3Spline\n]\n\nconst install = function(Vue, opts = {}) {\n    if (install.installed) return;\n    components.map(component => {\n        Vue.component(component.name, component);\n    })\n}\n\n// if (typeof window !== 'undefined' && window.Vue) {\n//     console.log('ELEMENT')\n//     install(window.Vue);\n// };\n\nconst VueC3Charts = {\n    version: npmCfg.version,\n    install,\n    VueC3Chart,\n    VueC3Line,\n    VueC3Spline\n}\n\nexport default VueC3Charts\n\nmodule.exports = {\n    version: npmCfg.version,\n    install,\n    VueC3Charts,\n    VueC3Chart,\n    VueC3Line,\n    VueC3Spline\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.c3 = factory());\n}(this, (function () { 'use strict';\n\nvar CLASS = {\n    target: 'c3-target',\n    chart: 'c3-chart',\n    chartLine: 'c3-chart-line',\n    chartLines: 'c3-chart-lines',\n    chartBar: 'c3-chart-bar',\n    chartBars: 'c3-chart-bars',\n    chartText: 'c3-chart-text',\n    chartTexts: 'c3-chart-texts',\n    chartArc: 'c3-chart-arc',\n    chartArcs: 'c3-chart-arcs',\n    chartArcsTitle: 'c3-chart-arcs-title',\n    chartArcsBackground: 'c3-chart-arcs-background',\n    chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n    chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n    chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n    selectedCircle: 'c3-selected-circle',\n    selectedCircles: 'c3-selected-circles',\n    eventRect: 'c3-event-rect',\n    eventRects: 'c3-event-rects',\n    eventRectsSingle: 'c3-event-rects-single',\n    eventRectsMultiple: 'c3-event-rects-multiple',\n    zoomRect: 'c3-zoom-rect',\n    brush: 'c3-brush',\n    focused: 'c3-focused',\n    defocused: 'c3-defocused',\n    region: 'c3-region',\n    regions: 'c3-regions',\n    title: 'c3-title',\n    tooltipContainer: 'c3-tooltip-container',\n    tooltip: 'c3-tooltip',\n    tooltipName: 'c3-tooltip-name',\n    shape: 'c3-shape',\n    shapes: 'c3-shapes',\n    line: 'c3-line',\n    lines: 'c3-lines',\n    bar: 'c3-bar',\n    bars: 'c3-bars',\n    circle: 'c3-circle',\n    circles: 'c3-circles',\n    arc: 'c3-arc',\n    arcs: 'c3-arcs',\n    area: 'c3-area',\n    areas: 'c3-areas',\n    empty: 'c3-empty',\n    text: 'c3-text',\n    texts: 'c3-texts',\n    gaugeValue: 'c3-gauge-value',\n    grid: 'c3-grid',\n    gridLines: 'c3-grid-lines',\n    xgrid: 'c3-xgrid',\n    xgrids: 'c3-xgrids',\n    xgridLine: 'c3-xgrid-line',\n    xgridLines: 'c3-xgrid-lines',\n    xgridFocus: 'c3-xgrid-focus',\n    ygrid: 'c3-ygrid',\n    ygrids: 'c3-ygrids',\n    ygridLine: 'c3-ygrid-line',\n    ygridLines: 'c3-ygrid-lines',\n    axis: 'c3-axis',\n    axisX: 'c3-axis-x',\n    axisXLabel: 'c3-axis-x-label',\n    axisY: 'c3-axis-y',\n    axisYLabel: 'c3-axis-y-label',\n    axisY2: 'c3-axis-y2',\n    axisY2Label: 'c3-axis-y2-label',\n    legendBackground: 'c3-legend-background',\n    legendItem: 'c3-legend-item',\n    legendItemEvent: 'c3-legend-item-event',\n    legendItemTile: 'c3-legend-item-tile',\n    legendItemHidden: 'c3-legend-item-hidden',\n    legendItemFocused: 'c3-legend-item-focused',\n    dragarea: 'c3-dragarea',\n    EXPANDED: '_expanded_',\n    SELECTED: '_selected_',\n    INCLUDED: '_included_'\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isValue = function isValue(v) {\n    return v || v === 0;\n};\nvar isFunction = function isFunction(o) {\n    return typeof o === 'function';\n};\nvar isArray = function isArray(o) {\n    return Array.isArray(o);\n};\nvar isString = function isString(o) {\n    return typeof o === 'string';\n};\nvar isUndefined = function isUndefined(v) {\n    return typeof v === 'undefined';\n};\nvar isDefined = function isDefined(v) {\n    return typeof v !== 'undefined';\n};\nvar ceil10 = function ceil10(v) {\n    return Math.ceil(v / 10) * 10;\n};\nvar asHalfPixel = function asHalfPixel(n) {\n    return Math.ceil(n) + 0.5;\n};\nvar diffDomain = function diffDomain(d) {\n    return d[1] - d[0];\n};\nvar isEmpty = function isEmpty(o) {\n    return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;\n};\nvar notEmpty = function notEmpty(o) {\n    return !c3_chart_internal_fn.isEmpty(o);\n};\nvar getOption = function getOption(options, key, defaultValue) {\n    return isDefined(options[key]) ? options[key] : defaultValue;\n};\nvar hasValue = function hasValue(dict, value) {\n    var found = false;\n    Object.keys(dict).forEach(function (key) {\n        if (dict[key] === value) {\n            found = true;\n        }\n    });\n    return found;\n};\nvar sanitise = function sanitise(str) {\n    return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n};\nvar getPathBox = function getPathBox(path) {\n    var box = path.getBoundingClientRect(),\n        items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n        minX = items[0].x,\n        minY = Math.min(items[0].y, items[1].y);\n    return { x: minX, y: minY, width: box.width, height: box.height };\n};\n\n// Features:\n// 1. category axis\n// 2. ceil values of translate/x/y to int for half pixel antialiasing\n// 3. multiline tick text\nvar tickTextCharSize;\nfunction c3_axis(d3, params) {\n    var scale = d3.scale.linear(),\n        orient = \"bottom\",\n        innerTickSize = 6,\n        outerTickSize,\n        tickPadding = 3,\n        tickValues = null,\n        tickFormat,\n        tickArguments;\n\n    var tickOffset = 0,\n        tickCulling = true,\n        tickCentered;\n\n    params = params || {};\n    outerTickSize = params.withOuterTick ? 6 : 0;\n\n    function axisX(selection, x) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n        });\n    }\n    function axisY(selection, y) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n        });\n    }\n    function scaleExtent(domain) {\n        var start = domain[0],\n            stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    }\n    function generateTicks(scale) {\n        var i,\n            domain,\n            ticks = [];\n        if (scale.ticks) {\n            return scale.ticks.apply(scale, tickArguments);\n        }\n        domain = scale.domain();\n        for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n            ticks.push(i);\n        }\n        if (ticks.length > 0 && ticks[0] > 0) {\n            ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n        }\n        return ticks;\n    }\n    function copyScale() {\n        var newScale = scale.copy(),\n            domain;\n        if (params.isCategory) {\n            domain = scale.domain();\n            newScale.domain([domain[0], domain[1] - 1]);\n        }\n        return newScale;\n    }\n    function textFormatted(v) {\n        var formatted = tickFormat ? tickFormat(v) : v;\n        return typeof formatted !== 'undefined' ? formatted : '';\n    }\n    function getSizeFor1Char(tick) {\n        if (tickTextCharSize) {\n            return tickTextCharSize;\n        }\n        var size = {\n            h: 11.5,\n            w: 5.5\n        };\n        tick.select('text').text(textFormatted).each(function (d) {\n            var box = this.getBoundingClientRect(),\n                text = textFormatted(d),\n                h = box.height,\n                w = text ? box.width / text.length : undefined;\n            if (h && w) {\n                size.h = h;\n                size.w = w;\n            }\n        }).text('');\n        tickTextCharSize = size;\n        return size;\n    }\n    function transitionise(selection) {\n        return params.withoutTransition ? selection : d3.transition(selection);\n    }\n    function axis(g) {\n        g.each(function () {\n            var g = axis.g = d3.select(this);\n\n            var scale0 = this.__chart__ || scale,\n                scale1 = this.__chart__ = copyScale();\n\n            var ticks = tickValues ? tickValues : generateTicks(scale1),\n                tick = g.selectAll(\".tick\").data(ticks, scale1),\n                tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n\n            // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n            tickExit = tick.exit().remove(),\n                tickUpdate = transitionise(tick).style(\"opacity\", 1),\n                tickTransform,\n                tickX,\n                tickY;\n\n            var range = scale.rangeExtent ? scale.rangeExtent() : scaleExtent(scale.range()),\n                path = g.selectAll(\".domain\").data([0]),\n                pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), transitionise(path));\n            tickEnter.append(\"line\");\n            tickEnter.append(\"text\");\n\n            var lineEnter = tickEnter.select(\"line\"),\n                lineUpdate = tickUpdate.select(\"line\"),\n                textEnter = tickEnter.select(\"text\"),\n                textUpdate = tickUpdate.select(\"text\");\n\n            if (params.isCategory) {\n                tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                tickX = tickCentered ? 0 : tickOffset;\n                tickY = tickCentered ? tickOffset : 0;\n            } else {\n                tickOffset = tickX = 0;\n            }\n\n            var text,\n                tspan,\n                sizeFor1Char = getSizeFor1Char(g.select('.tick')),\n                counts = [];\n            var tickLength = Math.max(innerTickSize, 0) + tickPadding,\n                isVertical = orient === 'left' || orient === 'right';\n\n            // this should be called only when category axis\n            function splitTickText(d, maxWidth) {\n                var tickText = textFormatted(d),\n                    subtext,\n                    spaceIndex,\n                    textWidth,\n                    splitted = [];\n\n                if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n                    return tickText;\n                }\n\n                if (!maxWidth || maxWidth <= 0) {\n                    maxWidth = isVertical ? 95 : params.isCategory ? Math.ceil(scale1(ticks[1]) - scale1(ticks[0])) - 12 : 110;\n                }\n\n                function split(splitted, text) {\n                    spaceIndex = undefined;\n                    for (var i = 1; i < text.length; i++) {\n                        if (text.charAt(i) === ' ') {\n                            spaceIndex = i;\n                        }\n                        subtext = text.substr(0, i + 1);\n                        textWidth = sizeFor1Char.w * subtext.length;\n                        // if text width gets over tick width, split by space index or crrent index\n                        if (maxWidth < textWidth) {\n                            return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\n                        }\n                    }\n                    return splitted.concat(text);\n                }\n\n                return split(splitted, tickText + \"\");\n            }\n\n            function tspanDy(d, i) {\n                var dy = sizeFor1Char.h;\n                if (i === 0) {\n                    if (orient === 'left' || orient === 'right') {\n                        dy = -((counts[d.index] - 1) * (sizeFor1Char.h / 2) - 3);\n                    } else {\n                        dy = \".71em\";\n                    }\n                }\n                return dy;\n            }\n\n            function tickSize(d) {\n                var tickPosition = scale(d) + (tickCentered ? 0 : tickOffset);\n                return range[0] < tickPosition && tickPosition < range[1] ? innerTickSize : 0;\n            }\n\n            text = tick.select(\"text\");\n            tspan = text.selectAll('tspan').data(function (d, i) {\n                var splitted = params.tickMultiline ? splitTickText(d, params.tickWidth) : [].concat(textFormatted(d));\n                counts[i] = splitted.length;\n                return splitted.map(function (s) {\n                    return { index: i, splitted: s };\n                });\n            });\n            tspan.enter().append('tspan');\n            tspan.exit().remove();\n            tspan.text(function (d) {\n                return d.splitted;\n            });\n\n            var rotate = params.tickTextRotate;\n\n            function textAnchorForText(rotate) {\n                if (!rotate) {\n                    return 'middle';\n                }\n                return rotate > 0 ? \"start\" : \"end\";\n            }\n            function textTransform(rotate) {\n                if (!rotate) {\n                    return '';\n                }\n                return \"rotate(\" + rotate + \")\";\n            }\n            function dxForText(rotate) {\n                if (!rotate) {\n                    return 0;\n                }\n                return 8 * Math.sin(Math.PI * (rotate / 180));\n            }\n            function yForText(rotate) {\n                if (!rotate) {\n                    return tickLength;\n                }\n                return 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1);\n            }\n\n            switch (orient) {\n                case \"bottom\":\n                    {\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", innerTickSize);\n                        textEnter.attr(\"y\", tickLength);\n                        lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", tickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", yForText(rotate)).style(\"text-anchor\", textAnchorForText(rotate)).attr(\"transform\", textTransform(rotate));\n                        tspan.attr('x', 0).attr(\"dy\", tspanDy).attr('dx', dxForText(rotate));\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n                        break;\n                    }\n                case \"top\":\n                    {\n                        // TODO: rotated tick text\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", -innerTickSize);\n                        textEnter.attr(\"y\", -tickLength);\n                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", -tickLength);\n                        text.style(\"text-anchor\", \"middle\");\n                        tspan.attr('x', 0).attr(\"dy\", \"0em\");\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n                        break;\n                    }\n                case \"left\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", -innerTickSize);\n                        textEnter.attr(\"x\", -tickLength);\n                        lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                        textUpdate.attr(\"x\", -tickLength).attr(\"y\", tickOffset);\n                        text.style(\"text-anchor\", \"end\");\n                        tspan.attr('x', -tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n                        break;\n                    }\n                case \"right\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", innerTickSize);\n                        textEnter.attr(\"x\", tickLength);\n                        lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n                        textUpdate.attr(\"x\", tickLength).attr(\"y\", 0);\n                        text.style(\"text-anchor\", \"start\");\n                        tspan.attr('x', tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n                        break;\n                    }\n            }\n            if (scale1.rangeBand) {\n                var x = scale1,\n                    dx = x.rangeBand() / 2;\n                scale0 = scale1 = function scale1(d) {\n                    return x(d) + dx;\n                };\n            } else if (scale0.rangeBand) {\n                scale0 = scale1;\n            } else {\n                tickExit.call(tickTransform, scale1);\n            }\n            tickEnter.call(tickTransform, scale0);\n            tickUpdate.call(tickTransform, scale1);\n        });\n    }\n    axis.scale = function (x) {\n        if (!arguments.length) {\n            return scale;\n        }\n        scale = x;\n        return axis;\n    };\n    axis.orient = function (x) {\n        if (!arguments.length) {\n            return orient;\n        }\n        orient = x in { top: 1, right: 1, bottom: 1, left: 1 } ? x + \"\" : \"bottom\";\n        return axis;\n    };\n    axis.tickFormat = function (format) {\n        if (!arguments.length) {\n            return tickFormat;\n        }\n        tickFormat = format;\n        return axis;\n    };\n    axis.tickCentered = function (isCentered) {\n        if (!arguments.length) {\n            return tickCentered;\n        }\n        tickCentered = isCentered;\n        return axis;\n    };\n    axis.tickOffset = function () {\n        return tickOffset;\n    };\n    axis.tickInterval = function () {\n        var interval, length;\n        if (params.isCategory) {\n            interval = tickOffset * 2;\n        } else {\n            length = axis.g.select('path.domain').node().getTotalLength() - outerTickSize * 2;\n            interval = length / axis.g.selectAll('line').size();\n        }\n        return interval === Infinity ? 0 : interval;\n    };\n    axis.ticks = function () {\n        if (!arguments.length) {\n            return tickArguments;\n        }\n        tickArguments = arguments;\n        return axis;\n    };\n    axis.tickCulling = function (culling) {\n        if (!arguments.length) {\n            return tickCulling;\n        }\n        tickCulling = culling;\n        return axis;\n    };\n    axis.tickValues = function (x) {\n        if (typeof x === 'function') {\n            tickValues = function tickValues() {\n                return x(scale.domain());\n            };\n        } else {\n            if (!arguments.length) {\n                return tickValues;\n            }\n            tickValues = x;\n        }\n        return axis;\n    };\n    return axis;\n}\n\nfunction Axis(owner) {\n    API.call(this, owner);\n}\n\ninherit(API, Axis);\n\nAxis.prototype.init = function init() {\n\n    var $$ = this.owner,\n        config = $$.config,\n        main = $$.main;\n    $$.axes.x = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisX).attr(\"clip-path\", $$.clipPathForXAxis).attr(\"transform\", $$.getTranslate('x')).style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n    $$.axes.x.append(\"text\").attr(\"class\", CLASS.axisXLabel).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n    $$.axes.y = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY).attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis).attr(\"transform\", $$.getTranslate('y')).style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n    $$.axes.y.append(\"text\").attr(\"class\", CLASS.axisYLabel).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n    $$.axes.y2 = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2\n    // clip-path?\n    ).attr(\"transform\", $$.getTranslate('y2')).style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n    $$.axes.y2.append(\"text\").attr(\"class\", CLASS.axisY2Label).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n};\nAxis.prototype.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n    var $$ = this.owner,\n        config = $$.config,\n        axisParams = {\n        isCategory: $$.isCategorized(),\n        withOuterTick: withOuterTick,\n        tickMultiline: config.axis_x_tick_multiline,\n        tickWidth: config.axis_x_tick_width,\n        tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n        withoutTransition: withoutTransition\n    },\n        axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient);\n\n    if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n        tickValues = tickValues.map(function (v) {\n            return $$.parseDate(v);\n        });\n    }\n\n    // Set tick\n    axis.tickFormat(tickFormat).tickValues(tickValues);\n    if ($$.isCategorized()) {\n        axis.tickCentered(config.axis_x_tick_centered);\n        if (isEmpty(config.axis_x_tick_culling)) {\n            config.axis_x_tick_culling = false;\n        }\n    }\n\n    return axis;\n};\nAxis.prototype.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n    var $$ = this.owner,\n        config = $$.config,\n        tickValues;\n    if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n        tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n    }\n    if (axis) {\n        axis.tickValues(tickValues);\n    } else {\n        $$.xAxis.tickValues(tickValues);\n        $$.subXAxis.tickValues(tickValues);\n    }\n    return tickValues;\n};\nAxis.prototype.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n    var $$ = this.owner,\n        config = $$.config,\n        axisParams = {\n        withOuterTick: withOuterTick,\n        withoutTransition: withoutTransition,\n        tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n    },\n        axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient).tickFormat(tickFormat);\n    if ($$.isTimeSeriesY()) {\n        axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n    } else {\n        axis.tickValues(tickValues);\n    }\n    return axis;\n};\nAxis.prototype.getId = function getId(id) {\n    var config = this.owner.config;\n    return id in config.data_axes ? config.data_axes[id] : 'y';\n};\nAxis.prototype.getXAxisTickFormat = function getXAxisTickFormat() {\n    var $$ = this.owner,\n        config = $$.config,\n        format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {\n        return v < 0 ? v.toFixed(0) : v;\n    };\n    if (config.axis_x_tick_format) {\n        if (isFunction(config.axis_x_tick_format)) {\n            format = config.axis_x_tick_format;\n        } else if ($$.isTimeSeries()) {\n            format = function format(date) {\n                return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n            };\n        }\n    }\n    return isFunction(format) ? function (v) {\n        return format.call($$, v);\n    } : format;\n};\nAxis.prototype.getTickValues = function getTickValues(tickValues, axis) {\n    return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n};\nAxis.prototype.getXAxisTickValues = function getXAxisTickValues() {\n    return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n};\nAxis.prototype.getYAxisTickValues = function getYAxisTickValues() {\n    return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n};\nAxis.prototype.getY2AxisTickValues = function getY2AxisTickValues() {\n    return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n};\nAxis.prototype.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n    var $$ = this.owner,\n        config = $$.config,\n        option;\n    if (axisId === 'y') {\n        option = config.axis_y_label;\n    } else if (axisId === 'y2') {\n        option = config.axis_y2_label;\n    } else if (axisId === 'x') {\n        option = config.axis_x_label;\n    }\n    return option;\n};\nAxis.prototype.getLabelText = function getLabelText(axisId) {\n    var option = this.getLabelOptionByAxisId(axisId);\n    return isString(option) ? option : option ? option.text : null;\n};\nAxis.prototype.setLabelText = function setLabelText(axisId, text) {\n    var $$ = this.owner,\n        config = $$.config,\n        option = this.getLabelOptionByAxisId(axisId);\n    if (isString(option)) {\n        if (axisId === 'y') {\n            config.axis_y_label = text;\n        } else if (axisId === 'y2') {\n            config.axis_y2_label = text;\n        } else if (axisId === 'x') {\n            config.axis_x_label = text;\n        }\n    } else if (option) {\n        option.text = text;\n    }\n};\nAxis.prototype.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n    var option = this.getLabelOptionByAxisId(axisId),\n        position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;\n    return {\n        isInner: position.indexOf('inner') >= 0,\n        isOuter: position.indexOf('outer') >= 0,\n        isLeft: position.indexOf('left') >= 0,\n        isCenter: position.indexOf('center') >= 0,\n        isRight: position.indexOf('right') >= 0,\n        isTop: position.indexOf('top') >= 0,\n        isMiddle: position.indexOf('middle') >= 0,\n        isBottom: position.indexOf('bottom') >= 0\n    };\n};\nAxis.prototype.getXAxisLabelPosition = function getXAxisLabelPosition() {\n    return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n};\nAxis.prototype.getYAxisLabelPosition = function getYAxisLabelPosition() {\n    return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n};\nAxis.prototype.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n    return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n};\nAxis.prototype.getLabelPositionById = function getLabelPositionById(id) {\n    return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n};\nAxis.prototype.textForXAxisLabel = function textForXAxisLabel() {\n    return this.getLabelText('x');\n};\nAxis.prototype.textForYAxisLabel = function textForYAxisLabel() {\n    return this.getLabelText('y');\n};\nAxis.prototype.textForY2AxisLabel = function textForY2AxisLabel() {\n    return this.getLabelText('y2');\n};\nAxis.prototype.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n    var $$ = this.owner;\n    if (forHorizontal) {\n        return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n    } else {\n        return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n    }\n};\nAxis.prototype.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n    if (forHorizontal) {\n        return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n    } else {\n        return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n    }\n};\nAxis.prototype.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n    if (forHorizontal) {\n        return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n    } else {\n        return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n    }\n};\nAxis.prototype.xForXAxisLabel = function xForXAxisLabel() {\n    return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n};\nAxis.prototype.xForYAxisLabel = function xForYAxisLabel() {\n    return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n};\nAxis.prototype.xForY2AxisLabel = function xForY2AxisLabel() {\n    return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n};\nAxis.prototype.dxForXAxisLabel = function dxForXAxisLabel() {\n    return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n};\nAxis.prototype.dxForYAxisLabel = function dxForYAxisLabel() {\n    return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n};\nAxis.prototype.dxForY2AxisLabel = function dxForY2AxisLabel() {\n    return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n};\nAxis.prototype.dyForXAxisLabel = function dyForXAxisLabel() {\n    var $$ = this.owner,\n        config = $$.config,\n        position = this.getXAxisLabelPosition();\n    if (config.axis_rotated) {\n        return position.isInner ? \"1.2em\" : -25 - this.getMaxTickWidth('x');\n    } else {\n        return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n    }\n};\nAxis.prototype.dyForYAxisLabel = function dyForYAxisLabel() {\n    var $$ = this.owner,\n        position = this.getYAxisLabelPosition();\n    if ($$.config.axis_rotated) {\n        return position.isInner ? \"-0.5em\" : \"3em\";\n    } else {\n        return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\n    }\n};\nAxis.prototype.dyForY2AxisLabel = function dyForY2AxisLabel() {\n    var $$ = this.owner,\n        position = this.getY2AxisLabelPosition();\n    if ($$.config.axis_rotated) {\n        return position.isInner ? \"1.2em\" : \"-2.2em\";\n    } else {\n        return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\n    }\n};\nAxis.prototype.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n    var $$ = this.owner;\n    return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n};\nAxis.prototype.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n    var $$ = this.owner;\n    return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n};\nAxis.prototype.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n    var $$ = this.owner;\n    return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n};\nAxis.prototype.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n    var $$ = this.owner,\n        config = $$.config,\n        maxWidth = 0,\n        targetsToShow,\n        scale,\n        axis,\n        dummy,\n        svg;\n    if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n        return $$.currentMaxTickWidths[id];\n    }\n    if ($$.svg) {\n        targetsToShow = $$.filterTargetsToShow($$.data.targets);\n        if (id === 'y') {\n            scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n            axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n        } else if (id === 'y2') {\n            scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n            axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n        } else {\n            scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n            axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n            this.updateXAxisTickValues(targetsToShow, axis);\n        }\n        dummy = $$.d3.select('body').append('div').classed('c3', true);\n        svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {\n            $$.d3.select(this).selectAll('text').each(function () {\n                var box = this.getBoundingClientRect();\n                if (maxWidth < box.width) {\n                    maxWidth = box.width;\n                }\n            });\n            dummy.remove();\n        });\n    }\n    $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n    return $$.currentMaxTickWidths[id];\n};\n\nAxis.prototype.updateLabels = function updateLabels(withTransition) {\n    var $$ = this.owner;\n    var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n        axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n        axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n    (withTransition ? axisXLabel.transition() : axisXLabel).attr(\"x\", this.xForXAxisLabel.bind(this)).attr(\"dx\", this.dxForXAxisLabel.bind(this)).attr(\"dy\", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));\n    (withTransition ? axisYLabel.transition() : axisYLabel).attr(\"x\", this.xForYAxisLabel.bind(this)).attr(\"dx\", this.dxForYAxisLabel.bind(this)).attr(\"dy\", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));\n    (withTransition ? axisY2Label.transition() : axisY2Label).attr(\"x\", this.xForY2AxisLabel.bind(this)).attr(\"dx\", this.dxForY2AxisLabel.bind(this)).attr(\"dy\", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));\n};\nAxis.prototype.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n    var p = typeof padding === 'number' ? padding : padding[key];\n    if (!isValue(p)) {\n        return defaultValue;\n    }\n    if (padding.unit === 'ratio') {\n        return padding[key] * domainLength;\n    }\n    // assume padding is pixels if unit is not specified\n    return this.convertPixelsToAxisPadding(p, domainLength);\n};\nAxis.prototype.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n    var $$ = this.owner,\n        length = $$.config.axis_rotated ? $$.width : $$.height;\n    return domainLength * (pixels / length);\n};\nAxis.prototype.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n    var tickValues = values,\n        targetCount,\n        start,\n        end,\n        count,\n        interval,\n        i,\n        tickValue;\n    if (tickCount) {\n        targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n        // compute ticks according to tickCount\n        if (targetCount === 1) {\n            tickValues = [values[0]];\n        } else if (targetCount === 2) {\n            tickValues = [values[0], values[values.length - 1]];\n        } else if (targetCount > 2) {\n            count = targetCount - 2;\n            start = values[0];\n            end = values[values.length - 1];\n            interval = (end - start) / (count + 1);\n            // re-construct unique values\n            tickValues = [start];\n            for (i = 0; i < count; i++) {\n                tickValue = +start + interval * (i + 1);\n                tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n            }\n            tickValues.push(end);\n        }\n    }\n    if (!forTimeSeries) {\n        tickValues = tickValues.sort(function (a, b) {\n            return a - b;\n        });\n    }\n    return tickValues;\n};\nAxis.prototype.generateTransitions = function generateTransitions(duration) {\n    var $$ = this.owner,\n        axes = $$.axes;\n    return {\n        axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n        axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n        axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n        axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n    };\n};\nAxis.prototype.redraw = function redraw(transitions, isHidden) {\n    var $$ = this.owner;\n    $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n    $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n    $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n    $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n    transitions.axisX.call($$.xAxis);\n    transitions.axisY.call($$.yAxis);\n    transitions.axisY2.call($$.y2Axis);\n    transitions.axisSubX.call($$.subXAxis);\n};\n\nvar c3$1 = { version: \"0.4.15\" };\n\nvar c3_chart_fn;\nvar c3_chart_internal_fn;\nvar c3_chart_internal_axis_fn;\n\nfunction API(owner) {\n    this.owner = owner;\n}\n\nfunction inherit(base, derived) {\n\n    if (Object.create) {\n        derived.prototype = Object.create(base.prototype);\n    } else {\n        var f = function f() {};\n        f.prototype = base.prototype;\n        derived.prototype = new f();\n    }\n\n    derived.prototype.constructor = derived;\n\n    return derived;\n}\n\nfunction Chart(config) {\n    var $$ = this.internal = new ChartInternal(this);\n    $$.loadConfig(config);\n\n    $$.beforeInit(config);\n    $$.init();\n    $$.afterInit(config);\n\n    // bind \"this\" to nested API\n    (function bindThis(fn, target, argThis) {\n        Object.keys(fn).forEach(function (key) {\n            target[key] = fn[key].bind(argThis);\n            if (Object.keys(fn[key]).length > 0) {\n                bindThis(fn[key], target[key], argThis);\n            }\n        });\n    })(c3_chart_fn, this, this);\n}\n\nfunction ChartInternal(api) {\n    var $$ = this;\n    $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\n    $$.api = api;\n    $$.config = $$.getDefaultConfig();\n    $$.data = {};\n    $$.cache = {};\n    $$.axes = {};\n}\n\nc3$1.generate = function (config) {\n    return new Chart(config);\n};\n\nc3$1.chart = {\n    fn: Chart.prototype,\n    internal: {\n        fn: ChartInternal.prototype,\n        axis: {\n            fn: Axis.prototype\n        }\n    }\n};\nc3_chart_fn = c3$1.chart.fn;\nc3_chart_internal_fn = c3$1.chart.internal.fn;\nc3_chart_internal_axis_fn = c3$1.chart.internal.axis.fn;\n\nc3_chart_internal_fn.beforeInit = function () {\n    // can do something\n};\nc3_chart_internal_fn.afterInit = function () {\n    // can do something\n};\nc3_chart_internal_fn.init = function () {\n    var $$ = this,\n        config = $$.config;\n\n    $$.initParams();\n\n    if (config.data_url) {\n        $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n    } else if (config.data_json) {\n        $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n    } else if (config.data_rows) {\n        $$.initWithData($$.convertRowsToData(config.data_rows));\n    } else if (config.data_columns) {\n        $$.initWithData($$.convertColumnsToData(config.data_columns));\n    } else {\n        throw Error('url or json or rows or columns is required.');\n    }\n};\n\nc3_chart_internal_fn.initParams = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n\n    // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n    $$.clipId = \"c3-\" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n    $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;\n    $$.dragging = false;\n    $$.flowing = false;\n    $$.cancelClick = false;\n    $$.mouseover = false;\n    $$.transiting = false;\n\n    $$.color = $$.generateColor();\n    $$.levelColor = $$.generateLevelColor();\n\n    $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n    $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n    $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([[\".%L\", function (d) {\n        return d.getMilliseconds();\n    }], [\":%S\", function (d) {\n        return d.getSeconds();\n    }], [\"%I:%M\", function (d) {\n        return d.getMinutes();\n    }], [\"%I %p\", function (d) {\n        return d.getHours();\n    }], [\"%-m/%-d\", function (d) {\n        return d.getDay() && d.getDate() !== 1;\n    }], [\"%-m/%-d\", function (d) {\n        return d.getDate() !== 1;\n    }], [\"%-m/%-d\", function (d) {\n        return d.getMonth();\n    }], [\"%Y/%-m/%-d\", function () {\n        return true;\n    }]]);\n\n    $$.hiddenTargetIds = [];\n    $$.hiddenLegendIds = [];\n    $$.focusedTargetIds = [];\n    $$.defocusedTargetIds = [];\n\n    $$.xOrient = config.axis_rotated ? \"left\" : \"bottom\";\n    $$.yOrient = config.axis_rotated ? config.axis_y_inner ? \"top\" : \"bottom\" : config.axis_y_inner ? \"right\" : \"left\";\n    $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? \"bottom\" : \"top\" : config.axis_y2_inner ? \"left\" : \"right\";\n    $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n    $$.isLegendRight = config.legend_position === 'right';\n    $$.isLegendInset = config.legend_position === 'inset';\n    $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n    $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n    $$.legendStep = 0;\n    $$.legendItemWidth = 0;\n    $$.legendItemHeight = 0;\n\n    $$.currentMaxTickWidths = {\n        x: 0,\n        y: 0,\n        y2: 0\n    };\n\n    $$.rotated_padding_left = 30;\n    $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n    $$.rotated_padding_top = 5;\n\n    $$.withoutFadeIn = {};\n\n    $$.intervalForObserveInserted = undefined;\n\n    $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n};\n\nc3_chart_internal_fn.initChartElements = function () {\n    if (this.initBar) {\n        this.initBar();\n    }\n    if (this.initLine) {\n        this.initLine();\n    }\n    if (this.initArc) {\n        this.initArc();\n    }\n    if (this.initGauge) {\n        this.initGauge();\n    }\n    if (this.initText) {\n        this.initText();\n    }\n};\n\nc3_chart_internal_fn.initWithData = function (data) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n    var defs,\n        main,\n        binding = true;\n\n    $$.axis = new Axis($$);\n\n    if ($$.initPie) {\n        $$.initPie();\n    }\n    if ($$.initBrush) {\n        $$.initBrush();\n    }\n    if ($$.initZoom) {\n        $$.initZoom();\n    }\n\n    if (!config.bindto) {\n        $$.selectChart = d3.selectAll([]);\n    } else if (typeof config.bindto.node === 'function') {\n        $$.selectChart = config.bindto;\n    } else {\n        $$.selectChart = d3.select(config.bindto);\n    }\n    if ($$.selectChart.empty()) {\n        $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n        $$.observeInserted($$.selectChart);\n        binding = false;\n    }\n    $$.selectChart.html(\"\").classed(\"c3\", true);\n\n    // Init data as targets\n    $$.data.xs = {};\n    $$.data.targets = $$.convertDataToTargets(data);\n\n    if (config.data_filter) {\n        $$.data.targets = $$.data.targets.filter(config.data_filter);\n    }\n\n    // Set targets to hide if needed\n    if (config.data_hide) {\n        $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n    }\n    if (config.legend_hide) {\n        $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n    }\n\n    // when gauge, hide legend // TODO: fix\n    if ($$.hasType('gauge')) {\n        config.legend_show = false;\n    }\n\n    // Init sizes and scales\n    $$.updateSizes();\n    $$.updateScales();\n\n    // Set domains for each scale\n    $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n    $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n    $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n    $$.subX.domain($$.x.domain());\n    $$.subY.domain($$.y.domain());\n    $$.subY2.domain($$.y2.domain());\n\n    // Save original x domain for zoom update\n    $$.orgXDomain = $$.x.domain();\n\n    // Set initialized scales to brush and zoom\n    if ($$.brush) {\n        $$.brush.scale($$.subX);\n    }\n    if (config.zoom_enabled) {\n        $$.zoom.scale($$.x);\n    }\n\n    /*-- Basic Elements --*/\n\n    // Define svgs\n    $$.svg = $$.selectChart.append(\"svg\").style(\"overflow\", \"hidden\").on('mouseenter', function () {\n        return config.onmouseover.call($$);\n    }).on('mouseleave', function () {\n        return config.onmouseout.call($$);\n    });\n\n    if ($$.config.svg_classname) {\n        $$.svg.attr('class', $$.config.svg_classname);\n    }\n\n    // Define defs\n    defs = $$.svg.append(\"defs\");\n    $$.clipChart = $$.appendClip(defs, $$.clipId);\n    $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n    $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n    $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n    $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n    $$.updateSvgSize();\n\n    // Define regions\n    main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n    if ($$.initSubchart) {\n        $$.initSubchart();\n    }\n    if ($$.initTooltip) {\n        $$.initTooltip();\n    }\n    if ($$.initLegend) {\n        $$.initLegend();\n    }\n    if ($$.initTitle) {\n        $$.initTitle();\n    }\n\n    /*-- Main Region --*/\n\n    // text when empty\n    main.append(\"text\").attr(\"class\", CLASS.text + ' ' + CLASS.empty).attr(\"text-anchor\", \"middle\" // horizontal centering of text at x position in all browsers.\n    ).attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n    // Regions\n    $$.initRegion();\n\n    // Grids\n    $$.initGrid();\n\n    // Define g for chart area\n    main.append('g').attr(\"clip-path\", $$.clipPath).attr('class', CLASS.chart);\n\n    // Grid lines\n    if (config.grid_lines_front) {\n        $$.initGridLines();\n    }\n\n    // Cover whole with rects for events\n    $$.initEventRect();\n\n    // Define g for chart\n    $$.initChartElements();\n\n    // if zoom privileged, insert rect to forefront\n    // TODO: is this needed?\n    main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions).attr('class', CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height).style('opacity', 0).on(\"dblclick.zoom\", null);\n\n    // Set default extent if defined\n    if (config.axis_x_extent) {\n        $$.brush.extent($$.getDefaultExtent());\n    }\n\n    // Add Axis\n    $$.axis.init();\n\n    // Set targets\n    $$.updateTargets($$.data.targets);\n\n    // Draw with targets\n    if (binding) {\n        $$.updateDimension();\n        $$.config.oninit.call($$);\n        $$.redraw({\n            withTransition: false,\n            withTransform: true,\n            withUpdateXDomain: true,\n            withUpdateOrgXDomain: true,\n            withTransitionForAxis: false\n        });\n    }\n\n    // Bind resize event\n    $$.bindResize();\n\n    // export element of the chart\n    $$.api.element = $$.selectChart.node();\n};\n\nc3_chart_internal_fn.smoothLines = function (el, type) {\n    var $$ = this;\n    if (type === 'grid') {\n        el.each(function () {\n            var g = $$.d3.select(this),\n                x1 = g.attr('x1'),\n                x2 = g.attr('x2'),\n                y1 = g.attr('y1'),\n                y2 = g.attr('y2');\n            g.attr({\n                'x1': Math.ceil(x1),\n                'x2': Math.ceil(x2),\n                'y1': Math.ceil(y1),\n                'y2': Math.ceil(y2)\n            });\n        });\n    }\n};\n\nc3_chart_internal_fn.updateSizes = function () {\n    var $$ = this,\n        config = $$.config;\n    var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n        legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n        legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n        hasArc = $$.hasArcType(),\n        xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n        subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;\n\n    $$.currentWidth = $$.getCurrentWidth();\n    $$.currentHeight = $$.getCurrentHeight();\n\n    // for main\n    $$.margin = config.axis_rotated ? {\n        top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n        right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n        bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n        left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n    } : {\n        top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n        right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n        bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n        left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n    };\n\n    // for subchart\n    $$.margin2 = config.axis_rotated ? {\n        top: $$.margin.top,\n        right: NaN,\n        bottom: 20 + legendHeightForBottom,\n        left: $$.rotated_padding_left\n    } : {\n        top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n        right: NaN,\n        bottom: xAxisHeight + legendHeightForBottom,\n        left: $$.margin.left\n    };\n\n    // for legend\n    $$.margin3 = {\n        top: 0,\n        right: NaN,\n        bottom: 0,\n        left: 0\n    };\n    if ($$.updateSizeForLegend) {\n        $$.updateSizeForLegend(legendHeight, legendWidth);\n    }\n\n    $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n    $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n    if ($$.width < 0) {\n        $$.width = 0;\n    }\n    if ($$.height < 0) {\n        $$.height = 0;\n    }\n\n    $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n    $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n    if ($$.width2 < 0) {\n        $$.width2 = 0;\n    }\n    if ($$.height2 < 0) {\n        $$.height2 = 0;\n    }\n\n    // for arc\n    $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n    $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n    if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n        $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n    }\n    if ($$.updateRadius) {\n        $$.updateRadius();\n    }\n\n    if ($$.isLegendRight && hasArc) {\n        $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n    }\n};\n\nc3_chart_internal_fn.updateTargets = function (targets) {\n    var $$ = this;\n\n    /*-- Main --*/\n\n    //-- Text --//\n    $$.updateTargetsForText(targets);\n\n    //-- Bar --//\n    $$.updateTargetsForBar(targets);\n\n    //-- Line --//\n    $$.updateTargetsForLine(targets);\n\n    //-- Arc --//\n    if ($$.hasArcType() && $$.updateTargetsForArc) {\n        $$.updateTargetsForArc(targets);\n    }\n\n    /*-- Sub --*/\n\n    if ($$.updateTargetsForSubchart) {\n        $$.updateTargetsForSubchart(targets);\n    }\n\n    // Fade-in each chart\n    $$.showTargets();\n};\nc3_chart_internal_fn.showTargets = function () {\n    var $$ = this;\n    $$.svg.selectAll('.' + CLASS.target).filter(function (d) {\n        return $$.isTargetToShow(d.id);\n    }).transition().duration($$.config.transition_duration).style(\"opacity\", 1);\n};\n\nc3_chart_internal_fn.redraw = function (options, transitions) {\n    var $$ = this,\n        main = $$.main,\n        d3 = $$.d3,\n        config = $$.config;\n    var areaIndices = $$.getShapeIndices($$.isAreaType),\n        barIndices = $$.getShapeIndices($$.isBarType),\n        lineIndices = $$.getShapeIndices($$.isLineType);\n    var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\n    var hideAxis = $$.hasArcType();\n    var drawArea, drawBar, drawLine, xForText, yForText;\n    var duration, durationForExit, durationForAxis;\n    var waitForDraw, flow;\n    var targetsToShow = $$.filterTargetsToShow($$.data.targets),\n        tickValues,\n        i,\n        intervalForCulling,\n        xDomainForZoom;\n    var xv = $$.xv.bind($$),\n        cx,\n        cy;\n\n    options = options || {};\n    withY = getOption(options, \"withY\", true);\n    withSubchart = getOption(options, \"withSubchart\", true);\n    withTransition = getOption(options, \"withTransition\", true);\n    withTransform = getOption(options, \"withTransform\", false);\n    withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n    withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n    withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n    withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n    withLegend = getOption(options, \"withLegend\", false);\n    withEventRect = getOption(options, \"withEventRect\", true);\n    withDimension = getOption(options, \"withDimension\", true);\n    withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n    withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n    duration = withTransition ? config.transition_duration : 0;\n    durationForExit = withTransitionForExit ? duration : 0;\n    durationForAxis = withTransitionForAxis ? duration : 0;\n\n    transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n    // update legend and transform each g\n    if (withLegend && config.legend_show) {\n        $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n    } else if (withDimension) {\n        // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n        // no need to update axis in it because they will be updated in redraw()\n        $$.updateDimension(true);\n    }\n\n    // MEMO: needed for grids calculation\n    if ($$.isCategorized() && targetsToShow.length === 0) {\n        $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n    }\n\n    if (targetsToShow.length) {\n        $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n        if (!config.axis_x_tick_values) {\n            tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n        }\n    } else {\n        $$.xAxis.tickValues([]);\n        $$.subXAxis.tickValues([]);\n    }\n\n    if (config.zoom_rescale && !options.flow) {\n        xDomainForZoom = $$.x.orgDomain();\n    }\n\n    $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n    $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n    if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n        $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n    }\n    if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n        $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n    }\n\n    // axes\n    $$.axis.redraw(transitions, hideAxis);\n\n    // Update axis label\n    $$.axis.updateLabels(withTransition);\n\n    // show/hide if manual culling needed\n    if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n        if (config.axis_x_tick_culling && tickValues) {\n            for (i = 1; i < tickValues.length; i++) {\n                if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                    intervalForCulling = i;\n                    break;\n                }\n            }\n            $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                var index = tickValues.indexOf(e);\n                if (index >= 0) {\n                    d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                }\n            });\n        } else {\n            $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n        }\n    }\n\n    // setup drawer - MEMO: these must be called after axis updated\n    drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n    drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n    drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n    xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n    yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n    // Update sub domain\n    if (withY) {\n        $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n        $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n    }\n\n    // xgrid focus\n    $$.updateXgridFocus();\n\n    // Data empty label positioning and text.\n    main.select(\"text.\" + CLASS.text + '.' + CLASS.empty).attr(\"x\", $$.width / 2).attr(\"y\", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1);\n\n    // grid\n    $$.updateGrid(duration);\n\n    // rect for regions\n    $$.updateRegion(duration);\n\n    // bars\n    $$.updateBar(durationForExit);\n\n    // lines, areas and cricles\n    $$.updateLine(durationForExit);\n    $$.updateArea(durationForExit);\n    $$.updateCircle();\n\n    // text\n    if ($$.hasDataLabel()) {\n        $$.updateText(durationForExit);\n    }\n\n    // title\n    if ($$.redrawTitle) {\n        $$.redrawTitle();\n    }\n\n    // arc\n    if ($$.redrawArc) {\n        $$.redrawArc(duration, durationForExit, withTransform);\n    }\n\n    // subchart\n    if ($$.redrawSubchart) {\n        $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n    }\n\n    // circles for select\n    main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove();\n\n    // event rects will redrawn when flow called\n    if (config.interaction_enabled && !options.flow && withEventRect) {\n        $$.redrawEventRect();\n        if ($$.updateZoom) {\n            $$.updateZoom();\n        }\n    }\n\n    // update circleY based on updated parameters\n    $$.updateCircleY();\n\n    // generate circle x/y functions depending on updated params\n    cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n    cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n    if (options.flow) {\n        flow = $$.generateFlow({\n            targets: targetsToShow,\n            flow: options.flow,\n            duration: options.flow.duration,\n            drawBar: drawBar,\n            drawLine: drawLine,\n            drawArea: drawArea,\n            cx: cx,\n            cy: cy,\n            xv: xv,\n            xForText: xForText,\n            yForText: yForText\n        });\n    }\n\n    if ((duration || flow) && $$.isTabVisible()) {\n        // Only use transition if tab visible. See #938.\n        // transition should be derived from one transition\n        d3.transition().duration(duration).each(function () {\n            var transitionsToWait = [];\n\n            // redraw and gather transitions\n            [$$.redrawBar(drawBar, true), $$.redrawLine(drawLine, true), $$.redrawArea(drawArea, true), $$.redrawCircle(cx, cy, true), $$.redrawText(xForText, yForText, options.flow, true), $$.redrawRegion(true), $$.redrawGrid(true)].forEach(function (transitions) {\n                transitions.forEach(function (transition) {\n                    transitionsToWait.push(transition);\n                });\n            });\n\n            // Wait for end of transitions to call flow and onrendered callback\n            waitForDraw = $$.generateWait();\n            transitionsToWait.forEach(function (t) {\n                waitForDraw.add(t);\n            });\n        }).call(waitForDraw, function () {\n            if (flow) {\n                flow();\n            }\n            if (config.onrendered) {\n                config.onrendered.call($$);\n            }\n        });\n    } else {\n        $$.redrawBar(drawBar);\n        $$.redrawLine(drawLine);\n        $$.redrawArea(drawArea);\n        $$.redrawCircle(cx, cy);\n        $$.redrawText(xForText, yForText, options.flow);\n        $$.redrawRegion();\n        $$.redrawGrid();\n        if (config.onrendered) {\n            config.onrendered.call($$);\n        }\n    }\n\n    // update fadein condition\n    $$.mapToIds($$.data.targets).forEach(function (id) {\n        $$.withoutFadeIn[id] = true;\n    });\n};\n\nc3_chart_internal_fn.updateAndRedraw = function (options) {\n    var $$ = this,\n        config = $$.config,\n        transitions;\n    options = options || {};\n    // same with redraw\n    options.withTransition = getOption(options, \"withTransition\", true);\n    options.withTransform = getOption(options, \"withTransform\", false);\n    options.withLegend = getOption(options, \"withLegend\", false);\n    // NOT same with redraw\n    options.withUpdateXDomain = true;\n    options.withUpdateOrgXDomain = true;\n    options.withTransitionForExit = false;\n    options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n    // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n    $$.updateSizes();\n    // MEMO: called in updateLegend in redraw if withLegend\n    if (!(options.withLegend && config.legend_show)) {\n        transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n        // Update scales\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(options.withTransitionForTransform, transitions);\n    }\n    // Draw with new sizes & scales\n    $$.redraw(options, transitions);\n};\nc3_chart_internal_fn.redrawWithoutRescale = function () {\n    this.redraw({\n        withY: false,\n        withSubchart: false,\n        withEventRect: false,\n        withTransitionForAxis: false\n    });\n};\n\nc3_chart_internal_fn.isTimeSeries = function () {\n    return this.config.axis_x_type === 'timeseries';\n};\nc3_chart_internal_fn.isCategorized = function () {\n    return this.config.axis_x_type.indexOf('categor') >= 0;\n};\nc3_chart_internal_fn.isCustomX = function () {\n    var $$ = this,\n        config = $$.config;\n    return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n};\n\nc3_chart_internal_fn.isTimeSeriesY = function () {\n    return this.config.axis_y_type === 'timeseries';\n};\n\nc3_chart_internal_fn.getTranslate = function (target) {\n    var $$ = this,\n        config = $$.config,\n        x,\n        y;\n    if (target === 'main') {\n        x = asHalfPixel($$.margin.left);\n        y = asHalfPixel($$.margin.top);\n    } else if (target === 'context') {\n        x = asHalfPixel($$.margin2.left);\n        y = asHalfPixel($$.margin2.top);\n    } else if (target === 'legend') {\n        x = $$.margin3.left;\n        y = $$.margin3.top;\n    } else if (target === 'x') {\n        x = 0;\n        y = config.axis_rotated ? 0 : $$.height;\n    } else if (target === 'y') {\n        x = 0;\n        y = config.axis_rotated ? $$.height : 0;\n    } else if (target === 'y2') {\n        x = config.axis_rotated ? 0 : $$.width;\n        y = config.axis_rotated ? 1 : 0;\n    } else if (target === 'subx') {\n        x = 0;\n        y = config.axis_rotated ? 0 : $$.height2;\n    } else if (target === 'arc') {\n        x = $$.arcWidth / 2;\n        y = $$.arcHeight / 2;\n    }\n    return \"translate(\" + x + \",\" + y + \")\";\n};\nc3_chart_internal_fn.initialOpacity = function (d) {\n    return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n};\nc3_chart_internal_fn.initialOpacityForCircle = function (d) {\n    return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n};\nc3_chart_internal_fn.opacityForCircle = function (d) {\n    var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;\n    var opacity = isPointShouldBeShown ? 1 : 0;\n    return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;\n};\nc3_chart_internal_fn.opacityForText = function () {\n    return this.hasDataLabel() ? 1 : 0;\n};\nc3_chart_internal_fn.xx = function (d) {\n    return d ? this.x(d.x) : null;\n};\nc3_chart_internal_fn.xv = function (d) {\n    var $$ = this,\n        value = d.value;\n    if ($$.isTimeSeries()) {\n        value = $$.parseDate(d.value);\n    } else if ($$.isCategorized() && typeof d.value === 'string') {\n        value = $$.config.axis_x_categories.indexOf(d.value);\n    }\n    return Math.ceil($$.x(value));\n};\nc3_chart_internal_fn.yv = function (d) {\n    var $$ = this,\n        yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n    return Math.ceil(yScale(d.value));\n};\nc3_chart_internal_fn.subxx = function (d) {\n    return d ? this.subX(d.x) : null;\n};\n\nc3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n    var $$ = this,\n        xAxis,\n        yAxis,\n        y2Axis;\n    if (transitions && transitions.axisX) {\n        xAxis = transitions.axisX;\n    } else {\n        xAxis = $$.main.select('.' + CLASS.axisX);\n        if (withTransition) {\n            xAxis = xAxis.transition();\n        }\n    }\n    if (transitions && transitions.axisY) {\n        yAxis = transitions.axisY;\n    } else {\n        yAxis = $$.main.select('.' + CLASS.axisY);\n        if (withTransition) {\n            yAxis = yAxis.transition();\n        }\n    }\n    if (transitions && transitions.axisY2) {\n        y2Axis = transitions.axisY2;\n    } else {\n        y2Axis = $$.main.select('.' + CLASS.axisY2);\n        if (withTransition) {\n            y2Axis = y2Axis.transition();\n        }\n    }\n    (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n    xAxis.attr(\"transform\", $$.getTranslate('x'));\n    yAxis.attr(\"transform\", $$.getTranslate('y'));\n    y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n    $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n};\nc3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n    var $$ = this;\n    $$.transformMain(withTransition, transitions);\n    if ($$.config.subchart_show) {\n        $$.transformContext(withTransition, transitions);\n    }\n    if ($$.legend) {\n        $$.transformLegend(withTransition);\n    }\n};\n\nc3_chart_internal_fn.updateSvgSize = function () {\n    var $$ = this,\n        brush = $$.svg.select(\".c3-brush .background\");\n    $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n    $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);\n    $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));\n    $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));\n    $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);\n    $$.svg.select('.' + CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height);\n    // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n    $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n};\n\nc3_chart_internal_fn.updateDimension = function (withoutAxis) {\n    var $$ = this;\n    if (!withoutAxis) {\n        if ($$.config.axis_rotated) {\n            $$.axes.x.call($$.xAxis);\n            $$.axes.subx.call($$.subXAxis);\n        } else {\n            $$.axes.y.call($$.yAxis);\n            $$.axes.y2.call($$.y2Axis);\n        }\n    }\n    $$.updateSizes();\n    $$.updateScales();\n    $$.updateSvgSize();\n    $$.transformAll(false);\n};\n\nc3_chart_internal_fn.observeInserted = function (selection) {\n    var $$ = this,\n        observer;\n    if (typeof MutationObserver === 'undefined') {\n        window.console.error(\"MutationObserver not defined.\");\n        return;\n    }\n    observer = new MutationObserver(function (mutations) {\n        mutations.forEach(function (mutation) {\n            if (mutation.type === 'childList' && mutation.previousSibling) {\n                observer.disconnect();\n                // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                $$.intervalForObserveInserted = window.setInterval(function () {\n                    // parentNode will NOT be null when completed\n                    if (selection.node().parentNode) {\n                        window.clearInterval($$.intervalForObserveInserted);\n                        $$.updateDimension();\n                        if ($$.brush) {\n                            $$.brush.update();\n                        }\n                        $$.config.oninit.call($$);\n                        $$.redraw({\n                            withTransform: true,\n                            withUpdateXDomain: true,\n                            withUpdateOrgXDomain: true,\n                            withTransition: false,\n                            withTransitionForTransform: false,\n                            withLegend: true\n                        });\n                        selection.transition().style('opacity', 1);\n                    }\n                }, 10);\n            }\n        });\n    });\n    observer.observe(selection.node(), { attributes: true, childList: true, characterData: true });\n};\n\nc3_chart_internal_fn.bindResize = function () {\n    var $$ = this,\n        config = $$.config;\n\n    $$.resizeFunction = $$.generateResize();\n\n    $$.resizeFunction.add(function () {\n        config.onresize.call($$);\n    });\n    if (config.resize_auto) {\n        $$.resizeFunction.add(function () {\n            if ($$.resizeTimeout !== undefined) {\n                window.clearTimeout($$.resizeTimeout);\n            }\n            $$.resizeTimeout = window.setTimeout(function () {\n                delete $$.resizeTimeout;\n                $$.api.flush();\n            }, 100);\n        });\n    }\n    $$.resizeFunction.add(function () {\n        config.onresized.call($$);\n    });\n\n    if (window.attachEvent) {\n        window.attachEvent('onresize', $$.resizeFunction);\n    } else if (window.addEventListener) {\n        window.addEventListener('resize', $$.resizeFunction, false);\n    } else {\n        // fallback to this, if this is a very old browser\n        var wrapper = window.onresize;\n        if (!wrapper) {\n            // create a wrapper that will call all charts\n            wrapper = $$.generateResize();\n        } else if (!wrapper.add || !wrapper.remove) {\n            // there is already a handler registered, make sure we call it too\n            wrapper = $$.generateResize();\n            wrapper.add(window.onresize);\n        }\n        // add this graph to the wrapper, we will be removed if the user calls destroy\n        wrapper.add($$.resizeFunction);\n        window.onresize = wrapper;\n    }\n};\n\nc3_chart_internal_fn.generateResize = function () {\n    var resizeFunctions = [];\n    function callResizeFunctions() {\n        resizeFunctions.forEach(function (f) {\n            f();\n        });\n    }\n    callResizeFunctions.add = function (f) {\n        resizeFunctions.push(f);\n    };\n    callResizeFunctions.remove = function (f) {\n        for (var i = 0; i < resizeFunctions.length; i++) {\n            if (resizeFunctions[i] === f) {\n                resizeFunctions.splice(i, 1);\n                break;\n            }\n        }\n    };\n    return callResizeFunctions;\n};\n\nc3_chart_internal_fn.endall = function (transition, callback) {\n    var n = 0;\n    transition.each(function () {\n        ++n;\n    }).each(\"end\", function () {\n        if (! --n) {\n            callback.apply(this, arguments);\n        }\n    });\n};\nc3_chart_internal_fn.generateWait = function () {\n    var transitionsToWait = [],\n        f = function f(transition, callback) {\n        var timer = setInterval(function () {\n            var done = 0;\n            transitionsToWait.forEach(function (t) {\n                if (t.empty()) {\n                    done += 1;\n                    return;\n                }\n                try {\n                    t.transition();\n                } catch (e) {\n                    done += 1;\n                }\n            });\n            if (done === transitionsToWait.length) {\n                clearInterval(timer);\n                if (callback) {\n                    callback();\n                }\n            }\n        }, 10);\n    };\n    f.add = function (transition) {\n        transitionsToWait.push(transition);\n    };\n    return f;\n};\n\nc3_chart_internal_fn.parseDate = function (date) {\n    var $$ = this,\n        parsedDate;\n    if (date instanceof Date) {\n        parsedDate = date;\n    } else if (typeof date === 'string') {\n        parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n    } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {\n        parsedDate = new Date(+date);\n    } else if (typeof date === 'number' && !isNaN(date)) {\n        parsedDate = new Date(+date);\n    }\n    if (!parsedDate || isNaN(+parsedDate)) {\n        window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n    }\n    return parsedDate;\n};\n\nc3_chart_internal_fn.isTabVisible = function () {\n    var hidden;\n    if (typeof document.hidden !== \"undefined\") {\n        // Opera 12.10 and Firefox 18 and later support\n        hidden = \"hidden\";\n    } else if (typeof document.mozHidden !== \"undefined\") {\n        hidden = \"mozHidden\";\n    } else if (typeof document.msHidden !== \"undefined\") {\n        hidden = \"msHidden\";\n    } else if (typeof document.webkitHidden !== \"undefined\") {\n        hidden = \"webkitHidden\";\n    }\n\n    return document[hidden] ? false : true;\n};\n\nc3_chart_internal_fn.isValue = isValue;\nc3_chart_internal_fn.isFunction = isFunction;\nc3_chart_internal_fn.isString = isString;\nc3_chart_internal_fn.isUndefined = isUndefined;\nc3_chart_internal_fn.isDefined = isDefined;\nc3_chart_internal_fn.ceil10 = ceil10;\nc3_chart_internal_fn.asHalfPixel = asHalfPixel;\nc3_chart_internal_fn.diffDomain = diffDomain;\nc3_chart_internal_fn.isEmpty = isEmpty;\nc3_chart_internal_fn.notEmpty = notEmpty;\nc3_chart_internal_fn.notEmpty = notEmpty;\nc3_chart_internal_fn.getOption = getOption;\nc3_chart_internal_fn.hasValue = hasValue;\nc3_chart_internal_fn.sanitise = sanitise;\nc3_chart_internal_fn.getPathBox = getPathBox;\nc3_chart_internal_fn.CLASS = CLASS;\n\n/* jshint ignore:start */\n\n// PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n// this polyfill to avoid the confusion.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== 'function') {\n            // closest thing possible to the ECMAScript 5\n            // internal IsCallable function\n            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function fNOP() {},\n            fBound = function fBound() {\n            return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\n// SVGPathSeg API polyfill\n// https://github.com/progers/pathseg\n//\n// This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n// SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n// changes which were implemented in Firefox 43 and Chrome 46.\n\n(function () {\n    \"use strict\";\n\n    if (!(\"SVGPathSeg\" in window)) {\n        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n        window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\n            this.pathSegType = type;\n            this.pathSegTypeAsLetter = typeAsLetter;\n            this._owningPathSegList = owningPathSegList;\n        };\n\n        window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\n\n        window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\n        window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n        window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n        window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n        window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n        window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\n        window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n        window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n        window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n        window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n        window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\n        window.SVGPathSeg.PATHSEG_ARC_REL = 11;\n        window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n        window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n        window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n        window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n        window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n        window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n        window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n        window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n        // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n        window.SVGPathSeg.prototype._segmentChanged = function () {\n            if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);\n        };\n\n        window.SVGPathSegClosePath = function (owningPathSegList) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n        };\n        window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegClosePath.prototype.toString = function () {\n            return \"[object SVGPathSegClosePath]\";\n        };\n        window.SVGPathSegClosePath.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter;\n        };\n        window.SVGPathSegClosePath.prototype.clone = function () {\n            return new window.SVGPathSegClosePath(undefined);\n        };\n\n        window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegMovetoAbs.prototype.toString = function () {\n            return \"[object SVGPathSegMovetoAbs]\";\n        };\n        window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegMovetoAbs.prototype.clone = function () {\n            return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegMovetoRel.prototype.toString = function () {\n            return \"[object SVGPathSegMovetoRel]\";\n        };\n        window.SVGPathSegMovetoRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegMovetoRel.prototype.clone = function () {\n            return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoAbs.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoAbs]\";\n        };\n        window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegLinetoAbs.prototype.clone = function () {\n            return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoRel.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoRel]\";\n        };\n        window.SVGPathSegLinetoRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegLinetoRel.prototype.clone = function () {\n            return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x1 = x1;\n            this._y1 = y1;\n            this._x2 = x2;\n            this._y2 = y2;\n        };\n        window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoCubicAbs]\";\n        };\n        window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function get() {\n                return this._x1;\n            }, set: function set(x1) {\n                this._x1 = x1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function get() {\n                return this._y1;\n            }, set: function set(y1) {\n                this._y1 = y1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function get() {\n                return this._x2;\n            }, set: function set(x2) {\n                this._x2 = x2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function get() {\n                return this._y2;\n            }, set: function set(y2) {\n                this._y2 = y2;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x1 = x1;\n            this._y1 = y1;\n            this._x2 = x2;\n            this._y2 = y2;\n        };\n        window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoCubicRel]\";\n        };\n        window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function get() {\n                return this._x1;\n            }, set: function set(x1) {\n                this._x1 = x1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function get() {\n                return this._y1;\n            }, set: function set(y1) {\n                this._y1 = y1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function get() {\n                return this._x2;\n            }, set: function set(x2) {\n                this._x2 = x2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function get() {\n                return this._y2;\n            }, set: function set(y2) {\n                this._y2 = y2;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x1 = x1;\n            this._y1 = y1;\n        };\n        window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoQuadraticAbs]\";\n        };\n        window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function get() {\n                return this._x1;\n            }, set: function set(x1) {\n                this._x1 = x1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function get() {\n                return this._y1;\n            }, set: function set(y1) {\n                this._y1 = y1;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x1 = x1;\n            this._y1 = y1;\n        };\n        window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoQuadraticRel]\";\n        };\n        window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function get() {\n                return this._x1;\n            }, set: function set(x1) {\n                this._x1 = x1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function get() {\n                return this._y1;\n            }, set: function set(y1) {\n                this._y1 = y1;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._r1 = r1;\n            this._r2 = r2;\n            this._angle = angle;\n            this._largeArcFlag = largeArcFlag;\n            this._sweepFlag = sweepFlag;\n        };\n        window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegArcAbs.prototype.toString = function () {\n            return \"[object SVGPathSegArcAbs]\";\n        };\n        window.SVGPathSegArcAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegArcAbs.prototype.clone = function () {\n            return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n        };\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", { get: function get() {\n                return this._r1;\n            }, set: function set(r1) {\n                this._r1 = r1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", { get: function get() {\n                return this._r2;\n            }, set: function set(r2) {\n                this._r2 = r2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", { get: function get() {\n                return this._angle;\n            }, set: function set(angle) {\n                this._angle = angle;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function get() {\n                return this._largeArcFlag;\n            }, set: function set(largeArcFlag) {\n                this._largeArcFlag = largeArcFlag;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function get() {\n                return this._sweepFlag;\n            }, set: function set(sweepFlag) {\n                this._sweepFlag = sweepFlag;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._r1 = r1;\n            this._r2 = r2;\n            this._angle = angle;\n            this._largeArcFlag = largeArcFlag;\n            this._sweepFlag = sweepFlag;\n        };\n        window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegArcRel.prototype.toString = function () {\n            return \"[object SVGPathSegArcRel]\";\n        };\n        window.SVGPathSegArcRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegArcRel.prototype.clone = function () {\n            return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n        };\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", { get: function get() {\n                return this._r1;\n            }, set: function set(r1) {\n                this._r1 = r1;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", { get: function get() {\n                return this._r2;\n            }, set: function set(r2) {\n                this._r2 = r2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", { get: function get() {\n                return this._angle;\n            }, set: function set(angle) {\n                this._angle = angle;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function get() {\n                return this._largeArcFlag;\n            }, set: function set(largeArcFlag) {\n                this._largeArcFlag = largeArcFlag;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function get() {\n                return this._sweepFlag;\n            }, set: function set(sweepFlag) {\n                this._sweepFlag = sweepFlag;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n            this._x = x;\n        };\n        window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoHorizontalAbs]\";\n        };\n        window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x;\n        };\n        window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\n            return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n            this._x = x;\n        };\n        window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoHorizontalRel]\";\n        };\n        window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x;\n        };\n        window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\n            return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n            this._y = y;\n        };\n        window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoVerticalAbs]\";\n        };\n        window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._y;\n        };\n        window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\n            return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n            this._y = y;\n        };\n        window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\n            return \"[object SVGPathSegLinetoVerticalRel]\";\n        };\n        window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._y;\n        };\n        window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\n            return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x2 = x2;\n            this._y2 = y2;\n        };\n        window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\n        };\n        window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function get() {\n                return this._x2;\n            }, set: function set(x2) {\n                this._x2 = x2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function get() {\n                return this._y2;\n            }, set: function set(y2) {\n                this._y2 = y2;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n            this._x2 = x2;\n            this._y2 = y2;\n        };\n        window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\n        };\n        window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function get() {\n                return this._x2;\n            }, set: function set(x2) {\n                this._x2 = x2;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function get() {\n                return this._y2;\n            }, set: function set(y2) {\n                this._y2 = y2;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\n            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n            this._x = x;\n            this._y = y;\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n        window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\n            return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\n            return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n        };\n        window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\n            return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\n        };\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function get() {\n                return this._x;\n            }, set: function set(x) {\n                this._x = x;this._segmentChanged();\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function get() {\n                return this._y;\n            }, set: function set(y) {\n                this._y = y;this._segmentChanged();\n            }, enumerable: true });\n\n        // Add createSVGPathSeg* functions to window.SVGPathElement.\n        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\n        window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\n            return new window.SVGPathSegClosePath(undefined);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\n            return new window.SVGPathSegMovetoAbs(undefined, x, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\n            return new window.SVGPathSegMovetoRel(undefined, x, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\n            return new window.SVGPathSegLinetoAbs(undefined, x, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\n            return new window.SVGPathSegLinetoRel(undefined, x, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\n            return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\n            return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\n            return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\n            return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n            return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n            return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\n            return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\n            return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\n            return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\n            return new window.SVGPathSegLinetoVerticalRel(undefined, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\n            return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\n            return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\n            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\n        };\n        window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\n            return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\n        };\n\n        if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\n            // Add getPathSegAtLength to SVGPathElement.\n            // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\n            // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\n            window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\n                if (distance === undefined || !isFinite(distance)) throw \"Invalid arguments.\";\n\n                var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\n                var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\n\n                // If the path is empty, return 0.\n                if (lastPathSegment <= 0) return 0;\n\n                do {\n                    measurementElement.pathSegList.removeItem(lastPathSegment);\n                    if (distance > measurementElement.getTotalLength()) break;\n                    lastPathSegment--;\n                } while (lastPathSegment > 0);\n                return lastPathSegment;\n            };\n        }\n    }\n\n    if (!(\"SVGPathSegList\" in window)) {\n        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n        window.SVGPathSegList = function (pathElement) {\n            this._pathElement = pathElement;\n            this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n            // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n            this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n            this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n            this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n        };\n\n        window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\n\n        Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\n            get: function get() {\n                this._checkPathSynchronizedToList();\n                return this._list.length;\n            },\n            enumerable: true\n        });\n\n        // Add the pathSegList accessors to window.SVGPathElement.\n        // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n        Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\n            get: function get() {\n                if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);\n                return this._pathSegList;\n            },\n            enumerable: true\n        });\n        // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\n        Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", { get: function get() {\n                return this.pathSegList;\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", { get: function get() {\n                return this.pathSegList;\n            }, enumerable: true });\n        Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function get() {\n                return this.pathSegList;\n            }, enumerable: true });\n\n        // Process any pending mutations to the path element and update the list as needed.\n        // This should be the first call of all public functions and is needed because\n        // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n        window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\n            this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n        };\n\n        window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\n            if (!this._pathElement) return;\n            var hasPathMutations = false;\n            mutationRecords.forEach(function (record) {\n                if (record.attributeName == \"d\") hasPathMutations = true;\n            });\n            if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n        };\n\n        // Serialize the list and update the path's 'd' attribute.\n        window.SVGPathSegList.prototype._writeListToPath = function () {\n            this._pathElementMutationObserver.disconnect();\n            this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\n            this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n        };\n\n        // When a path segment changes the list needs to be synchronized back to the path element.\n        window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\n            this._writeListToPath();\n        };\n\n        window.SVGPathSegList.prototype.clear = function () {\n            this._checkPathSynchronizedToList();\n\n            this._list.forEach(function (pathSeg) {\n                pathSeg._owningPathSegList = null;\n            });\n            this._list = [];\n            this._writeListToPath();\n        };\n\n        window.SVGPathSegList.prototype.initialize = function (newItem) {\n            this._checkPathSynchronizedToList();\n\n            this._list = [newItem];\n            newItem._owningPathSegList = this;\n            this._writeListToPath();\n            return newItem;\n        };\n\n        window.SVGPathSegList.prototype._checkValidIndex = function (index) {\n            if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw \"INDEX_SIZE_ERR\";\n        };\n\n        window.SVGPathSegList.prototype.getItem = function (index) {\n            this._checkPathSynchronizedToList();\n\n            this._checkValidIndex(index);\n            return this._list[index];\n        };\n\n        window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\n            this._checkPathSynchronizedToList();\n\n            // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n            if (index > this.numberOfItems) index = this.numberOfItems;\n            if (newItem._owningPathSegList) {\n                // SVG2 spec says to make a copy.\n                newItem = newItem.clone();\n            }\n            this._list.splice(index, 0, newItem);\n            newItem._owningPathSegList = this;\n            this._writeListToPath();\n            return newItem;\n        };\n\n        window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\n            this._checkPathSynchronizedToList();\n\n            if (newItem._owningPathSegList) {\n                // SVG2 spec says to make a copy.\n                newItem = newItem.clone();\n            }\n            this._checkValidIndex(index);\n            this._list[index] = newItem;\n            newItem._owningPathSegList = this;\n            this._writeListToPath();\n            return newItem;\n        };\n\n        window.SVGPathSegList.prototype.removeItem = function (index) {\n            this._checkPathSynchronizedToList();\n\n            this._checkValidIndex(index);\n            var item = this._list[index];\n            this._list.splice(index, 1);\n            this._writeListToPath();\n            return item;\n        };\n\n        window.SVGPathSegList.prototype.appendItem = function (newItem) {\n            this._checkPathSynchronizedToList();\n\n            if (newItem._owningPathSegList) {\n                // SVG2 spec says to make a copy.\n                newItem = newItem.clone();\n            }\n            this._list.push(newItem);\n            newItem._owningPathSegList = this;\n            // TODO: Optimize this to just append to the existing attribute.\n            this._writeListToPath();\n            return newItem;\n        };\n\n        window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\n            var string = \"\";\n            var first = true;\n            pathSegArray.forEach(function (pathSeg) {\n                if (first) {\n                    first = false;\n                    string += pathSeg._asPathString();\n                } else {\n                    string += \" \" + pathSeg._asPathString();\n                }\n            });\n            return string;\n        };\n\n        // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n        window.SVGPathSegList.prototype._parsePath = function (string) {\n            if (!string || string.length == 0) return [];\n\n            var owningPathSegList = this;\n\n            var Builder = function Builder() {\n                this.pathSegList = [];\n            };\n\n            Builder.prototype.appendSegment = function (pathSeg) {\n                this.pathSegList.push(pathSeg);\n            };\n\n            var Source = function Source(string) {\n                this._string = string;\n                this._currentIndex = 0;\n                this._endIndex = this._string.length;\n                this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\n\n                this._skipOptionalSpaces();\n            };\n\n            Source.prototype._isCurrentSpace = function () {\n                var character = this._string[this._currentIndex];\n                return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n            };\n\n            Source.prototype._skipOptionalSpaces = function () {\n                while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\n                    this._currentIndex++;\n                }return this._currentIndex < this._endIndex;\n            };\n\n            Source.prototype._skipOptionalSpacesOrDelimiter = function () {\n                if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\") return false;\n                if (this._skipOptionalSpaces()) {\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                        this._currentIndex++;\n                        this._skipOptionalSpaces();\n                    }\n                }\n                return this._currentIndex < this._endIndex;\n            };\n\n            Source.prototype.hasMoreData = function () {\n                return this._currentIndex < this._endIndex;\n            };\n\n            Source.prototype.peekSegmentType = function () {\n                var lookahead = this._string[this._currentIndex];\n                return this._pathSegTypeFromChar(lookahead);\n            };\n\n            Source.prototype._pathSegTypeFromChar = function (lookahead) {\n                switch (lookahead) {\n                    case \"Z\":\n                    case \"z\":\n                        return window.SVGPathSeg.PATHSEG_CLOSEPATH;\n                    case \"M\":\n                        return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\n                    case \"m\":\n                        return window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                    case \"L\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                    case \"l\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                    case \"C\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                    case \"c\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                    case \"Q\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                    case \"q\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                    case \"A\":\n                        return window.SVGPathSeg.PATHSEG_ARC_ABS;\n                    case \"a\":\n                        return window.SVGPathSeg.PATHSEG_ARC_REL;\n                    case \"H\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                    case \"h\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                    case \"V\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                    case \"v\":\n                        return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                    case \"S\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                    case \"s\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                    case \"T\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                    case \"t\":\n                        return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                    default:\n                        return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                }\n            };\n\n            Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\n                // Check for remaining coordinates in the current command.\n                if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || lookahead >= \"0\" && lookahead <= \"9\") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\n                    if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                    if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                    return previousCommand;\n                }\n                return window.SVGPathSeg.PATHSEG_UNKNOWN;\n            };\n\n            Source.prototype.initialCommandIsMoveTo = function () {\n                // If the path is empty it is still valid, so return true.\n                if (!this.hasMoreData()) return true;\n                var command = this.peekSegmentType();\n                // Path must start with moveTo.\n                return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\n            };\n\n            // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n            Source.prototype._parseNumber = function () {\n                var exponent = 0;\n                var integer = 0;\n                var frac = 1;\n                var decimal = 0;\n                var sign = 1;\n                var expsign = 1;\n\n                var startIndex = this._currentIndex;\n\n                this._skipOptionalSpaces();\n\n                // Read the sign.\n                if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                    this._currentIndex++;\n                    sign = -1;\n                }\n\n                if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\")\n                    // The first character of a number must be one of [0-9+-.].\n                    return undefined;\n\n                // Read the integer part, build right-to-left.\n                var startIntPartIndex = this._currentIndex;\n                while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                    this._currentIndex++;\n                } // Advance to first non-digit.\n\n                if (this._currentIndex != startIntPartIndex) {\n                    var scanIntPartIndex = this._currentIndex - 1;\n                    var multiplier = 1;\n                    while (scanIntPartIndex >= startIntPartIndex) {\n                        integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                        multiplier *= 10;\n                    }\n                }\n\n                // Read the decimals.\n                if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                    this._currentIndex++;\n\n                    // There must be a least one digit following the .\n                    if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                        frac *= 10;\n                        decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n                        this._currentIndex += 1;\n                    }\n                }\n\n                // Read the exponent part.\n                if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\") {\n                    this._currentIndex++;\n\n                    // Read the sign of the exponent.\n                    if (this._string.charAt(this._currentIndex) == \"+\") {\n                        this._currentIndex++;\n                    } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                        this._currentIndex++;\n                        expsign = -1;\n                    }\n\n                    // There must be an exponent.\n                    if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                        exponent *= 10;\n                        exponent += this._string.charAt(this._currentIndex) - \"0\";\n                        this._currentIndex++;\n                    }\n                }\n\n                var number = integer + decimal;\n                number *= sign;\n\n                if (exponent) number *= Math.pow(10, expsign * exponent);\n\n                if (startIndex == this._currentIndex) return undefined;\n\n                this._skipOptionalSpacesOrDelimiter();\n\n                return number;\n            };\n\n            Source.prototype._parseArcFlag = function () {\n                if (this._currentIndex >= this._endIndex) return undefined;\n                var flag = false;\n                var flagChar = this._string.charAt(this._currentIndex++);\n                if (flagChar == \"0\") flag = false;else if (flagChar == \"1\") flag = true;else return undefined;\n\n                this._skipOptionalSpacesOrDelimiter();\n                return flag;\n            };\n\n            Source.prototype.parseSegment = function () {\n                var lookahead = this._string[this._currentIndex];\n                var command = this._pathSegTypeFromChar(lookahead);\n                if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\n                    // Possibly an implicit command. Not allowed if this is the first command.\n                    if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                    command = this._nextCommandHelper(lookahead, this._previousCommand);\n                    if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                } else {\n                    this._currentIndex++;\n                }\n\n                this._previousCommand = command;\n\n                switch (command) {\n                    case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                        return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                        return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                        return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                        return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                        return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                        return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                        return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                        return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                        this._skipOptionalSpaces();\n                        return new window.SVGPathSegClosePath(owningPathSegList);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                        var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                        var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                        return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                        return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                    case window.SVGPathSeg.PATHSEG_ARC_REL:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                    case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                        var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                        return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                    default:\n                        throw \"Unknown path seg type.\";\n                }\n            };\n\n            var builder = new Builder();\n            var source = new Source(string);\n\n            if (!source.initialCommandIsMoveTo()) return [];\n            while (source.hasMoreData()) {\n                var pathSeg = source.parseSegment();\n                if (!pathSeg) return [];\n                builder.appendSegment(pathSeg);\n            }\n\n            return builder.pathSegList;\n        };\n    }\n})();\n\n/* jshint ignore:end */\n\nc3_chart_fn.axis = function () {};\nc3_chart_fn.axis.labels = function (labels) {\n    var $$ = this.internal;\n    if (arguments.length) {\n        Object.keys(labels).forEach(function (axisId) {\n            $$.axis.setLabelText(axisId, labels[axisId]);\n        });\n        $$.axis.updateLabels();\n    }\n    // TODO: return some values?\n};\nc3_chart_fn.axis.max = function (max) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (arguments.length) {\n        if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {\n            if (isValue(max.x)) {\n                config.axis_x_max = max.x;\n            }\n            if (isValue(max.y)) {\n                config.axis_y_max = max.y;\n            }\n            if (isValue(max.y2)) {\n                config.axis_y2_max = max.y2;\n            }\n        } else {\n            config.axis_y_max = config.axis_y2_max = max;\n        }\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n    } else {\n        return {\n            x: config.axis_x_max,\n            y: config.axis_y_max,\n            y2: config.axis_y2_max\n        };\n    }\n};\nc3_chart_fn.axis.min = function (min) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (arguments.length) {\n        if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {\n            if (isValue(min.x)) {\n                config.axis_x_min = min.x;\n            }\n            if (isValue(min.y)) {\n                config.axis_y_min = min.y;\n            }\n            if (isValue(min.y2)) {\n                config.axis_y2_min = min.y2;\n            }\n        } else {\n            config.axis_y_min = config.axis_y2_min = min;\n        }\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n    } else {\n        return {\n            x: config.axis_x_min,\n            y: config.axis_y_min,\n            y2: config.axis_y2_min\n        };\n    }\n};\nc3_chart_fn.axis.range = function (range) {\n    if (arguments.length) {\n        if (isDefined(range.max)) {\n            this.axis.max(range.max);\n        }\n        if (isDefined(range.min)) {\n            this.axis.min(range.min);\n        }\n    } else {\n        return {\n            max: this.axis.max(),\n            min: this.axis.min()\n        };\n    }\n};\n\nc3_chart_fn.category = function (i, category) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (arguments.length > 1) {\n        config.axis_x_categories[i] = category;\n        $$.redraw();\n    }\n    return config.axis_x_categories[i];\n};\nc3_chart_fn.categories = function (categories) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (!arguments.length) {\n        return config.axis_x_categories;\n    }\n    config.axis_x_categories = categories;\n    $$.redraw();\n    return config.axis_x_categories;\n};\n\nc3_chart_fn.resize = function (size) {\n    var $$ = this.internal,\n        config = $$.config;\n    config.size_width = size ? size.width : null;\n    config.size_height = size ? size.height : null;\n    this.flush();\n};\n\nc3_chart_fn.flush = function () {\n    var $$ = this.internal;\n    $$.updateAndRedraw({ withLegend: true, withTransition: false, withTransitionForTransform: false });\n};\n\nc3_chart_fn.destroy = function () {\n    var $$ = this.internal;\n\n    window.clearInterval($$.intervalForObserveInserted);\n\n    if ($$.resizeTimeout !== undefined) {\n        window.clearTimeout($$.resizeTimeout);\n    }\n\n    if (window.detachEvent) {\n        window.detachEvent('onresize', $$.resizeFunction);\n    } else if (window.removeEventListener) {\n        window.removeEventListener('resize', $$.resizeFunction);\n    } else {\n        var wrapper = window.onresize;\n        // check if no one else removed our wrapper and remove our resizeFunction from it\n        if (wrapper && wrapper.add && wrapper.remove) {\n            wrapper.remove($$.resizeFunction);\n        }\n    }\n\n    $$.selectChart.classed('c3', false).html(\"\");\n\n    // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n    Object.keys($$).forEach(function (key) {\n        $$[key] = null;\n    });\n\n    return null;\n};\n\n// TODO: fix\nc3_chart_fn.color = function (id) {\n    var $$ = this.internal;\n    return $$.color(id); // more patterns\n};\n\nc3_chart_fn.data = function (targetIds) {\n    var targets = this.internal.data.targets;\n    return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n        return [].concat(targetIds).indexOf(t.id) >= 0;\n    });\n};\nc3_chart_fn.data.shown = function (targetIds) {\n    return this.internal.filterTargetsToShow(this.data(targetIds));\n};\nc3_chart_fn.data.values = function (targetId) {\n    var targets,\n        values = null;\n    if (targetId) {\n        targets = this.data(targetId);\n        values = targets[0] ? targets[0].values.map(function (d) {\n            return d.value;\n        }) : null;\n    }\n    return values;\n};\nc3_chart_fn.data.names = function (names) {\n    this.internal.clearLegendItemTextBoxCache();\n    return this.internal.updateDataAttributes('names', names);\n};\nc3_chart_fn.data.colors = function (colors) {\n    return this.internal.updateDataAttributes('colors', colors);\n};\nc3_chart_fn.data.axes = function (axes) {\n    return this.internal.updateDataAttributes('axes', axes);\n};\n\nc3_chart_fn.flow = function (args) {\n    var $$ = this.internal,\n        targets,\n        data,\n        notfoundIds = [],\n        orgDataCount = $$.getMaxDataCount(),\n        dataCount,\n        domain,\n        baseTarget,\n        baseValue,\n        length = 0,\n        tail = 0,\n        diff,\n        to;\n\n    if (args.json) {\n        data = $$.convertJsonToData(args.json, args.keys);\n    } else if (args.rows) {\n        data = $$.convertRowsToData(args.rows);\n    } else if (args.columns) {\n        data = $$.convertColumnsToData(args.columns);\n    } else {\n        return;\n    }\n    targets = $$.convertDataToTargets(data, true);\n\n    // Update/Add data\n    $$.data.targets.forEach(function (t) {\n        var found = false,\n            i,\n            j;\n        for (i = 0; i < targets.length; i++) {\n            if (t.id === targets[i].id) {\n                found = true;\n\n                if (t.values[t.values.length - 1]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                }\n                length = targets[i].values.length;\n\n                for (j = 0; j < length; j++) {\n                    targets[i].values[j].index = tail + j;\n                    if (!$$.isTimeSeries()) {\n                        targets[i].values[j].x = tail + j;\n                    }\n                }\n                t.values = t.values.concat(targets[i].values);\n\n                targets.splice(i, 1);\n                break;\n            }\n        }\n        if (!found) {\n            notfoundIds.push(t.id);\n        }\n    });\n\n    // Append null for not found targets\n    $$.data.targets.forEach(function (t) {\n        var i, j;\n        for (i = 0; i < notfoundIds.length; i++) {\n            if (t.id === notfoundIds[i]) {\n                tail = t.values[t.values.length - 1].index + 1;\n                for (j = 0; j < length; j++) {\n                    t.values.push({\n                        id: t.id,\n                        index: tail + j,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                        value: null\n                    });\n                }\n            }\n        }\n    });\n\n    // Generate null values for new target\n    if ($$.data.targets.length) {\n        targets.forEach(function (t) {\n            var i,\n                missing = [];\n            for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                missing.push({\n                    id: t.id,\n                    index: i,\n                    x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                    value: null\n                });\n            }\n            t.values.forEach(function (v) {\n                v.index += tail;\n                if (!$$.isTimeSeries()) {\n                    v.x += tail;\n                }\n            });\n            t.values = missing.concat(t.values);\n        });\n    }\n    $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n    // check data count because behavior needs to change when it's only one\n    dataCount = $$.getMaxDataCount();\n    baseTarget = $$.data.targets[0];\n    baseValue = baseTarget.values[0];\n\n    // Update length to flow if needed\n    if (isDefined(args.to)) {\n        length = 0;\n        to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n        baseTarget.values.forEach(function (v) {\n            if (v.x < to) {\n                length++;\n            }\n        });\n    } else if (isDefined(args.length)) {\n        length = args.length;\n    }\n\n    // If only one data, update the domain to flow from left edge of the chart\n    if (!orgDataCount) {\n        if ($$.isTimeSeries()) {\n            if (baseTarget.values.length > 1) {\n                diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n            } else {\n                diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n            }\n        } else {\n            diff = 1;\n        }\n        domain = [baseValue.x - diff, baseValue.x];\n        $$.updateXDomain(null, true, true, false, domain);\n    } else if (orgDataCount === 1) {\n        if ($$.isTimeSeries()) {\n            diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n            domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n            $$.updateXDomain(null, true, true, false, domain);\n        }\n    }\n\n    // Set targets\n    $$.updateTargets($$.data.targets);\n\n    // Redraw with new targets\n    $$.redraw({\n        flow: {\n            index: baseValue.index,\n            length: length,\n            duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n            done: args.done,\n            orgDataCount: orgDataCount\n        },\n        withLegend: true,\n        withTransition: orgDataCount > 1,\n        withTrimXDomain: false,\n        withUpdateXAxis: true\n    });\n};\n\nc3_chart_internal_fn.generateFlow = function (args) {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3;\n\n    return function () {\n        var targets = args.targets,\n            flow = args.flow,\n            drawBar = args.drawBar,\n            drawLine = args.drawLine,\n            drawArea = args.drawArea,\n            cx = args.cx,\n            cy = args.cy,\n            xv = args.xv,\n            xForText = args.xForText,\n            yForText = args.yForText,\n            duration = args.duration;\n\n        var translateX,\n            scaleX = 1,\n            transform,\n            flowIndex = flow.index,\n            flowLength = flow.length,\n            flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n            flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n            orgDomain = $$.x.domain(),\n            domain,\n            durationForFlow = flow.duration || duration,\n            done = flow.done || function () {},\n            wait = $$.generateWait();\n\n        var xgrid = $$.xgrid || d3.selectAll([]),\n            xgridLines = $$.xgridLines || d3.selectAll([]),\n            mainRegion = $$.mainRegion || d3.selectAll([]),\n            mainText = $$.mainText || d3.selectAll([]),\n            mainBar = $$.mainBar || d3.selectAll([]),\n            mainLine = $$.mainLine || d3.selectAll([]),\n            mainArea = $$.mainArea || d3.selectAll([]),\n            mainCircle = $$.mainCircle || d3.selectAll([]);\n\n        // set flag\n        $$.flowing = true;\n\n        // remove head data after rendered\n        $$.data.targets.forEach(function (d) {\n            d.values.splice(0, flowLength);\n        });\n\n        // update x domain to generate axis elements for flow\n        domain = $$.updateXDomain(targets, true, true);\n        // update elements related to x scale\n        if ($$.updateXGrid) {\n            $$.updateXGrid(true);\n        }\n\n        // generate transform to flow\n        if (!flow.orgDataCount) {\n            // if empty\n            if ($$.data.targets[0].values.length !== 1) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                    flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                    translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                } else {\n                    translateX = diffDomain(domain) / 2;\n                }\n            }\n        } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n            translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n        } else {\n            if ($$.isTimeSeries()) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n            }\n        }\n        scaleX = diffDomain(orgDomain) / diffDomain(domain);\n        transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n        $$.hideXGridFocus();\n\n        d3.transition().ease('linear').duration(durationForFlow).each(function () {\n            wait.add($$.axes.x.transition().call($$.xAxis));\n            wait.add(mainBar.transition().attr('transform', transform));\n            wait.add(mainLine.transition().attr('transform', transform));\n            wait.add(mainArea.transition().attr('transform', transform));\n            wait.add(mainCircle.transition().attr('transform', transform));\n            wait.add(mainText.transition().attr('transform', transform));\n            wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n            wait.add(xgrid.transition().attr('transform', transform));\n            wait.add(xgridLines.transition().attr('transform', transform));\n        }).call(wait, function () {\n            var i,\n                shapes = [],\n                texts = [],\n                eventRects = [];\n\n            // remove flowed elements\n            if (flowLength) {\n                for (i = 0; i < flowLength; i++) {\n                    shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                    texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                    eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n                }\n                $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n                $$.svg.select('.' + CLASS.xgrid).remove();\n            }\n\n            // draw again for removing flowed elements and reverting attr\n            xgrid.attr('transform', null).attr($$.xgridAttr);\n            xgridLines.attr('transform', null);\n            xgridLines.select('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv);\n            xgridLines.select('text').attr(\"x\", config.axis_rotated ? $$.width : 0).attr(\"y\", xv);\n            mainBar.attr('transform', null).attr(\"d\", drawBar);\n            mainLine.attr('transform', null).attr(\"d\", drawLine);\n            mainArea.attr('transform', null).attr(\"d\", drawArea);\n            mainCircle.attr('transform', null).attr(\"cx\", cx).attr(\"cy\", cy);\n            mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));\n            mainRegion.attr('transform', null);\n            mainRegion.select('rect').filter($$.isRegionOnX).attr(\"x\", $$.regionX.bind($$)).attr(\"width\", $$.regionWidth.bind($$));\n\n            if (config.interaction_enabled) {\n                $$.redrawEventRect();\n            }\n\n            // callback for end of flow\n            done();\n\n            $$.flowing = false;\n        });\n    };\n};\n\nc3_chart_fn.focus = function (targetIds) {\n    var $$ = this.internal,\n        candidates;\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();\n    this.defocus();\n    candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n    if ($$.hasArcType()) {\n        $$.expandArc(targetIds);\n    }\n    $$.toggleFocusLegend(targetIds, true);\n\n    $$.focusedTargetIds = targetIds;\n    $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n        return targetIds.indexOf(id) < 0;\n    });\n};\n\nc3_chart_fn.defocus = function (targetIds) {\n    var $$ = this.internal,\n        candidates;\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n    if ($$.hasArcType()) {\n        $$.unexpandArc(targetIds);\n    }\n    $$.toggleFocusLegend(targetIds, false);\n\n    $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n        return targetIds.indexOf(id) < 0;\n    });\n    $$.defocusedTargetIds = targetIds;\n};\n\nc3_chart_fn.revert = function (targetIds) {\n    var $$ = this.internal,\n        candidates;\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n    candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n    if ($$.hasArcType()) {\n        $$.unexpandArc(targetIds);\n    }\n    if ($$.config.legend_show) {\n        $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n        $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {\n            return $$.d3.select(this).classed(CLASS.legendItemFocused);\n        }).classed(CLASS.legendItemFocused, false);\n    }\n\n    $$.focusedTargetIds = [];\n    $$.defocusedTargetIds = [];\n};\n\nc3_chart_fn.xgrids = function (grids) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (!grids) {\n        return config.grid_x_lines;\n    }\n    config.grid_x_lines = grids;\n    $$.redrawWithoutRescale();\n    return config.grid_x_lines;\n};\nc3_chart_fn.xgrids.add = function (grids) {\n    var $$ = this.internal;\n    return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n};\nc3_chart_fn.xgrids.remove = function (params) {\n    // TODO: multiple\n    var $$ = this.internal;\n    $$.removeGridLines(params, true);\n};\n\nc3_chart_fn.ygrids = function (grids) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (!grids) {\n        return config.grid_y_lines;\n    }\n    config.grid_y_lines = grids;\n    $$.redrawWithoutRescale();\n    return config.grid_y_lines;\n};\nc3_chart_fn.ygrids.add = function (grids) {\n    var $$ = this.internal;\n    return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n};\nc3_chart_fn.ygrids.remove = function (params) {\n    // TODO: multiple\n    var $$ = this.internal;\n    $$.removeGridLines(params, false);\n};\n\nc3_chart_fn.groups = function (groups) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (isUndefined(groups)) {\n        return config.data_groups;\n    }\n    config.data_groups = groups;\n    $$.redraw();\n    return config.data_groups;\n};\n\nc3_chart_fn.legend = function () {};\nc3_chart_fn.legend.show = function (targetIds) {\n    var $$ = this.internal;\n    $$.showLegend($$.mapToTargetIds(targetIds));\n    $$.updateAndRedraw({ withLegend: true });\n};\nc3_chart_fn.legend.hide = function (targetIds) {\n    var $$ = this.internal;\n    $$.hideLegend($$.mapToTargetIds(targetIds));\n    $$.updateAndRedraw({ withLegend: true });\n};\n\nc3_chart_fn.load = function (args) {\n    var $$ = this.internal,\n        config = $$.config;\n    // update xs if specified\n    if (args.xs) {\n        $$.addXs(args.xs);\n    }\n    // update names if exists\n    if ('names' in args) {\n        c3_chart_fn.data.names.bind(this)(args.names);\n    }\n    // update classes if exists\n    if ('classes' in args) {\n        Object.keys(args.classes).forEach(function (id) {\n            config.data_classes[id] = args.classes[id];\n        });\n    }\n    // update categories if exists\n    if ('categories' in args && $$.isCategorized()) {\n        config.axis_x_categories = args.categories;\n    }\n    // update axes if exists\n    if ('axes' in args) {\n        Object.keys(args.axes).forEach(function (id) {\n            config.data_axes[id] = args.axes[id];\n        });\n    }\n    // update colors if exists\n    if ('colors' in args) {\n        Object.keys(args.colors).forEach(function (id) {\n            config.data_colors[id] = args.colors[id];\n        });\n    }\n    // use cache if exists\n    if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n        $$.load($$.getCaches(args.cacheIds), args.done);\n        return;\n    }\n    // unload if needed\n    if ('unload' in args) {\n        // TODO: do not unload if target will load (included in url/rows/columns)\n        $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {\n            $$.loadFromArgs(args);\n        });\n    } else {\n        $$.loadFromArgs(args);\n    }\n};\n\nc3_chart_fn.unload = function (args) {\n    var $$ = this.internal;\n    args = args || {};\n    if (args instanceof Array) {\n        args = { ids: args };\n    } else if (typeof args === 'string') {\n        args = { ids: [args] };\n    }\n    $$.unload($$.mapToTargetIds(args.ids), function () {\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n        if (args.done) {\n            args.done();\n        }\n    });\n};\n\nc3_chart_fn.regions = function (regions) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (!regions) {\n        return config.regions;\n    }\n    config.regions = regions;\n    $$.redrawWithoutRescale();\n    return config.regions;\n};\nc3_chart_fn.regions.add = function (regions) {\n    var $$ = this.internal,\n        config = $$.config;\n    if (!regions) {\n        return config.regions;\n    }\n    config.regions = config.regions.concat(regions);\n    $$.redrawWithoutRescale();\n    return config.regions;\n};\nc3_chart_fn.regions.remove = function (options) {\n    var $$ = this.internal,\n        config = $$.config,\n        duration,\n        classes,\n        regions;\n\n    options = options || {};\n    duration = $$.getOption(options, \"duration\", config.transition_duration);\n    classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n    regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\n        return '.' + c;\n    }));\n    (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();\n\n    config.regions = config.regions.filter(function (region) {\n        var found = false;\n        if (!region['class']) {\n            return true;\n        }\n        region['class'].split(' ').forEach(function (c) {\n            if (classes.indexOf(c) >= 0) {\n                found = true;\n            }\n        });\n        return !found;\n    });\n\n    return config.regions;\n};\n\nc3_chart_fn.selected = function (targetId) {\n    var $$ = this.internal,\n        d3 = $$.d3;\n    return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {\n        return d3.select(this).classed(CLASS.SELECTED);\n    }).map(function (d) {\n        return d.map(function (d) {\n            var data = d.__data__;return data.data ? data.data : data;\n        });\n    }));\n};\nc3_chart_fn.select = function (ids, indices, resetOther) {\n    var $$ = this.internal,\n        d3 = $$.d3,\n        config = $$.config;\n    if (!config.data_selection_enabled) {\n        return;\n    }\n    $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n        var shape = d3.select(this),\n            id = d.data ? d.data.id : d.id,\n            toggle = $$.getToggle(this, d).bind($$),\n            isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n            isTargetIndex = !indices || indices.indexOf(i) >= 0,\n            isSelected = shape.classed(CLASS.SELECTED);\n        // line/area selection not supported yet\n        if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n            return;\n        }\n        if (isTargetId && isTargetIndex) {\n            if (config.data_selection_isselectable(d) && !isSelected) {\n                toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n            }\n        } else if (isDefined(resetOther) && resetOther) {\n            if (isSelected) {\n                toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n            }\n        }\n    });\n};\nc3_chart_fn.unselect = function (ids, indices) {\n    var $$ = this.internal,\n        d3 = $$.d3,\n        config = $$.config;\n    if (!config.data_selection_enabled) {\n        return;\n    }\n    $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n        var shape = d3.select(this),\n            id = d.data ? d.data.id : d.id,\n            toggle = $$.getToggle(this, d).bind($$),\n            isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n            isTargetIndex = !indices || indices.indexOf(i) >= 0,\n            isSelected = shape.classed(CLASS.SELECTED);\n        // line/area selection not supported yet\n        if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n            return;\n        }\n        if (isTargetId && isTargetIndex) {\n            if (config.data_selection_isselectable(d)) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        }\n    });\n};\n\nc3_chart_fn.show = function (targetIds, options) {\n    var $$ = this.internal,\n        targets;\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    options = options || {};\n\n    $$.removeHiddenTargetIds(targetIds);\n    targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n    targets.transition().style('opacity', 1, 'important').call($$.endall, function () {\n        targets.style('opacity', null).style('opacity', 1);\n    });\n\n    if (options.withLegend) {\n        $$.showLegend(targetIds);\n    }\n\n    $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n};\n\nc3_chart_fn.hide = function (targetIds, options) {\n    var $$ = this.internal,\n        targets;\n\n    targetIds = $$.mapToTargetIds(targetIds);\n    options = options || {};\n\n    $$.addHiddenTargetIds(targetIds);\n    targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n    targets.transition().style('opacity', 0, 'important').call($$.endall, function () {\n        targets.style('opacity', null).style('opacity', 0);\n    });\n\n    if (options.withLegend) {\n        $$.hideLegend(targetIds);\n    }\n\n    $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n};\n\nc3_chart_fn.toggle = function (targetIds, options) {\n    var that = this,\n        $$ = this.internal;\n    $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n        $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n    });\n};\n\nc3_chart_fn.tooltip = function () {};\nc3_chart_fn.tooltip.show = function (args) {\n    var $$ = this.internal,\n        index,\n        mouse;\n\n    // determine mouse position on the chart\n    if (args.mouse) {\n        mouse = args.mouse;\n    }\n\n    // determine focus data\n    if (args.data) {\n        if ($$.isMultipleX()) {\n            // if multiple xs, target point will be determined by mouse\n            mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n            index = null;\n        } else {\n            // TODO: when tooltip_grouped = false\n            index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n        }\n    } else if (typeof args.x !== 'undefined') {\n        index = $$.getIndexByX(args.x);\n    } else if (typeof args.index !== 'undefined') {\n        index = args.index;\n    }\n\n    // emulate mouse events to show\n    $$.dispatchEvent('mouseover', index, mouse);\n    $$.dispatchEvent('mousemove', index, mouse);\n\n    $$.config.tooltip_onshow.call($$, args.data);\n};\nc3_chart_fn.tooltip.hide = function () {\n    // TODO: get target data by checking the state of focus\n    this.internal.dispatchEvent('mouseout', 0);\n\n    this.internal.config.tooltip_onhide.call(this);\n};\n\nc3_chart_fn.transform = function (type, targetIds) {\n    var $$ = this.internal,\n        options = ['pie', 'donut'].indexOf(type) >= 0 ? { withTransform: true } : null;\n    $$.transformTo(targetIds, type, options);\n};\n\nc3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n    var $$ = this,\n        withTransitionForAxis = !$$.hasArcType(),\n        options = optionsForRedraw || { withTransitionForAxis: withTransitionForAxis };\n    options.withTransitionForTransform = false;\n    $$.transiting = false;\n    $$.setTargetType(targetIds, type);\n    $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n    $$.updateAndRedraw(options);\n};\n\nc3_chart_fn.x = function (x) {\n    var $$ = this.internal;\n    if (arguments.length) {\n        $$.updateTargetX($$.data.targets, x);\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n    }\n    return $$.data.xs;\n};\nc3_chart_fn.xs = function (xs) {\n    var $$ = this.internal;\n    if (arguments.length) {\n        $$.updateTargetXs($$.data.targets, xs);\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n    }\n    return $$.data.xs;\n};\n\nc3_chart_fn.zoom = function (domain) {\n    var $$ = this.internal;\n    if (domain) {\n        if ($$.isTimeSeries()) {\n            domain = domain.map(function (x) {\n                return $$.parseDate(x);\n            });\n        }\n        $$.brush.extent(domain);\n        $$.redraw({ withUpdateXDomain: true, withY: $$.config.zoom_rescale });\n        $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n    }\n    return $$.brush.extent();\n};\nc3_chart_fn.zoom.enable = function (enabled) {\n    var $$ = this.internal;\n    $$.config.zoom_enabled = enabled;\n    $$.updateAndRedraw();\n};\nc3_chart_fn.unzoom = function () {\n    var $$ = this.internal;\n    $$.brush.clear().update();\n    $$.redraw({ withUpdateXDomain: true });\n};\n\nc3_chart_fn.zoom.max = function (max) {\n    var $$ = this.internal,\n        config = $$.config,\n        d3 = $$.d3;\n    if (max === 0 || max) {\n        config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n    } else {\n        return config.zoom_x_max;\n    }\n};\n\nc3_chart_fn.zoom.min = function (min) {\n    var $$ = this.internal,\n        config = $$.config,\n        d3 = $$.d3;\n    if (min === 0 || min) {\n        config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n    } else {\n        return config.zoom_x_min;\n    }\n};\n\nc3_chart_fn.zoom.range = function (range) {\n    if (arguments.length) {\n        if (isDefined(range.max)) {\n            this.domain.max(range.max);\n        }\n        if (isDefined(range.min)) {\n            this.domain.min(range.min);\n        }\n    } else {\n        return {\n            max: this.domain.max(),\n            min: this.domain.min()\n        };\n    }\n};\n\nc3_chart_internal_fn.initPie = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n    $$.pie = d3.layout.pie().value(function (d) {\n        return d.values.reduce(function (a, b) {\n            return a + b.value;\n        }, 0);\n    });\n    if (!config.data_order) {\n        $$.pie.sort(null);\n    }\n};\n\nc3_chart_internal_fn.updateRadius = function () {\n    var $$ = this,\n        config = $$.config,\n        w = config.gauge_width || config.donut_width;\n    $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2;\n    $$.radius = $$.radiusExpanded * 0.95;\n    $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n    $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n};\n\nc3_chart_internal_fn.updateArc = function () {\n    var $$ = this;\n    $$.svgArc = $$.getSvgArc();\n    $$.svgArcExpanded = $$.getSvgArcExpanded();\n    $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n};\n\nc3_chart_internal_fn.updateAngle = function (d) {\n    var $$ = this,\n        config = $$.config,\n        found = false,\n        index = 0,\n        gMin,\n        gMax,\n        gTic,\n        gValue;\n\n    if (!config) {\n        return null;\n    }\n\n    $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n        if (!found && t.data.id === d.data.id) {\n            found = true;\n            d = t;\n            d.index = index;\n        }\n        index++;\n    });\n    if (isNaN(d.startAngle)) {\n        d.startAngle = 0;\n    }\n    if (isNaN(d.endAngle)) {\n        d.endAngle = d.startAngle;\n    }\n    if ($$.isGaugeType(d.data)) {\n        gMin = config.gauge_min;\n        gMax = config.gauge_max;\n        gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);\n        gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\n        d.startAngle = config.gauge_startingAngle;\n        d.endAngle = d.startAngle + gTic * gValue;\n    }\n    return found ? d : null;\n};\n\nc3_chart_internal_fn.getSvgArc = function () {\n    var $$ = this,\n        arc = $$.d3.svg.arc().outerRadius($$.radius).innerRadius($$.innerRadius),\n        newArc = function newArc(d, withoutUpdate) {\n        var updated;\n        if (withoutUpdate) {\n            return arc(d);\n        } // for interpolate\n        updated = $$.updateAngle(d);\n        return updated ? arc(updated) : \"M 0 0\";\n    };\n    // TODO: extends all function\n    newArc.centroid = arc.centroid;\n    return newArc;\n};\n\nc3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n    var $$ = this,\n        arc = $$.d3.svg.arc().outerRadius($$.radiusExpanded * (rate ? rate : 1)).innerRadius($$.innerRadius);\n    return function (d) {\n        var updated = $$.updateAngle(d);\n        return updated ? arc(updated) : \"M 0 0\";\n    };\n};\n\nc3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n    return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n};\n\nc3_chart_internal_fn.transformForArcLabel = function (d) {\n    var $$ = this,\n        config = $$.config,\n        updated = $$.updateAngle(d),\n        c,\n        x,\n        y,\n        h,\n        ratio,\n        translate = \"\";\n    if (updated && !$$.hasType('gauge')) {\n        c = this.svgArc.centroid(updated);\n        x = isNaN(c[0]) ? 0 : c[0];\n        y = isNaN(c[1]) ? 0 : c[1];\n        h = Math.sqrt(x * x + y * y);\n        if ($$.hasType('donut') && config.donut_label_ratio) {\n            ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n        } else if ($$.hasType('pie') && config.pie_label_ratio) {\n            ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n        } else {\n            ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n        }\n        translate = \"translate(\" + x * ratio + ',' + y * ratio + \")\";\n    }\n    return translate;\n};\n\nc3_chart_internal_fn.getArcRatio = function (d) {\n    var $$ = this,\n        config = $$.config,\n        whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n    return d ? (d.endAngle - d.startAngle) / whole : null;\n};\n\nc3_chart_internal_fn.convertToArcData = function (d) {\n    return this.addName({\n        id: d.data.id,\n        value: d.value,\n        ratio: this.getArcRatio(d),\n        index: d.index\n    });\n};\n\nc3_chart_internal_fn.textForArcLabel = function (d) {\n    var $$ = this,\n        updated,\n        value,\n        ratio,\n        id,\n        format;\n    if (!$$.shouldShowArcLabel()) {\n        return \"\";\n    }\n    updated = $$.updateAngle(d);\n    value = updated ? updated.value : null;\n    ratio = $$.getArcRatio(updated);\n    id = d.data.id;\n    if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\n        return \"\";\n    }\n    format = $$.getArcLabelFormat();\n    return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n};\n\nc3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {\n    var $$ = this,\n        format = $$.getGaugeLabelExtents();\n\n    return format ? format(value, isMax) : value;\n};\n\nc3_chart_internal_fn.expandArc = function (targetIds) {\n    var $$ = this,\n        interval;\n\n    // MEMO: avoid to cancel transition\n    if ($$.transiting) {\n        interval = window.setInterval(function () {\n            if (!$$.transiting) {\n                window.clearInterval(interval);\n                if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                    $$.expandArc(targetIds);\n                }\n            }\n        }, 10);\n        return;\n    }\n\n    targetIds = $$.mapToTargetIds(targetIds);\n\n    $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n        if (!$$.shouldExpand(d.data.id)) {\n            return;\n        }\n        $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr(\"d\", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr(\"d\", $$.svgArcExpandedSub).each(function (d) {\n            if ($$.isDonutType(d.data)) {\n                // callback here\n            }\n        });\n    });\n};\n\nc3_chart_internal_fn.unexpandArc = function (targetIds) {\n    var $$ = this;\n\n    if ($$.transiting) {\n        return;\n    }\n\n    targetIds = $$.mapToTargetIds(targetIds);\n\n    $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {\n        return $$.expandDuration(d.data.id);\n    }).attr(\"d\", $$.svgArc);\n    $$.svg.selectAll('.' + CLASS.arc);\n};\n\nc3_chart_internal_fn.expandDuration = function (id) {\n    var $$ = this,\n        config = $$.config;\n\n    if ($$.isDonutType(id)) {\n        return config.donut_expand_duration;\n    } else if ($$.isGaugeType(id)) {\n        return config.gauge_expand_duration;\n    } else if ($$.isPieType(id)) {\n        return config.pie_expand_duration;\n    } else {\n        return 50;\n    }\n};\n\nc3_chart_internal_fn.shouldExpand = function (id) {\n    var $$ = this,\n        config = $$.config;\n    return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;\n};\n\nc3_chart_internal_fn.shouldShowArcLabel = function () {\n    var $$ = this,\n        config = $$.config,\n        shouldShow = true;\n    if ($$.hasType('donut')) {\n        shouldShow = config.donut_label_show;\n    } else if ($$.hasType('pie')) {\n        shouldShow = config.pie_label_show;\n    }\n    // when gauge, always true\n    return shouldShow;\n};\n\nc3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n    var $$ = this,\n        config = $$.config,\n        threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n    return ratio >= threshold;\n};\n\nc3_chart_internal_fn.getArcLabelFormat = function () {\n    var $$ = this,\n        config = $$.config,\n        format = config.pie_label_format;\n    if ($$.hasType('gauge')) {\n        format = config.gauge_label_format;\n    } else if ($$.hasType('donut')) {\n        format = config.donut_label_format;\n    }\n    return format;\n};\n\nc3_chart_internal_fn.getGaugeLabelExtents = function () {\n    var $$ = this,\n        config = $$.config;\n    return config.gauge_label_extents;\n};\n\nc3_chart_internal_fn.getArcTitle = function () {\n    var $$ = this;\n    return $$.hasType('donut') ? $$.config.donut_title : \"\";\n};\n\nc3_chart_internal_fn.updateTargetsForArc = function (targets) {\n    var $$ = this,\n        main = $$.main,\n        mainPieUpdate,\n        mainPieEnter,\n        classChartArc = $$.classChartArc.bind($$),\n        classArcs = $$.classArcs.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr(\"class\", function (d) {\n        return classChartArc(d) + classFocus(d.data);\n    });\n    mainPieEnter = mainPieUpdate.enter().append(\"g\").attr(\"class\", classChartArc);\n    mainPieEnter.append('g').attr('class', classArcs);\n    mainPieEnter.append(\"text\").attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\").style(\"opacity\", 0).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n    // MEMO: can not keep same color..., but not bad to update color in redraw\n    //mainPieUpdate.exit().remove();\n};\n\nc3_chart_internal_fn.initArc = function () {\n    var $$ = this;\n    $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style(\"text-anchor\", \"middle\").text($$.getArcTitle());\n};\n\nc3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        main = $$.main,\n        mainArc;\n    mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));\n    mainArc.enter().append('path').attr(\"class\", $$.classArc.bind($$)).style(\"fill\", function (d) {\n        return $$.color(d.data);\n    }).style(\"cursor\", function (d) {\n        return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null;\n    }).each(function (d) {\n        if ($$.isGaugeType(d.data)) {\n            d.startAngle = d.endAngle = config.gauge_startingAngle;\n        }\n        this._current = d;\n    });\n    mainArc.attr(\"transform\", function (d) {\n        return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\";\n    }).on('mouseover', config.interaction_enabled ? function (d) {\n        var updated, arcData;\n        if ($$.transiting) {\n            // skip while transiting\n            return;\n        }\n        updated = $$.updateAngle(d);\n        if (updated) {\n            arcData = $$.convertToArcData(updated);\n            // transitions\n            $$.expandArc(updated.data.id);\n            $$.api.focus(updated.data.id);\n            $$.toggleFocusLegend(updated.data.id, true);\n            $$.config.data_onmouseover(arcData, this);\n        }\n    } : null).on('mousemove', config.interaction_enabled ? function (d) {\n        var updated = $$.updateAngle(d),\n            arcData,\n            selectedData;\n        if (updated) {\n            arcData = $$.convertToArcData(updated), selectedData = [arcData];\n            $$.showTooltip(selectedData, this);\n        }\n    } : null).on('mouseout', config.interaction_enabled ? function (d) {\n        var updated, arcData;\n        if ($$.transiting) {\n            // skip while transiting\n            return;\n        }\n        updated = $$.updateAngle(d);\n        if (updated) {\n            arcData = $$.convertToArcData(updated);\n            // transitions\n            $$.unexpandArc(updated.data.id);\n            $$.api.revert();\n            $$.revertLegend();\n            $$.hideTooltip();\n            $$.config.data_onmouseout(arcData, this);\n        }\n    } : null).on('click', config.interaction_enabled ? function (d, i) {\n        var updated = $$.updateAngle(d),\n            arcData;\n        if (updated) {\n            arcData = $$.convertToArcData(updated);\n            if ($$.toggleShape) {\n                $$.toggleShape(this, arcData, i);\n            }\n            $$.config.data_onclick.call($$.api, arcData, this);\n        }\n    } : null).each(function () {\n        $$.transiting = true;\n    }).transition().duration(duration).attrTween(\"d\", function (d) {\n        var updated = $$.updateAngle(d),\n            interpolate;\n        if (!updated) {\n            return function () {\n                return \"M 0 0\";\n            };\n        }\n        //                if (this._current === d) {\n        //                    this._current = {\n        //                        startAngle: Math.PI*2,\n        //                        endAngle: Math.PI*2,\n        //                    };\n        //                }\n        if (isNaN(this._current.startAngle)) {\n            this._current.startAngle = 0;\n        }\n        if (isNaN(this._current.endAngle)) {\n            this._current.endAngle = this._current.startAngle;\n        }\n        interpolate = d3.interpolate(this._current, updated);\n        this._current = interpolate(0);\n        return function (t) {\n            var interpolated = interpolate(t);\n            interpolated.data = d.data; // data.id will be updated by interporator\n            return $$.getArc(interpolated, true);\n        };\n    }).attr(\"transform\", withTransform ? \"scale(1)\" : \"\").style(\"fill\", function (d) {\n        return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n    } // Where gauge reading color would receive customization.\n    ).call($$.endall, function () {\n        $$.transiting = false;\n    });\n    mainArc.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    main.selectAll('.' + CLASS.chartArc).select('text').style(\"opacity\", 0).attr('class', function (d) {\n        return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\n    }).text($$.textForArcLabel.bind($$)).attr(\"transform\", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {\n        return $$.isGaugeType(d.data) ? Math.round($$.radius / 5) + 'px' : '';\n    }).transition().duration(duration).style(\"opacity\", function (d) {\n        return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\n    });\n    main.select('.' + CLASS.chartArcsTitle).style(\"opacity\", $$.hasType('donut') || $$.hasType('gauge') ? 1 : 0);\n\n    if ($$.hasType('gauge')) {\n        $$.arcs.select('.' + CLASS.chartArcsBackground).attr(\"d\", function () {\n            var d = {\n                data: [{ value: config.gauge_max }],\n                startAngle: config.gauge_startingAngle,\n                endAngle: -1 * config.gauge_startingAngle\n            };\n            return $$.getArc(d, true, true);\n        });\n        $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr(\"dy\", \".75em\").text(config.gauge_label_show ? config.gauge_units : '');\n        $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr(\"dx\", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');\n        $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr(\"dx\", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');\n    }\n};\nc3_chart_internal_fn.initGauge = function () {\n    var arcs = this.arcs;\n    if (this.hasType('gauge')) {\n        arcs.append('path').attr(\"class\", CLASS.chartArcsBackground);\n        arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeUnit).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMin).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMax).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n    }\n};\nc3_chart_internal_fn.getGaugeLabelHeight = function () {\n    return this.config.gauge_label_show ? 20 : 0;\n};\n\nc3_chart_internal_fn.hasCaches = function (ids) {\n    for (var i = 0; i < ids.length; i++) {\n        if (!(ids[i] in this.cache)) {\n            return false;\n        }\n    }\n    return true;\n};\nc3_chart_internal_fn.addCache = function (id, target) {\n    this.cache[id] = this.cloneTarget(target);\n};\nc3_chart_internal_fn.getCaches = function (ids) {\n    var targets = [],\n        i;\n    for (i = 0; i < ids.length; i++) {\n        if (ids[i] in this.cache) {\n            targets.push(this.cloneTarget(this.cache[ids[i]]));\n        }\n    }\n    return targets;\n};\n\nc3_chart_internal_fn.categoryName = function (i) {\n    var config = this.config;\n    return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n};\n\nc3_chart_internal_fn.generateClass = function (prefix, targetId) {\n    return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n};\nc3_chart_internal_fn.classText = function (d) {\n    return this.generateClass(CLASS.text, d.index);\n};\nc3_chart_internal_fn.classTexts = function (d) {\n    return this.generateClass(CLASS.texts, d.id);\n};\nc3_chart_internal_fn.classShape = function (d) {\n    return this.generateClass(CLASS.shape, d.index);\n};\nc3_chart_internal_fn.classShapes = function (d) {\n    return this.generateClass(CLASS.shapes, d.id);\n};\nc3_chart_internal_fn.classLine = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n};\nc3_chart_internal_fn.classLines = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n};\nc3_chart_internal_fn.classCircle = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n};\nc3_chart_internal_fn.classCircles = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n};\nc3_chart_internal_fn.classBar = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n};\nc3_chart_internal_fn.classBars = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n};\nc3_chart_internal_fn.classArc = function (d) {\n    return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n};\nc3_chart_internal_fn.classArcs = function (d) {\n    return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n};\nc3_chart_internal_fn.classArea = function (d) {\n    return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n};\nc3_chart_internal_fn.classAreas = function (d) {\n    return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n};\nc3_chart_internal_fn.classRegion = function (d, i) {\n    return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n};\nc3_chart_internal_fn.classEvent = function (d) {\n    return this.generateClass(CLASS.eventRect, d.index);\n};\nc3_chart_internal_fn.classTarget = function (id) {\n    var $$ = this;\n    var additionalClassSuffix = $$.config.data_classes[id],\n        additionalClass = '';\n    if (additionalClassSuffix) {\n        additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n    }\n    return $$.generateClass(CLASS.target, id) + additionalClass;\n};\nc3_chart_internal_fn.classFocus = function (d) {\n    return this.classFocused(d) + this.classDefocused(d);\n};\nc3_chart_internal_fn.classFocused = function (d) {\n    return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n};\nc3_chart_internal_fn.classDefocused = function (d) {\n    return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n};\nc3_chart_internal_fn.classChartText = function (d) {\n    return CLASS.chartText + this.classTarget(d.id);\n};\nc3_chart_internal_fn.classChartLine = function (d) {\n    return CLASS.chartLine + this.classTarget(d.id);\n};\nc3_chart_internal_fn.classChartBar = function (d) {\n    return CLASS.chartBar + this.classTarget(d.id);\n};\nc3_chart_internal_fn.classChartArc = function (d) {\n    return CLASS.chartArc + this.classTarget(d.data.id);\n};\nc3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n    return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n};\nc3_chart_internal_fn.selectorTarget = function (id, prefix) {\n    return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n};\nc3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n    var $$ = this;\n    ids = ids || [];\n    return ids.length ? ids.map(function (id) {\n        return $$.selectorTarget(id, prefix);\n    }) : null;\n};\nc3_chart_internal_fn.selectorLegend = function (id) {\n    return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n};\nc3_chart_internal_fn.selectorLegends = function (ids) {\n    var $$ = this;\n    return ids && ids.length ? ids.map(function (id) {\n        return $$.selectorLegend(id);\n    }) : null;\n};\n\nc3_chart_internal_fn.getClipPath = function (id) {\n    var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n    return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n};\nc3_chart_internal_fn.appendClip = function (parent, id) {\n    return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n};\nc3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n    // axis line width + padding for left\n    var left = Math.max(30, this.margin.left);\n    return forHorizontal ? -(1 + left) : -(left - 1);\n};\nc3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n    return forHorizontal ? -20 : -this.margin.top;\n};\nc3_chart_internal_fn.getXAxisClipX = function () {\n    var $$ = this;\n    return $$.getAxisClipX(!$$.config.axis_rotated);\n};\nc3_chart_internal_fn.getXAxisClipY = function () {\n    var $$ = this;\n    return $$.getAxisClipY(!$$.config.axis_rotated);\n};\nc3_chart_internal_fn.getYAxisClipX = function () {\n    var $$ = this;\n    return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n};\nc3_chart_internal_fn.getYAxisClipY = function () {\n    var $$ = this;\n    return $$.getAxisClipY($$.config.axis_rotated);\n};\nc3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n    var $$ = this,\n        left = Math.max(30, $$.margin.left),\n        right = Math.max(30, $$.margin.right);\n    // width + axis line width + padding for left/right\n    return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n};\nc3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n    // less than 20 is not enough to show the axis label 'outer' without legend\n    return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;\n};\nc3_chart_internal_fn.getXAxisClipWidth = function () {\n    var $$ = this;\n    return $$.getAxisClipWidth(!$$.config.axis_rotated);\n};\nc3_chart_internal_fn.getXAxisClipHeight = function () {\n    var $$ = this;\n    return $$.getAxisClipHeight(!$$.config.axis_rotated);\n};\nc3_chart_internal_fn.getYAxisClipWidth = function () {\n    var $$ = this;\n    return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n};\nc3_chart_internal_fn.getYAxisClipHeight = function () {\n    var $$ = this;\n    return $$.getAxisClipHeight($$.config.axis_rotated);\n};\n\nc3_chart_internal_fn.generateColor = function () {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3,\n        colors = config.data_colors,\n        pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n        callback = config.data_color,\n        ids = [];\n\n    return function (d) {\n        var id = d.id || d.data && d.data.id || d,\n            color;\n\n        // if callback function is provided\n        if (colors[id] instanceof Function) {\n            color = colors[id](d);\n        }\n        // if specified, choose that color\n        else if (colors[id]) {\n                color = colors[id];\n            }\n            // if not specified, choose from pattern\n            else {\n                    if (ids.indexOf(id) < 0) {\n                        ids.push(id);\n                    }\n                    color = pattern[ids.indexOf(id) % pattern.length];\n                    colors[id] = color;\n                }\n        return callback instanceof Function ? callback(color, d) : color;\n    };\n};\nc3_chart_internal_fn.generateLevelColor = function () {\n    var $$ = this,\n        config = $$.config,\n        colors = config.color_pattern,\n        threshold = config.color_threshold,\n        asValue = threshold.unit === 'value',\n        values = threshold.values && threshold.values.length ? threshold.values : [],\n        max = threshold.max || 100;\n    return notEmpty(config.color_threshold) ? function (value) {\n        var i,\n            v,\n            color = colors[colors.length - 1];\n        for (i = 0; i < values.length; i++) {\n            v = asValue ? value : value * 100 / max;\n            if (v < values[i]) {\n                color = colors[i];\n                break;\n            }\n        }\n        return color;\n    } : null;\n};\n\nc3_chart_internal_fn.getDefaultConfig = function () {\n    var config = {\n        bindto: '#chart',\n        svg_classname: undefined,\n        size_width: undefined,\n        size_height: undefined,\n        padding_left: undefined,\n        padding_right: undefined,\n        padding_top: undefined,\n        padding_bottom: undefined,\n        resize_auto: true,\n        zoom_enabled: false,\n        zoom_extent: undefined,\n        zoom_privileged: false,\n        zoom_rescale: false,\n        zoom_onzoom: function zoom_onzoom() {},\n        zoom_onzoomstart: function zoom_onzoomstart() {},\n        zoom_onzoomend: function zoom_onzoomend() {},\n        zoom_x_min: undefined,\n        zoom_x_max: undefined,\n        interaction_brighten: true,\n        interaction_enabled: true,\n        onmouseover: function onmouseover() {},\n        onmouseout: function onmouseout() {},\n        onresize: function onresize() {},\n        onresized: function onresized() {},\n        oninit: function oninit() {},\n        onrendered: function onrendered() {},\n        transition_duration: 350,\n        data_x: undefined,\n        data_xs: {},\n        data_xFormat: '%Y-%m-%d',\n        data_xLocaltime: true,\n        data_xSort: true,\n        data_idConverter: function data_idConverter(id) {\n            return id;\n        },\n        data_names: {},\n        data_classes: {},\n        data_groups: [],\n        data_axes: {},\n        data_type: undefined,\n        data_types: {},\n        data_labels: {},\n        data_order: 'desc',\n        data_regions: {},\n        data_color: undefined,\n        data_colors: {},\n        data_hide: false,\n        data_filter: undefined,\n        data_selection_enabled: false,\n        data_selection_grouped: false,\n        data_selection_isselectable: function data_selection_isselectable() {\n            return true;\n        },\n        data_selection_multiple: true,\n        data_selection_draggable: false,\n        data_onclick: function data_onclick() {},\n        data_onmouseover: function data_onmouseover() {},\n        data_onmouseout: function data_onmouseout() {},\n        data_onselected: function data_onselected() {},\n        data_onunselected: function data_onunselected() {},\n        data_url: undefined,\n        data_headers: undefined,\n        data_json: undefined,\n        data_rows: undefined,\n        data_columns: undefined,\n        data_mimeType: undefined,\n        data_keys: undefined,\n        // configuration for no plot-able data supplied.\n        data_empty_label_text: \"\",\n        // subchart\n        subchart_show: false,\n        subchart_size_height: 60,\n        subchart_axis_x_show: true,\n        subchart_onbrush: function subchart_onbrush() {},\n        // color\n        color_pattern: [],\n        color_threshold: {},\n        // legend\n        legend_show: true,\n        legend_hide: false,\n        legend_position: 'bottom',\n        legend_inset_anchor: 'top-left',\n        legend_inset_x: 10,\n        legend_inset_y: 0,\n        legend_inset_step: undefined,\n        legend_item_onclick: undefined,\n        legend_item_onmouseover: undefined,\n        legend_item_onmouseout: undefined,\n        legend_equally: false,\n        legend_padding: 0,\n        legend_item_tile_width: 10,\n        legend_item_tile_height: 10,\n        // axis\n        axis_rotated: false,\n        axis_x_show: true,\n        axis_x_type: 'indexed',\n        axis_x_localtime: true,\n        axis_x_categories: [],\n        axis_x_tick_centered: false,\n        axis_x_tick_format: undefined,\n        axis_x_tick_culling: {},\n        axis_x_tick_culling_max: 10,\n        axis_x_tick_count: undefined,\n        axis_x_tick_fit: true,\n        axis_x_tick_values: null,\n        axis_x_tick_rotate: 0,\n        axis_x_tick_outer: true,\n        axis_x_tick_multiline: true,\n        axis_x_tick_width: null,\n        axis_x_max: undefined,\n        axis_x_min: undefined,\n        axis_x_padding: {},\n        axis_x_height: undefined,\n        axis_x_extent: undefined,\n        axis_x_label: {},\n        axis_y_show: true,\n        axis_y_type: undefined,\n        axis_y_max: undefined,\n        axis_y_min: undefined,\n        axis_y_inverted: false,\n        axis_y_center: undefined,\n        axis_y_inner: undefined,\n        axis_y_label: {},\n        axis_y_tick_format: undefined,\n        axis_y_tick_outer: true,\n        axis_y_tick_values: null,\n        axis_y_tick_rotate: 0,\n        axis_y_tick_count: undefined,\n        axis_y_tick_time_value: undefined,\n        axis_y_tick_time_interval: undefined,\n        axis_y_padding: {},\n        axis_y_default: undefined,\n        axis_y2_show: false,\n        axis_y2_max: undefined,\n        axis_y2_min: undefined,\n        axis_y2_inverted: false,\n        axis_y2_center: undefined,\n        axis_y2_inner: undefined,\n        axis_y2_label: {},\n        axis_y2_tick_format: undefined,\n        axis_y2_tick_outer: true,\n        axis_y2_tick_values: null,\n        axis_y2_tick_count: undefined,\n        axis_y2_padding: {},\n        axis_y2_default: undefined,\n        // grid\n        grid_x_show: false,\n        grid_x_type: 'tick',\n        grid_x_lines: [],\n        grid_y_show: false,\n        // not used\n        // grid_y_type: 'tick',\n        grid_y_lines: [],\n        grid_y_ticks: 10,\n        grid_focus_show: true,\n        grid_lines_front: true,\n        // point - point of each data\n        point_show: true,\n        point_r: 2.5,\n        point_sensitivity: 10,\n        point_focus_expand_enabled: true,\n        point_focus_expand_r: undefined,\n        point_select_r: undefined,\n        // line\n        line_connectNull: false,\n        line_step_type: 'step',\n        // bar\n        bar_width: undefined,\n        bar_width_ratio: 0.6,\n        bar_width_max: undefined,\n        bar_zerobased: true,\n        // area\n        area_zerobased: true,\n        area_above: false,\n        // pie\n        pie_label_show: true,\n        pie_label_format: undefined,\n        pie_label_threshold: 0.05,\n        pie_label_ratio: undefined,\n        pie_expand: {},\n        pie_expand_duration: 50,\n        // gauge\n        gauge_fullCircle: false,\n        gauge_label_show: true,\n        gauge_label_format: undefined,\n        gauge_min: 0,\n        gauge_max: 100,\n        gauge_startingAngle: -1 * Math.PI / 2,\n        gauge_label_extents: undefined,\n        gauge_units: undefined,\n        gauge_width: undefined,\n        gauge_expand: {},\n        gauge_expand_duration: 50,\n        // donut\n        donut_label_show: true,\n        donut_label_format: undefined,\n        donut_label_threshold: 0.05,\n        donut_label_ratio: undefined,\n        donut_width: undefined,\n        donut_title: \"\",\n        donut_expand: {},\n        donut_expand_duration: 50,\n        // spline\n        spline_interpolation_type: 'cardinal',\n        // region - region to change style\n        regions: [],\n        // tooltip - show when mouseover on each data\n        tooltip_show: true,\n        tooltip_grouped: true,\n        tooltip_order: undefined,\n        tooltip_format_title: undefined,\n        tooltip_format_name: undefined,\n        tooltip_format_value: undefined,\n        tooltip_position: undefined,\n        tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {\n            return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n        },\n        tooltip_init_show: false,\n        tooltip_init_x: 0,\n        tooltip_init_position: { top: '0px', left: '50px' },\n        tooltip_onshow: function tooltip_onshow() {},\n        tooltip_onhide: function tooltip_onhide() {},\n        // title\n        title_text: undefined,\n        title_padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        },\n        title_position: 'top-center'\n    };\n\n    Object.keys(this.additionalConfig).forEach(function (key) {\n        config[key] = this.additionalConfig[key];\n    }, this);\n\n    return config;\n};\nc3_chart_internal_fn.additionalConfig = {};\n\nc3_chart_internal_fn.loadConfig = function (config) {\n    var this_config = this.config,\n        target,\n        keys,\n        read;\n    function find() {\n        var key = keys.shift();\n        //        console.log(\"key =>\", key, \", target =>\", target);\n        if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {\n            target = target[key];\n            return find();\n        } else if (!key) {\n            return target;\n        } else {\n            return undefined;\n        }\n    }\n    Object.keys(this_config).forEach(function (key) {\n        target = config;\n        keys = key.split('_');\n        read = find();\n        //        console.log(\"CONFIG : \", key, read);\n        if (isDefined(read)) {\n            this_config[key] = read;\n        }\n    });\n};\n\nc3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n    var $$ = this,\n        type = mimeType ? mimeType : 'csv';\n    var req = $$.d3.xhr(url);\n    if (headers) {\n        Object.keys(headers).forEach(function (header) {\n            req.header(header, headers[header]);\n        });\n    }\n    req.get(function (error, data) {\n        var d;\n        var dataResponse = data.response || data.responseText; // Fixes IE9 XHR issue; see #1345\n        if (!data) {\n            throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n        }\n        if (type === 'json') {\n            d = $$.convertJsonToData(JSON.parse(dataResponse), keys);\n        } else if (type === 'tsv') {\n            d = $$.convertTsvToData(dataResponse);\n        } else {\n            d = $$.convertCsvToData(dataResponse);\n        }\n        done.call($$, d);\n    });\n};\nc3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n    var rows = parser.parseRows(xsv),\n        d;\n    if (rows.length === 1) {\n        d = [{}];\n        rows[0].forEach(function (id) {\n            d[0][id] = null;\n        });\n    } else {\n        d = parser.parse(xsv);\n    }\n    return d;\n};\nc3_chart_internal_fn.convertCsvToData = function (csv) {\n    return this.convertXsvToData(csv, this.d3.csv);\n};\nc3_chart_internal_fn.convertTsvToData = function (tsv) {\n    return this.convertXsvToData(tsv, this.d3.tsv);\n};\nc3_chart_internal_fn.convertJsonToData = function (json, keys) {\n    var $$ = this,\n        new_rows = [],\n        targetKeys,\n        data;\n    if (keys) {\n        // when keys specified, json would be an array that includes objects\n        if (keys.x) {\n            targetKeys = keys.value.concat(keys.x);\n            $$.config.data_x = keys.x;\n        } else {\n            targetKeys = keys.value;\n        }\n        new_rows.push(targetKeys);\n        json.forEach(function (o) {\n            var new_row = [];\n            targetKeys.forEach(function (key) {\n                // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                var v = $$.findValueInJson(o, key);\n                if (isUndefined(v)) {\n                    v = null;\n                }\n                new_row.push(v);\n            });\n            new_rows.push(new_row);\n        });\n        data = $$.convertRowsToData(new_rows);\n    } else {\n        Object.keys(json).forEach(function (key) {\n            new_rows.push([key].concat(json[key]));\n        });\n        data = $$.convertColumnsToData(new_rows);\n    }\n    return data;\n};\nc3_chart_internal_fn.findValueInJson = function (object, path) {\n    path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n    path = path.replace(/^\\./, ''); // strip a leading dot\n    var pathArray = path.split('.');\n    for (var i = 0; i < pathArray.length; ++i) {\n        var k = pathArray[i];\n        if (k in object) {\n            object = object[k];\n        } else {\n            return;\n        }\n    }\n    return object;\n};\n\n/**\n * Converts the rows to normalized data.\n * @param {any[][]} rows The row data\n * @return {Object[]}\n */\nc3_chart_internal_fn.convertRowsToData = function (rows) {\n    var newRows = [];\n    var keys = rows[0];\n\n    for (var i = 1; i < rows.length; i++) {\n        var newRow = {};\n        for (var j = 0; j < rows[i].length; j++) {\n            if (isUndefined(rows[i][j])) {\n                throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n            }\n            newRow[keys[j]] = rows[i][j];\n        }\n        newRows.push(newRow);\n    }\n    return newRows;\n};\n\n/**\n * Converts the columns to normalized data.\n * @param {any[][]} columns The column data\n * @return {Object[]}\n */\nc3_chart_internal_fn.convertColumnsToData = function (columns) {\n    var newRows = [];\n\n    for (var i = 0; i < columns.length; i++) {\n        var key = columns[i][0];\n        for (var j = 1; j < columns[i].length; j++) {\n            if (isUndefined(newRows[j - 1])) {\n                newRows[j - 1] = {};\n            }\n            if (isUndefined(columns[i][j])) {\n                throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n            }\n            newRows[j - 1][key] = columns[i][j];\n        }\n    }\n\n    return newRows;\n};\n\nc3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n    var $$ = this,\n        config = $$.config,\n        ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n        xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n        targets;\n\n    // save x for update data by load when custom x and c3.x API\n    ids.forEach(function (id) {\n        var xKey = $$.getXKey(id);\n\n        if ($$.isCustomX() || $$.isTimeSeries()) {\n            // if included in input data\n            if (xs.indexOf(xKey) >= 0) {\n                $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {\n                    return d[xKey];\n                }).filter(isValue).map(function (rawX, i) {\n                    return $$.generateTargetX(rawX, id, i);\n                }));\n            }\n            // if not included in input data, find from preloaded data of other id's x\n            else if (config.data_x) {\n                    $$.data.xs[id] = $$.getOtherTargetXs();\n                }\n                // if not included in input data, find from preloaded data\n                else if (notEmpty(config.data_xs)) {\n                        $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                    }\n            // MEMO: if no x included, use same x of current will be used\n        } else {\n            $$.data.xs[id] = data.map(function (d, i) {\n                return i;\n            });\n        }\n    });\n\n    // check x is defined\n    ids.forEach(function (id) {\n        if (!$$.data.xs[id]) {\n            throw new Error('x is not defined for id = \"' + id + '\".');\n        }\n    });\n\n    // convert to target\n    targets = ids.map(function (id, index) {\n        var convertedId = config.data_idConverter(id);\n        return {\n            id: convertedId,\n            id_org: id,\n            values: data.map(function (d, i) {\n                var xKey = $$.getXKey(id),\n                    rawX = d[xKey],\n                    value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,\n                    x;\n                // use x as categories if custom x and categorized\n                if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\n                    if (index === 0 && i === 0) {\n                        config.axis_x_categories = [];\n                    }\n                    x = config.axis_x_categories.indexOf(rawX);\n                    if (x === -1) {\n                        x = config.axis_x_categories.length;\n                        config.axis_x_categories.push(rawX);\n                    }\n                } else {\n                    x = $$.generateTargetX(rawX, id, i);\n                }\n                // mark as x = undefined if value is undefined and filter to remove after mapped\n                if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                    x = undefined;\n                }\n                return { x: x, value: value, id: convertedId };\n            }).filter(function (v) {\n                return isDefined(v.x);\n            })\n        };\n    });\n\n    // finish targets\n    targets.forEach(function (t) {\n        var i;\n        // sort values by its x\n        if (config.data_xSort) {\n            t.values = t.values.sort(function (v1, v2) {\n                var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                    x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                return x1 - x2;\n            });\n        }\n        // indexing each value\n        i = 0;\n        t.values.forEach(function (v) {\n            v.index = i++;\n        });\n        // this needs to be sorted because its index and value.index is identical\n        $$.data.xs[t.id].sort(function (v1, v2) {\n            return v1 - v2;\n        });\n    });\n\n    // cache information about values\n    $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n    $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n    // set target types\n    if (config.data_type) {\n        $$.setTargetType($$.mapToIds(targets).filter(function (id) {\n            return !(id in config.data_types);\n        }), config.data_type);\n    }\n\n    // cache as original id keyed\n    targets.forEach(function (d) {\n        $$.addCache(d.id_org, d);\n    });\n\n    return targets;\n};\n\nc3_chart_internal_fn.isX = function (key) {\n    var $$ = this,\n        config = $$.config;\n    return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);\n};\nc3_chart_internal_fn.isNotX = function (key) {\n    return !this.isX(key);\n};\nc3_chart_internal_fn.getXKey = function (id) {\n    var $$ = this,\n        config = $$.config;\n    return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n};\nc3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n    var $$ = this,\n        xValues,\n        ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n    ids.forEach(function (id) {\n        if ($$.getXKey(id) === key) {\n            xValues = $$.data.xs[id];\n        }\n    });\n    return xValues;\n};\nc3_chart_internal_fn.getIndexByX = function (x) {\n    var $$ = this,\n        data = $$.filterByX($$.data.targets, x);\n    return data.length ? data[0].index : null;\n};\nc3_chart_internal_fn.getXValue = function (id, i) {\n    var $$ = this;\n    return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n};\nc3_chart_internal_fn.getOtherTargetXs = function () {\n    var $$ = this,\n        idsForX = Object.keys($$.data.xs);\n    return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n};\nc3_chart_internal_fn.getOtherTargetX = function (index) {\n    var xs = this.getOtherTargetXs();\n    return xs && index < xs.length ? xs[index] : null;\n};\nc3_chart_internal_fn.addXs = function (xs) {\n    var $$ = this;\n    Object.keys(xs).forEach(function (id) {\n        $$.config.data_xs[id] = xs[id];\n    });\n};\nc3_chart_internal_fn.hasMultipleX = function (xs) {\n    return this.d3.set(Object.keys(xs).map(function (id) {\n        return xs[id];\n    })).size() > 1;\n};\nc3_chart_internal_fn.isMultipleX = function () {\n    return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n};\nc3_chart_internal_fn.addName = function (data) {\n    var $$ = this,\n        name;\n    if (data) {\n        name = $$.config.data_names[data.id];\n        data.name = name !== undefined ? name : data.id;\n    }\n    return data;\n};\nc3_chart_internal_fn.getValueOnIndex = function (values, index) {\n    var valueOnIndex = values.filter(function (v) {\n        return v.index === index;\n    });\n    return valueOnIndex.length ? valueOnIndex[0] : null;\n};\nc3_chart_internal_fn.updateTargetX = function (targets, x) {\n    var $$ = this;\n    targets.forEach(function (t) {\n        t.values.forEach(function (v, i) {\n            v.x = $$.generateTargetX(x[i], t.id, i);\n        });\n        $$.data.xs[t.id] = x;\n    });\n};\nc3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n    var $$ = this;\n    targets.forEach(function (t) {\n        if (xs[t.id]) {\n            $$.updateTargetX([t], xs[t.id]);\n        }\n    });\n};\nc3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n    var $$ = this,\n        x;\n    if ($$.isTimeSeries()) {\n        x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n    } else if ($$.isCustomX() && !$$.isCategorized()) {\n        x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n    } else {\n        x = index;\n    }\n    return x;\n};\nc3_chart_internal_fn.cloneTarget = function (target) {\n    return {\n        id: target.id,\n        id_org: target.id_org,\n        values: target.values.map(function (d) {\n            return { x: d.x, value: d.value, id: d.id };\n        })\n    };\n};\nc3_chart_internal_fn.updateXs = function () {\n    var $$ = this;\n    if ($$.data.targets.length) {\n        $$.xs = [];\n        $$.data.targets[0].values.forEach(function (v) {\n            $$.xs[v.index] = v.x;\n        });\n    }\n};\nc3_chart_internal_fn.getPrevX = function (i) {\n    var x = this.xs[i - 1];\n    return typeof x !== 'undefined' ? x : null;\n};\nc3_chart_internal_fn.getNextX = function (i) {\n    var x = this.xs[i + 1];\n    return typeof x !== 'undefined' ? x : null;\n};\nc3_chart_internal_fn.getMaxDataCount = function () {\n    var $$ = this;\n    return $$.d3.max($$.data.targets, function (t) {\n        return t.values.length;\n    });\n};\nc3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n    var length = targets.length,\n        max = 0,\n        maxTarget;\n    if (length > 1) {\n        targets.forEach(function (t) {\n            if (t.values.length > max) {\n                maxTarget = t;\n                max = t.values.length;\n            }\n        });\n    } else {\n        maxTarget = length ? targets[0] : null;\n    }\n    return maxTarget;\n};\nc3_chart_internal_fn.getEdgeX = function (targets) {\n    var $$ = this;\n    return !targets.length ? [0, 0] : [$$.d3.min(targets, function (t) {\n        return t.values[0].x;\n    }), $$.d3.max(targets, function (t) {\n        return t.values[t.values.length - 1].x;\n    })];\n};\nc3_chart_internal_fn.mapToIds = function (targets) {\n    return targets.map(function (d) {\n        return d.id;\n    });\n};\nc3_chart_internal_fn.mapToTargetIds = function (ids) {\n    var $$ = this;\n    return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n};\nc3_chart_internal_fn.hasTarget = function (targets, id) {\n    var ids = this.mapToIds(targets),\n        i;\n    for (i = 0; i < ids.length; i++) {\n        if (ids[i] === id) {\n            return true;\n        }\n    }\n    return false;\n};\nc3_chart_internal_fn.isTargetToShow = function (targetId) {\n    return this.hiddenTargetIds.indexOf(targetId) < 0;\n};\nc3_chart_internal_fn.isLegendToShow = function (targetId) {\n    return this.hiddenLegendIds.indexOf(targetId) < 0;\n};\nc3_chart_internal_fn.filterTargetsToShow = function (targets) {\n    var $$ = this;\n    return targets.filter(function (t) {\n        return $$.isTargetToShow(t.id);\n    });\n};\nc3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n    var $$ = this;\n    var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {\n        return t.values.map(function (v) {\n            return +v.x;\n        });\n    }))).values();\n    xs = $$.isTimeSeries() ? xs.map(function (x) {\n        return new Date(+x);\n    }) : xs.map(function (x) {\n        return +x;\n    });\n    return xs.sort(function (a, b) {\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n    });\n};\nc3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n    targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n    for (var i = 0; i < targetIds.length; i++) {\n        if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\n            this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\n        }\n    }\n};\nc3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n    this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\n        return targetIds.indexOf(id) < 0;\n    });\n};\nc3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n    targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n    for (var i = 0; i < targetIds.length; i++) {\n        if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\n            this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\n        }\n    }\n};\nc3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n    this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\n        return targetIds.indexOf(id) < 0;\n    });\n};\nc3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n    var ys = {};\n    targets.forEach(function (t) {\n        ys[t.id] = [];\n        t.values.forEach(function (v) {\n            ys[t.id].push(v.value);\n        });\n    });\n    return ys;\n};\nc3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n    var ids = Object.keys(targets),\n        i,\n        j,\n        values;\n    for (i = 0; i < ids.length; i++) {\n        values = targets[ids[i]].values;\n        for (j = 0; j < values.length; j++) {\n            if (checker(values[j].value)) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\nc3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n    return this.checkValueInTargets(targets, function (v) {\n        return v < 0;\n    });\n};\nc3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n    return this.checkValueInTargets(targets, function (v) {\n        return v > 0;\n    });\n};\nc3_chart_internal_fn.isOrderDesc = function () {\n    var config = this.config;\n    return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';\n};\nc3_chart_internal_fn.isOrderAsc = function () {\n    var config = this.config;\n    return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';\n};\nc3_chart_internal_fn.orderTargets = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        orderAsc = $$.isOrderAsc(),\n        orderDesc = $$.isOrderDesc();\n    if (orderAsc || orderDesc) {\n        targets.sort(function (t1, t2) {\n            var reducer = function reducer(p, c) {\n                return p + Math.abs(c.value);\n            };\n            var t1Sum = t1.values.reduce(reducer, 0),\n                t2Sum = t2.values.reduce(reducer, 0);\n            return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\n        });\n    } else if (isFunction(config.data_order)) {\n        targets.sort(config.data_order);\n    } else if (isArray(config.data_order)) {\n        targets.sort(function (t1, t2) {\n            return config.data_order.indexOf(t1.id) - config.data_order.indexOf(t2.id);\n        });\n    }\n    return targets;\n};\nc3_chart_internal_fn.filterByX = function (targets, x) {\n    return this.d3.merge(targets.map(function (t) {\n        return t.values;\n    })).filter(function (v) {\n        return v.x - x === 0;\n    });\n};\nc3_chart_internal_fn.filterRemoveNull = function (data) {\n    return data.filter(function (d) {\n        return isValue(d.value);\n    });\n};\nc3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n    return targets.map(function (t) {\n        return {\n            id: t.id,\n            id_org: t.id_org,\n            values: t.values.filter(function (v) {\n                return xDomain[0] <= v.x && v.x <= xDomain[1];\n            })\n        };\n    });\n};\nc3_chart_internal_fn.hasDataLabel = function () {\n    var config = this.config;\n    if (typeof config.data_labels === 'boolean' && config.data_labels) {\n        return true;\n    } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {\n        return true;\n    }\n    return false;\n};\nc3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n    var $$ = this,\n        lengths = [0, 0],\n        paddingCoef = 1.3;\n    $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {\n        return $$.dataLabelFormat(d.id)(d);\n    }).each(function (d, i) {\n        lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n    }).remove();\n    return lengths;\n};\nc3_chart_internal_fn.isNoneArc = function (d) {\n    return this.hasTarget(this.data.targets, d.id);\n}, c3_chart_internal_fn.isArc = function (d) {\n    return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n};\nc3_chart_internal_fn.findSameXOfValues = function (values, index) {\n    var i,\n        targetX = values[index].x,\n        sames = [];\n    for (i = index - 1; i >= 0; i--) {\n        if (targetX !== values[i].x) {\n            break;\n        }\n        sames.push(values[i]);\n    }\n    for (i = index; i < values.length; i++) {\n        if (targetX !== values[i].x) {\n            break;\n        }\n        sames.push(values[i]);\n    }\n    return sames;\n};\n\nc3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n    var $$ = this,\n        candidates;\n\n    // map to array of closest points of each target\n    candidates = targets.map(function (target) {\n        return $$.findClosest(target.values, pos);\n    });\n\n    // decide closest point and return\n    return $$.findClosest(candidates, pos);\n};\nc3_chart_internal_fn.findClosest = function (values, pos) {\n    var $$ = this,\n        minDist = $$.config.point_sensitivity,\n        closest;\n\n    // find mouseovering bar\n    values.filter(function (v) {\n        return v && $$.isBarType(v.id);\n    }).forEach(function (v) {\n        var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n        if (!closest && $$.isWithinBar(shape)) {\n            closest = v;\n        }\n    });\n\n    // find closest point from non-bar\n    values.filter(function (v) {\n        return v && !$$.isBarType(v.id);\n    }).forEach(function (v) {\n        var d = $$.dist(v, pos);\n        if (d < minDist) {\n            minDist = d;\n            closest = v;\n        }\n    });\n\n    return closest;\n};\nc3_chart_internal_fn.dist = function (data, pos) {\n    var $$ = this,\n        config = $$.config,\n        xIndex = config.axis_rotated ? 1 : 0,\n        yIndex = config.axis_rotated ? 0 : 1,\n        y = $$.circleY(data, data.index),\n        x = $$.x(data.x);\n    return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n};\nc3_chart_internal_fn.convertValuesToStep = function (values) {\n    var converted = [].concat(values),\n        i;\n\n    if (!this.isCategorized()) {\n        return values;\n    }\n\n    for (i = values.length + 1; 0 < i; i--) {\n        converted[i] = converted[i - 1];\n    }\n\n    converted[0] = {\n        x: converted[0].x - 1,\n        value: converted[0].value,\n        id: converted[0].id\n    };\n    converted[values.length + 1] = {\n        x: converted[values.length].x + 1,\n        value: converted[values.length].value,\n        id: converted[values.length].id\n    };\n\n    return converted;\n};\nc3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n    var $$ = this,\n        config = $$.config,\n        current = config['data_' + name];\n    if (typeof attrs === 'undefined') {\n        return current;\n    }\n    Object.keys(attrs).forEach(function (id) {\n        current[id] = attrs[id];\n    });\n    $$.redraw({ withLegend: true });\n    return current;\n};\n\nc3_chart_internal_fn.load = function (targets, args) {\n    var $$ = this;\n    if (targets) {\n        // filter loading targets if needed\n        if (args.filter) {\n            targets = targets.filter(args.filter);\n        }\n        // set type if args.types || args.type specified\n        if (args.type || args.types) {\n            targets.forEach(function (t) {\n                var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                $$.setTargetType(t.id, type);\n            });\n        }\n        // Update/Add data\n        $$.data.targets.forEach(function (d) {\n            for (var i = 0; i < targets.length; i++) {\n                if (d.id === targets[i].id) {\n                    d.values = targets[i].values;\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n        });\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n    }\n\n    // Set targets\n    $$.updateTargets($$.data.targets);\n\n    // Redraw with new targets\n    $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n\n    if (args.done) {\n        args.done();\n    }\n};\nc3_chart_internal_fn.loadFromArgs = function (args) {\n    var $$ = this;\n    if (args.data) {\n        $$.load($$.convertDataToTargets(args.data), args);\n    } else if (args.url) {\n        $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n            $$.load($$.convertDataToTargets(data), args);\n        });\n    } else if (args.json) {\n        $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n    } else if (args.rows) {\n        $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n    } else if (args.columns) {\n        $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n    } else {\n        $$.load(null, args);\n    }\n};\nc3_chart_internal_fn.unload = function (targetIds, done) {\n    var $$ = this;\n    if (!done) {\n        done = function done() {};\n    }\n    // filter existing target\n    targetIds = targetIds.filter(function (id) {\n        return $$.hasTarget($$.data.targets, id);\n    });\n    // If no target, call done and return\n    if (!targetIds || targetIds.length === 0) {\n        done();\n        return;\n    }\n    $$.svg.selectAll(targetIds.map(function (id) {\n        return $$.selectorTarget(id);\n    })).transition().style('opacity', 0).remove().call($$.endall, done);\n    targetIds.forEach(function (id) {\n        // Reset fadein for future load\n        $$.withoutFadeIn[id] = false;\n        // Remove target's elements\n        if ($$.legend) {\n            $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n        }\n        // Remove target\n        $$.data.targets = $$.data.targets.filter(function (t) {\n            return t.id !== id;\n        });\n    });\n};\n\nc3_chart_internal_fn.getYDomainMin = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        ids = $$.mapToIds(targets),\n        ys = $$.getValuesAsIdKeyed(targets),\n        j,\n        k,\n        baseId,\n        idsInGroup,\n        id,\n        hasNegativeValue;\n    if (config.data_groups.length > 0) {\n        hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        for (j = 0; j < config.data_groups.length; j++) {\n            // Determine baseId\n            idsInGroup = config.data_groups[j].filter(function (id) {\n                return ids.indexOf(id) >= 0;\n            });\n            if (idsInGroup.length === 0) {\n                continue;\n            }\n            baseId = idsInGroup[0];\n            // Consider negative values\n            if (hasNegativeValue && ys[baseId]) {\n                ys[baseId].forEach(function (v, i) {\n                    ys[baseId][i] = v < 0 ? v : 0;\n                });\n            }\n            // Compute min\n            for (k = 1; k < idsInGroup.length; k++) {\n                id = idsInGroup[k];\n                if (!ys[id]) {\n                    continue;\n                }\n                ys[id].forEach(function (v, i) {\n                    if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                        ys[baseId][i] += +v;\n                    }\n                });\n            }\n        }\n    }\n    return $$.d3.min(Object.keys(ys).map(function (key) {\n        return $$.d3.min(ys[key]);\n    }));\n};\nc3_chart_internal_fn.getYDomainMax = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        ids = $$.mapToIds(targets),\n        ys = $$.getValuesAsIdKeyed(targets),\n        j,\n        k,\n        baseId,\n        idsInGroup,\n        id,\n        hasPositiveValue;\n    if (config.data_groups.length > 0) {\n        hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n        for (j = 0; j < config.data_groups.length; j++) {\n            // Determine baseId\n            idsInGroup = config.data_groups[j].filter(function (id) {\n                return ids.indexOf(id) >= 0;\n            });\n            if (idsInGroup.length === 0) {\n                continue;\n            }\n            baseId = idsInGroup[0];\n            // Consider positive values\n            if (hasPositiveValue && ys[baseId]) {\n                ys[baseId].forEach(function (v, i) {\n                    ys[baseId][i] = v > 0 ? v : 0;\n                });\n            }\n            // Compute max\n            for (k = 1; k < idsInGroup.length; k++) {\n                id = idsInGroup[k];\n                if (!ys[id]) {\n                    continue;\n                }\n                ys[id].forEach(function (v, i) {\n                    if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                        ys[baseId][i] += +v;\n                    }\n                });\n            }\n        }\n    }\n    return $$.d3.max(Object.keys(ys).map(function (key) {\n        return $$.d3.max(ys[key]);\n    }));\n};\nc3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n    var $$ = this,\n        config = $$.config,\n        targetsByAxisId = targets.filter(function (t) {\n        return $$.axis.getId(t.id) === axisId;\n    }),\n        yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n        yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n        yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n        yDomainMin = $$.getYDomainMin(yTargets),\n        yDomainMax = $$.getYDomainMax(yTargets),\n        domain,\n        domainLength,\n        padding,\n        padding_top,\n        padding_bottom,\n        center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n        yDomainAbs,\n        lengths,\n        diff,\n        ratio,\n        isAllPositive,\n        isAllNegative,\n        isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,\n        isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n        showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n        showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n    // MEMO: avoid inverting domain unexpectedly\n    yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;\n    yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;\n\n    if (yTargets.length === 0) {\n        // use current domain if target of axisId is none\n        return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n    }\n    if (isNaN(yDomainMin)) {\n        // set minimum to zero when not number\n        yDomainMin = 0;\n    }\n    if (isNaN(yDomainMax)) {\n        // set maximum to have same value as yDomainMin\n        yDomainMax = yDomainMin;\n    }\n    if (yDomainMin === yDomainMax) {\n        yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n    }\n    isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n    isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n    // Cancel zerobased if axis_*_min / axis_*_max specified\n    if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {\n        isZeroBased = false;\n    }\n\n    // Bar/Area chart should be 0-based if all positive|negative\n    if (isZeroBased) {\n        if (isAllPositive) {\n            yDomainMin = 0;\n        }\n        if (isAllNegative) {\n            yDomainMax = 0;\n        }\n    }\n\n    domainLength = Math.abs(yDomainMax - yDomainMin);\n    padding = padding_top = padding_bottom = domainLength * 0.1;\n\n    if (typeof center !== 'undefined') {\n        yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n        yDomainMax = center + yDomainAbs;\n        yDomainMin = center - yDomainAbs;\n    }\n    // add padding for data label\n    if (showHorizontalDataLabel) {\n        lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n        diff = diffDomain($$.y.range());\n        ratio = [lengths[0] / diff, lengths[1] / diff];\n        padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n        padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n    } else if (showVerticalDataLabel) {\n        lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n        padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n        padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n    }\n    if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n        padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n        padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n    }\n    if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n        padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n        padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n    }\n    // Bar/Area chart should be 0-based if all positive|negative\n    if (isZeroBased) {\n        if (isAllPositive) {\n            padding_bottom = yDomainMin;\n        }\n        if (isAllNegative) {\n            padding_top = -yDomainMax;\n        }\n    }\n    domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n    return isInverted ? domain.reverse() : domain;\n};\nc3_chart_internal_fn.getXDomainMin = function (targets) {\n    var $$ = this,\n        config = $$.config;\n    return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {\n        return $$.d3.min(t.values, function (v) {\n            return v.x;\n        });\n    });\n};\nc3_chart_internal_fn.getXDomainMax = function (targets) {\n    var $$ = this,\n        config = $$.config;\n    return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {\n        return $$.d3.max(t.values, function (v) {\n            return v.x;\n        });\n    });\n};\nc3_chart_internal_fn.getXDomainPadding = function (domain) {\n    var $$ = this,\n        config = $$.config,\n        diff = domain[1] - domain[0],\n        maxDataCount,\n        padding,\n        paddingLeft,\n        paddingRight;\n    if ($$.isCategorized()) {\n        padding = 0;\n    } else if ($$.hasType('bar')) {\n        maxDataCount = $$.getMaxDataCount();\n        padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\n    } else {\n        padding = diff * 0.01;\n    }\n    if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {\n        paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n        paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n    } else if (typeof config.axis_x_padding === 'number') {\n        paddingLeft = paddingRight = config.axis_x_padding;\n    } else {\n        paddingLeft = paddingRight = padding;\n    }\n    return { left: paddingLeft, right: paddingRight };\n};\nc3_chart_internal_fn.getXDomain = function (targets) {\n    var $$ = this,\n        xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n        firstX = xDomain[0],\n        lastX = xDomain[1],\n        padding = $$.getXDomainPadding(xDomain),\n        min = 0,\n        max = 0;\n    // show center of x domain if min and max are the same\n    if (firstX - lastX === 0 && !$$.isCategorized()) {\n        if ($$.isTimeSeries()) {\n            firstX = new Date(firstX.getTime() * 0.5);\n            lastX = new Date(lastX.getTime() * 1.5);\n        } else {\n            firstX = firstX === 0 ? 1 : firstX * 0.5;\n            lastX = lastX === 0 ? -1 : lastX * 1.5;\n        }\n    }\n    if (firstX || firstX === 0) {\n        min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n    }\n    if (lastX || lastX === 0) {\n        max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n    }\n    return [min, max];\n};\nc3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n    var $$ = this,\n        config = $$.config;\n\n    if (withUpdateOrgXDomain) {\n        $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n        $$.orgXDomain = $$.x.domain();\n        if (config.zoom_enabled) {\n            $$.zoom.scale($$.x).updateScaleExtent();\n        }\n        $$.subX.domain($$.x.domain());\n        if ($$.brush) {\n            $$.brush.scale($$.subX);\n        }\n    }\n    if (withUpdateXDomain) {\n        $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.extent());\n        if (config.zoom_enabled) {\n            $$.zoom.scale($$.x).updateScaleExtent();\n        }\n    }\n\n    // Trim domain when too big by zoom mousemove event\n    if (withTrim) {\n        $$.x.domain($$.trimXDomain($$.x.orgDomain()));\n    }\n\n    return $$.x.domain();\n};\nc3_chart_internal_fn.trimXDomain = function (domain) {\n    var zoomDomain = this.getZoomDomain(),\n        min = zoomDomain[0],\n        max = zoomDomain[1];\n    if (domain[0] <= min) {\n        domain[1] = +domain[1] + (min - domain[0]);\n        domain[0] = min;\n    }\n    if (max <= domain[1]) {\n        domain[0] = +domain[0] - (domain[1] - max);\n        domain[1] = max;\n    }\n    return domain;\n};\n\nc3_chart_internal_fn.drag = function (mouse) {\n    var $$ = this,\n        config = $$.config,\n        main = $$.main,\n        d3 = $$.d3;\n    var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n    if ($$.hasArcType()) {\n        return;\n    }\n    if (!config.data_selection_enabled) {\n        return;\n    } // do nothing if not selectable\n    if (config.zoom_enabled && !$$.zoom.altDomain) {\n        return;\n    } // skip if zoomable because of conflict drag dehavior\n    if (!config.data_selection_multiple) {\n        return;\n    } // skip when single selection because drag is used for multiple selection\n\n    sx = $$.dragStart[0];\n    sy = $$.dragStart[1];\n    mx = mouse[0];\n    my = mouse[1];\n    minX = Math.min(sx, mx);\n    maxX = Math.max(sx, mx);\n    minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\n    maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\n\n    main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY);\n    // TODO: binary search when multiple xs\n    main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {\n        return config.data_selection_isselectable(d);\n    }).each(function (d, i) {\n        var shape = d3.select(this),\n            isSelected = shape.classed(CLASS.SELECTED),\n            isIncluded = shape.classed(CLASS.INCLUDED),\n            _x,\n            _y,\n            _w,\n            _h,\n            toggle,\n            isWithin = false,\n            box;\n        if (shape.classed(CLASS.circle)) {\n            _x = shape.attr(\"cx\") * 1;\n            _y = shape.attr(\"cy\") * 1;\n            toggle = $$.togglePoint;\n            isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n        } else if (shape.classed(CLASS.bar)) {\n            box = getPathBox(this);\n            _x = box.x;\n            _y = box.y;\n            _w = box.width;\n            _h = box.height;\n            toggle = $$.togglePath;\n            isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n        } else {\n            // line/area selection not supported yet\n            return;\n        }\n        if (isWithin ^ isIncluded) {\n            shape.classed(CLASS.INCLUDED, !isIncluded);\n            // TODO: included/unincluded callback here\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle.call($$, !isSelected, shape, d, i);\n        }\n    });\n};\n\nc3_chart_internal_fn.dragstart = function (mouse) {\n    var $$ = this,\n        config = $$.config;\n    if ($$.hasArcType()) {\n        return;\n    }\n    if (!config.data_selection_enabled) {\n        return;\n    } // do nothing if not selectable\n    $$.dragStart = mouse;\n    $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);\n    $$.dragging = true;\n};\n\nc3_chart_internal_fn.dragend = function () {\n    var $$ = this,\n        config = $$.config;\n    if ($$.hasArcType()) {\n        return;\n    }\n    if (!config.data_selection_enabled) {\n        return;\n    } // do nothing if not selectable\n    $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();\n    $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\n    $$.dragging = false;\n};\n\nc3_chart_internal_fn.getYFormat = function (forArc) {\n    var $$ = this,\n        formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n        formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n    return function (v, ratio, id) {\n        var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n        return format.call($$, v, ratio);\n    };\n};\nc3_chart_internal_fn.yFormat = function (v) {\n    var $$ = this,\n        config = $$.config,\n        format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n    return format(v);\n};\nc3_chart_internal_fn.y2Format = function (v) {\n    var $$ = this,\n        config = $$.config,\n        format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n    return format(v);\n};\nc3_chart_internal_fn.defaultValueFormat = function (v) {\n    return isValue(v) ? +v : \"\";\n};\nc3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n    return (ratio * 100).toFixed(1) + '%';\n};\nc3_chart_internal_fn.dataLabelFormat = function (targetId) {\n    var $$ = this,\n        data_labels = $$.config.data_labels,\n        format,\n        defaultFormat = function defaultFormat(v) {\n        return isValue(v) ? +v : \"\";\n    };\n    // find format according to axis id\n    if (typeof data_labels.format === 'function') {\n        format = data_labels.format;\n    } else if (_typeof(data_labels.format) === 'object') {\n        if (data_labels.format[targetId]) {\n            format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n        } else {\n            format = function format() {\n                return '';\n            };\n        }\n    } else {\n        format = defaultFormat;\n    }\n    return format;\n};\n\nc3_chart_internal_fn.initGrid = function () {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3;\n    $$.grid = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid);\n    if (config.grid_x_show) {\n        $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n    }\n    if (config.grid_y_show) {\n        $$.grid.append('g').attr('class', CLASS.ygrids);\n    }\n    if (config.grid_focus_show) {\n        $$.grid.append('g').attr(\"class\", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);\n    }\n    $$.xgrid = d3.selectAll([]);\n    if (!config.grid_lines_front) {\n        $$.initGridLines();\n    }\n};\nc3_chart_internal_fn.initGridLines = function () {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.gridLines = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n    $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n    $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n    $$.xgridLines = d3.selectAll([]);\n};\nc3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3,\n        xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n        tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n    $$.xgridAttr = config.axis_rotated ? {\n        'x1': 0,\n        'x2': $$.width,\n        'y1': function y1(d) {\n            return $$.x(d) - tickOffset;\n        },\n        'y2': function y2(d) {\n            return $$.x(d) - tickOffset;\n        }\n    } : {\n        'x1': function x1(d) {\n            return $$.x(d) + tickOffset;\n        },\n        'x2': function x2(d) {\n            return $$.x(d) + tickOffset;\n        },\n        'y1': 0,\n        'y2': $$.height\n    };\n\n    $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);\n    $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n    if (!withoutUpdate) {\n        $$.xgrid.attr($$.xgridAttr).style(\"opacity\", function () {\n            return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\n        });\n    }\n    $$.xgrid.exit().remove();\n};\n\nc3_chart_internal_fn.updateYGrid = function () {\n    var $$ = this,\n        config = $$.config,\n        gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n    $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);\n    $$.ygrid.enter().append('line').attr('class', CLASS.ygrid);\n    $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0).attr(\"x2\", config.axis_rotated ? $$.y : $$.width).attr(\"y1\", config.axis_rotated ? 0 : $$.y).attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n    $$.ygrid.exit().remove();\n    $$.smoothLines($$.ygrid, 'grid');\n};\n\nc3_chart_internal_fn.gridTextAnchor = function (d) {\n    return d.position ? d.position : \"end\";\n};\nc3_chart_internal_fn.gridTextDx = function (d) {\n    return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n};\nc3_chart_internal_fn.xGridTextX = function (d) {\n    return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n};\nc3_chart_internal_fn.yGridTextX = function (d) {\n    return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n};\nc3_chart_internal_fn.updateGrid = function (duration) {\n    var $$ = this,\n        main = $$.main,\n        config = $$.config,\n        xgridLine,\n        ygridLine,\n        yv;\n\n    // hide if arc type\n    $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n    main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    if (config.grid_x_show) {\n        $$.updateXGrid();\n    }\n    $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines);\n    // enter\n    xgridLine = $$.xgridLines.enter().append('g').attr(\"class\", function (d) {\n        return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\n    });\n    xgridLine.append('line').style(\"opacity\", 0);\n    xgridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n    // udpate\n    // done in d3.transition() of the end of this function\n    // exit\n    $$.xgridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n\n    // Y-Grid\n    if (config.grid_y_show) {\n        $$.updateYGrid();\n    }\n    $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines);\n    // enter\n    ygridLine = $$.ygridLines.enter().append('g').attr(\"class\", function (d) {\n        return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\n    });\n    ygridLine.append('line').style(\"opacity\", 0);\n    ygridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n    // update\n    yv = $$.yv.bind($$);\n    $$.ygridLines.select('line').transition().duration(duration).attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 1);\n    $$.ygridLines.select('text').transition().duration(duration).attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr(\"y\", yv).text(function (d) {\n        return d.text;\n    }).style(\"opacity\", 1);\n    // exit\n    $$.ygridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n};\nc3_chart_internal_fn.redrawGrid = function (withTransition) {\n    var $$ = this,\n        config = $$.config,\n        xv = $$.xv.bind($$),\n        lines = $$.xgridLines.select('line'),\n        texts = $$.xgridLines.select('text');\n    return [(withTransition ? lines.transition() : lines).attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 1), (withTransition ? texts.transition() : texts).attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr(\"y\", xv).text(function (d) {\n        return d.text;\n    }).style(\"opacity\", 1)];\n};\nc3_chart_internal_fn.showXGridFocus = function (selectedData) {\n    var $$ = this,\n        config = $$.config,\n        dataToShow = selectedData.filter(function (d) {\n        return d && isValue(d.value);\n    }),\n        focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n        xx = $$.xx.bind($$);\n    if (!config.tooltip_show) {\n        return;\n    }\n    // Hide when scatter plot exists\n    if ($$.hasType('scatter') || $$.hasArcType()) {\n        return;\n    }\n    focusEl.style(\"visibility\", \"visible\").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);\n    $$.smoothLines(focusEl, 'grid');\n};\nc3_chart_internal_fn.hideXGridFocus = function () {\n    this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n};\nc3_chart_internal_fn.updateXgridFocus = function () {\n    var $$ = this,\n        config = $$.config;\n    $$.main.select('line.' + CLASS.xgridFocus).attr(\"x1\", config.axis_rotated ? 0 : -10).attr(\"x2\", config.axis_rotated ? $$.width : -10).attr(\"y1\", config.axis_rotated ? -10 : 0).attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n};\nc3_chart_internal_fn.generateGridData = function (type, scale) {\n    var $$ = this,\n        gridData = [],\n        xDomain,\n        firstYear,\n        lastYear,\n        i,\n        tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n    if (type === 'year') {\n        xDomain = $$.getXDomain();\n        firstYear = xDomain[0].getFullYear();\n        lastYear = xDomain[1].getFullYear();\n        for (i = firstYear; i <= lastYear; i++) {\n            gridData.push(new Date(i + '-01-01 00:00:00'));\n        }\n    } else {\n        gridData = scale.ticks(10);\n        if (gridData.length > tickNum) {\n            // use only int\n            gridData = gridData.filter(function (d) {\n                return (\"\" + d).indexOf('.') < 0;\n            });\n        }\n    }\n    return gridData;\n};\nc3_chart_internal_fn.getGridFilterToRemove = function (params) {\n    return params ? function (line) {\n        var found = false;\n        [].concat(params).forEach(function (param) {\n            if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {\n                found = true;\n            }\n        });\n        return found;\n    } : function () {\n        return true;\n    };\n};\nc3_chart_internal_fn.removeGridLines = function (params, forX) {\n    var $$ = this,\n        config = $$.config,\n        toRemove = $$.getGridFilterToRemove(params),\n        toShow = function toShow(line) {\n        return !toRemove(line);\n    },\n        classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n        classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n    $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();\n    if (forX) {\n        config.grid_x_lines = config.grid_x_lines.filter(toShow);\n    } else {\n        config.grid_y_lines = config.grid_y_lines.filter(toShow);\n    }\n};\n\nc3_chart_internal_fn.initEventRect = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.eventRects).style('fill-opacity', 0);\n};\nc3_chart_internal_fn.redrawEventRect = function () {\n    var $$ = this,\n        config = $$.config,\n        eventRectUpdate,\n        maxDataCountTarget,\n        isMultipleX = $$.isMultipleX();\n\n    // rects for mouseover\n    var eventRects = $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null).classed(CLASS.eventRectsMultiple, isMultipleX).classed(CLASS.eventRectsSingle, !isMultipleX);\n\n    // clear old rects\n    eventRects.selectAll('.' + CLASS.eventRect).remove();\n\n    // open as public variable\n    $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n    if (isMultipleX) {\n        eventRectUpdate = $$.eventRect.data([0]);\n        // enter : only one rect will be added\n        $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n        // update\n        $$.updateEventRect(eventRectUpdate);\n        // exit : not needed because always only one rect exists\n    } else {\n        // Set data and update $$.eventRect\n        maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n        eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n        eventRectUpdate = $$.eventRect.data(function (d) {\n            return d;\n        });\n        // enter\n        $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n        // update\n        $$.updateEventRect(eventRectUpdate);\n        // exit\n        eventRectUpdate.exit().remove();\n    }\n};\nc3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n    var $$ = this,\n        config = $$.config,\n        x,\n        y,\n        w,\n        h,\n        rectW,\n        rectX;\n\n    // set update selection if null\n    eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) {\n        return d;\n    });\n\n    if ($$.isMultipleX()) {\n        // TODO: rotated not supported yet\n        x = 0;\n        y = 0;\n        w = $$.width;\n        h = $$.height;\n    } else {\n        if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\n            // update index for x that is used by prevX and nextX\n            $$.updateXs();\n\n            rectW = function rectW(d) {\n                var prevX = $$.getPrevX(d.index),\n                    nextX = $$.getNextX(d.index);\n\n                // if there this is a single data point make the eventRect full width (or height)\n                if (prevX === null && nextX === null) {\n                    return config.axis_rotated ? $$.height : $$.width;\n                }\n\n                if (prevX === null) {\n                    prevX = $$.x.domain()[0];\n                }\n                if (nextX === null) {\n                    nextX = $$.x.domain()[1];\n                }\n\n                return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n            };\n            rectX = function rectX(d) {\n                var prevX = $$.getPrevX(d.index),\n                    nextX = $$.getNextX(d.index),\n                    thisX = $$.data.xs[d.id][d.index];\n\n                // if there this is a single data point position the eventRect at 0\n                if (prevX === null && nextX === null) {\n                    return 0;\n                }\n\n                if (prevX === null) {\n                    prevX = $$.x.domain()[0];\n                }\n\n                return ($$.x(thisX) + $$.x(prevX)) / 2;\n            };\n        } else {\n            rectW = $$.getEventRectWidth();\n            rectX = function rectX(d) {\n                return $$.x(d.x) - rectW / 2;\n            };\n        }\n        x = config.axis_rotated ? 0 : rectX;\n        y = config.axis_rotated ? rectX : 0;\n        w = config.axis_rotated ? $$.width : rectW;\n        h = config.axis_rotated ? rectW : $$.height;\n    }\n\n    eventRectUpdate.attr('class', $$.classEvent.bind($$)).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h);\n};\nc3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n    eventRectEnter.append(\"rect\").attr(\"class\", $$.classEvent.bind($$)).style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null).on('mouseover', function (d) {\n        var index = d.index;\n\n        if ($$.dragging || $$.flowing) {\n            return;\n        } // do nothing while dragging/flowing\n        if ($$.hasArcType()) {\n            return;\n        }\n\n        // Expand shapes for selection\n        if (config.point_focus_expand_enabled) {\n            $$.expandCircles(index, null, true);\n        }\n        $$.expandBars(index, null, true);\n\n        // Call event handler\n        $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n            config.data_onmouseover.call($$.api, d);\n        });\n    }).on('mouseout', function (d) {\n        var index = d.index;\n        if (!$$.config) {\n            return;\n        } // chart is destroyed\n        if ($$.hasArcType()) {\n            return;\n        }\n        $$.hideXGridFocus();\n        $$.hideTooltip();\n        // Undo expanded shapes\n        $$.unexpandCircles();\n        $$.unexpandBars();\n        // Call event handler\n        $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n            config.data_onmouseout.call($$.api, d);\n        });\n    }).on('mousemove', function (d) {\n        var selectedData,\n            index = d.index,\n            eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n        if ($$.dragging || $$.flowing) {\n            return;\n        } // do nothing while dragging/flowing\n        if ($$.hasArcType()) {\n            return;\n        }\n\n        if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n            index -= 1;\n        }\n\n        // Show tooltip\n        selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n            return $$.addName($$.getValueOnIndex(t.values, index));\n        });\n\n        if (config.tooltip_grouped) {\n            $$.showTooltip(selectedData, this);\n            $$.showXGridFocus(selectedData);\n        }\n\n        if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n            return;\n        }\n\n        $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function () {\n            d3.select(this).classed(CLASS.EXPANDED, true);\n            if (config.data_selection_enabled) {\n                eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n            }\n            if (!config.tooltip_grouped) {\n                $$.hideXGridFocus();\n                $$.hideTooltip();\n                if (!config.data_selection_grouped) {\n                    $$.unexpandCircles(index);\n                    $$.unexpandBars(index);\n                }\n            }\n        }).filter(function (d) {\n            return $$.isWithinShape(this, d);\n        }).each(function (d) {\n            if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n                eventRect.style('cursor', 'pointer');\n            }\n            if (!config.tooltip_grouped) {\n                $$.showTooltip([d], this);\n                $$.showXGridFocus([d]);\n                if (config.point_focus_expand_enabled) {\n                    $$.expandCircles(index, d.id, true);\n                }\n                $$.expandBars(index, d.id, true);\n            }\n        });\n    }).on('click', function (d) {\n        var index = d.index;\n        if ($$.hasArcType() || !$$.toggleShape) {\n            return;\n        }\n        if ($$.cancelClick) {\n            $$.cancelClick = false;\n            return;\n        }\n        if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n            index -= 1;\n        }\n        $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n            if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                $$.toggleShape(this, d, index);\n                $$.config.data_onclick.call($$.api, d, this);\n            }\n        });\n    }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n        $$.drag(d3.mouse(this));\n    }).on('dragstart', function () {\n        $$.dragstart(d3.mouse(this));\n    }).on('dragend', function () {\n        $$.dragend();\n    }) : function () {});\n};\n\nc3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config;\n\n    function mouseout() {\n        $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n        $$.hideXGridFocus();\n        $$.hideTooltip();\n        $$.unexpandCircles();\n        $$.unexpandBars();\n    }\n\n    eventRectEnter.append('rect').attr('x', 0).attr('y', 0).attr('width', $$.width).attr('height', $$.height).attr('class', CLASS.eventRect).on('mouseout', function () {\n        if (!$$.config) {\n            return;\n        } // chart is destroyed\n        if ($$.hasArcType()) {\n            return;\n        }\n        mouseout();\n    }).on('mousemove', function () {\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n        var mouse, closest, sameXData, selectedData;\n\n        if ($$.dragging) {\n            return;\n        } // do nothing when dragging\n        if ($$.hasArcType(targetsToShow)) {\n            return;\n        }\n\n        mouse = d3.mouse(this);\n        closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n        if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n            config.data_onmouseout.call($$.api, $$.mouseover);\n            $$.mouseover = undefined;\n        }\n\n        if (!closest) {\n            mouseout();\n            return;\n        }\n\n        if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n            sameXData = [closest];\n        } else {\n            sameXData = $$.filterByX(targetsToShow, closest.x);\n        }\n\n        // show tooltip when cursor is close to some point\n        selectedData = sameXData.map(function (d) {\n            return $$.addName(d);\n        });\n        $$.showTooltip(selectedData, this);\n\n        // expand points\n        if (config.point_focus_expand_enabled) {\n            $$.expandCircles(closest.index, closest.id, true);\n        }\n        $$.expandBars(closest.index, closest.id, true);\n\n        // Show xgrid focus line\n        $$.showXGridFocus(selectedData);\n\n        // Show cursor as pointer if point is close to mouse position\n        if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n            if (!$$.mouseover) {\n                config.data_onmouseover.call($$.api, closest);\n                $$.mouseover = closest;\n            }\n        }\n    }).on('click', function () {\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n        var mouse, closest;\n        if ($$.hasArcType(targetsToShow)) {\n            return;\n        }\n\n        mouse = d3.mouse(this);\n        closest = $$.findClosestFromTargets(targetsToShow, mouse);\n        if (!closest) {\n            return;\n        }\n        // select if selection enabled\n        if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n            $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n                if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n                    $$.toggleShape(this, closest, closest.index);\n                    $$.config.data_onclick.call($$.api, closest, this);\n                }\n            });\n        }\n    }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n        $$.drag(d3.mouse(this));\n    }).on('dragstart', function () {\n        $$.dragstart(d3.mouse(this));\n    }).on('dragend', function () {\n        $$.dragend();\n    }) : function () {});\n};\nc3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n    var $$ = this,\n        selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n        eventRect = $$.main.select(selector).node(),\n        box = eventRect.getBoundingClientRect(),\n        x = box.left + (mouse ? mouse[0] : 0),\n        y = box.top + (mouse ? mouse[1] : 0),\n        event = document.createEvent(\"MouseEvents\");\n\n    event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\n    eventRect.dispatchEvent(event);\n};\n\nc3_chart_internal_fn.initLegend = function () {\n    var $$ = this;\n    $$.legendItemTextBox = {};\n    $$.legendHasRendered = false;\n    $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n    if (!$$.config.legend_show) {\n        $$.legend.style('visibility', 'hidden');\n        $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n        return;\n    }\n    // MEMO: call here to update legend box and tranlate for all\n    // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n    $$.updateLegendWithDefaults();\n};\nc3_chart_internal_fn.updateLegendWithDefaults = function () {\n    var $$ = this;\n    $$.updateLegend($$.mapToIds($$.data.targets), { withTransform: false, withTransitionForTransform: false, withTransition: false });\n};\nc3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n    var $$ = this,\n        config = $$.config,\n        insetLegendPosition = {\n        top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n        left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n    };\n\n    $$.margin3 = {\n        top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n        right: NaN,\n        bottom: 0,\n        left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n    };\n};\nc3_chart_internal_fn.transformLegend = function (withTransition) {\n    var $$ = this;\n    (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n};\nc3_chart_internal_fn.updateLegendStep = function (step) {\n    this.legendStep = step;\n};\nc3_chart_internal_fn.updateLegendItemWidth = function (w) {\n    this.legendItemWidth = w;\n};\nc3_chart_internal_fn.updateLegendItemHeight = function (h) {\n    this.legendItemHeight = h;\n};\nc3_chart_internal_fn.getLegendWidth = function () {\n    var $$ = this;\n    return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n};\nc3_chart_internal_fn.getLegendHeight = function () {\n    var $$ = this,\n        h = 0;\n    if ($$.config.legend_show) {\n        if ($$.isLegendRight) {\n            h = $$.currentHeight;\n        } else {\n            h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n        }\n    }\n    return h;\n};\nc3_chart_internal_fn.opacityForLegend = function (legendItem) {\n    return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n};\nc3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n    return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n};\nc3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n    var $$ = this;\n    targetIds = $$.mapToTargetIds(targetIds);\n    $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {\n        return targetIds.indexOf(id) >= 0;\n    }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {\n        var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n        return opacity.call($$, $$.d3.select(this));\n    });\n};\nc3_chart_internal_fn.revertLegend = function () {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {\n        return $$.opacityForLegend(d3.select(this));\n    });\n};\nc3_chart_internal_fn.showLegend = function (targetIds) {\n    var $$ = this,\n        config = $$.config;\n    if (!config.legend_show) {\n        config.legend_show = true;\n        $$.legend.style('visibility', 'visible');\n        if (!$$.legendHasRendered) {\n            $$.updateLegendWithDefaults();\n        }\n    }\n    $$.removeHiddenLegendIds(targetIds);\n    $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {\n        return $$.opacityForLegend($$.d3.select(this));\n    });\n};\nc3_chart_internal_fn.hideLegend = function (targetIds) {\n    var $$ = this,\n        config = $$.config;\n    if (config.legend_show && isEmpty(targetIds)) {\n        config.legend_show = false;\n        $$.legend.style('visibility', 'hidden');\n    }\n    $$.addHiddenLegendIds(targetIds);\n    $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');\n};\nc3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n    this.legendItemTextBox = {};\n};\nc3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n    var $$ = this,\n        config = $$.config;\n    var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n    var paddingTop = 4,\n        paddingRight = 10,\n        maxWidth = 0,\n        maxHeight = 0,\n        posMin = 10,\n        tileWidth = config.legend_item_tile_width + 5;\n    var l,\n        totalLength = 0,\n        offsets = {},\n        widths = {},\n        heights = {},\n        margins = [0],\n        steps = {},\n        step = 0;\n    var withTransition, withTransitionForTransform;\n    var texts, rects, tiles, background;\n\n    // Skip elements when their name is set to null\n    targetIds = targetIds.filter(function (id) {\n        return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n    });\n\n    options = options || {};\n    withTransition = getOption(options, \"withTransition\", true);\n    withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n    function getTextBox(textElement, id) {\n        if (!$$.legendItemTextBox[id]) {\n            $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n        }\n        return $$.legendItemTextBox[id];\n    }\n\n    function updatePositions(textElement, id, index) {\n        var reset = index === 0,\n            isLast = index === targetIds.length - 1,\n            box = getTextBox(textElement, id),\n            itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n            itemHeight = box.height + paddingTop,\n            itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n            areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n            margin,\n            maxLength;\n\n        // MEMO: care about condifion of step, totalLength\n        function updateValues(id, withoutStep) {\n            if (!withoutStep) {\n                margin = (areaLength - totalLength - itemLength) / 2;\n                if (margin < posMin) {\n                    margin = (areaLength - itemLength) / 2;\n                    totalLength = 0;\n                    step++;\n                }\n            }\n            steps[id] = step;\n            margins[step] = $$.isLegendInset ? 10 : margin;\n            offsets[id] = totalLength;\n            totalLength += itemLength;\n        }\n\n        if (reset) {\n            totalLength = 0;\n            step = 0;\n            maxWidth = 0;\n            maxHeight = 0;\n        }\n\n        if (config.legend_show && !$$.isLegendToShow(id)) {\n            widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n            return;\n        }\n\n        widths[id] = itemWidth;\n        heights[id] = itemHeight;\n\n        if (!maxWidth || itemWidth >= maxWidth) {\n            maxWidth = itemWidth;\n        }\n        if (!maxHeight || itemHeight >= maxHeight) {\n            maxHeight = itemHeight;\n        }\n        maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n        if (config.legend_equally) {\n            Object.keys(widths).forEach(function (id) {\n                widths[id] = maxWidth;\n            });\n            Object.keys(heights).forEach(function (id) {\n                heights[id] = maxHeight;\n            });\n            margin = (areaLength - maxLength * targetIds.length) / 2;\n            if (margin < posMin) {\n                totalLength = 0;\n                step = 0;\n                targetIds.forEach(function (id) {\n                    updateValues(id);\n                });\n            } else {\n                updateValues(id, true);\n            }\n        } else {\n            updateValues(id);\n        }\n    }\n\n    if ($$.isLegendInset) {\n        step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n        $$.updateLegendStep(step);\n    }\n\n    if ($$.isLegendRight) {\n        xForLegend = function xForLegend(id) {\n            return maxWidth * steps[id];\n        };\n        yForLegend = function yForLegend(id) {\n            return margins[steps[id]] + offsets[id];\n        };\n    } else if ($$.isLegendInset) {\n        xForLegend = function xForLegend(id) {\n            return maxWidth * steps[id] + 10;\n        };\n        yForLegend = function yForLegend(id) {\n            return margins[steps[id]] + offsets[id];\n        };\n    } else {\n        xForLegend = function xForLegend(id) {\n            return margins[steps[id]] + offsets[id];\n        };\n        yForLegend = function yForLegend(id) {\n            return maxHeight * steps[id];\n        };\n    }\n    xForLegendText = function xForLegendText(id, i) {\n        return xForLegend(id, i) + 4 + config.legend_item_tile_width;\n    };\n    yForLegendText = function yForLegendText(id, i) {\n        return yForLegend(id, i) + 9;\n    };\n    xForLegendRect = function xForLegendRect(id, i) {\n        return xForLegend(id, i);\n    };\n    yForLegendRect = function yForLegendRect(id, i) {\n        return yForLegend(id, i) - 5;\n    };\n    x1ForLegendTile = function x1ForLegendTile(id, i) {\n        return xForLegend(id, i) - 2;\n    };\n    x2ForLegendTile = function x2ForLegendTile(id, i) {\n        return xForLegend(id, i) - 2 + config.legend_item_tile_width;\n    };\n    yForLegendTile = function yForLegendTile(id, i) {\n        return yForLegend(id, i) + 4;\n    };\n\n    // Define g for legend area\n    l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {\n        return $$.generateClass(CLASS.legendItem, id);\n    }).style('visibility', function (id) {\n        return $$.isLegendToShow(id) ? 'visible' : 'hidden';\n    }).style('cursor', 'pointer').on('click', function (id) {\n        if (config.legend_item_onclick) {\n            config.legend_item_onclick.call($$, id);\n        } else {\n            if ($$.d3.event.altKey) {\n                $$.api.hide();\n                $$.api.show(id);\n            } else {\n                $$.api.toggle(id);\n                $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n            }\n        }\n    }).on('mouseover', function (id) {\n        if (config.legend_item_onmouseover) {\n            config.legend_item_onmouseover.call($$, id);\n        } else {\n            $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n            if (!$$.transiting && $$.isTargetToShow(id)) {\n                $$.api.focus(id);\n            }\n        }\n    }).on('mouseout', function (id) {\n        if (config.legend_item_onmouseout) {\n            config.legend_item_onmouseout.call($$, id);\n        } else {\n            $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n            $$.api.revert();\n        }\n    });\n    l.append('text').text(function (id) {\n        return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n    }).each(function (id, i) {\n        updatePositions(this, id, i);\n    }).style(\"pointer-events\", \"none\").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n    l.append('rect').attr(\"class\", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n    l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style(\"pointer-events\", \"none\").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height);\n\n    // Set background for inset legend\n    background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n    if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n        background = $$.legend.insert('g', '.' + CLASS.legendItem).attr(\"class\", CLASS.legendBackground).append('rect');\n    }\n\n    texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {\n        return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n    } // MEMO: needed for update\n    ).each(function (id, i) {\n        updatePositions(this, id, i);\n    });\n    (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);\n\n    rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\n    (withTransition ? rects.transition() : rects).attr('width', function (id) {\n        return widths[id];\n    }).attr('height', function (id) {\n        return heights[id];\n    }).attr('x', xForLegendRect).attr('y', yForLegendRect);\n\n    tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\n    (withTransition ? tiles.transition() : tiles).style('stroke', $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);\n\n    if (background) {\n        (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);\n    }\n\n    // toggle legend state\n    $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {\n        return !$$.isTargetToShow(id);\n    });\n\n    // Update all to reflect change of legend\n    $$.updateLegendItemWidth(maxWidth);\n    $$.updateLegendItemHeight(maxHeight);\n    $$.updateLegendStep(step);\n    // Update size and scale\n    $$.updateSizes();\n    $$.updateScales();\n    $$.updateSvgSize();\n    // Update g positions\n    $$.transformAll(withTransitionForTransform, transitions);\n    $$.legendHasRendered = true;\n};\n\nc3_chart_internal_fn.initRegion = function () {\n    var $$ = this;\n    $$.region = $$.main.append('g').attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.regions);\n};\nc3_chart_internal_fn.updateRegion = function (duration) {\n    var $$ = this,\n        config = $$.config;\n\n    // hide if arc type\n    $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n    $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);\n    $$.mainRegion.enter().append('g').append('rect').style(\"fill-opacity\", 0);\n    $$.mainRegion.attr('class', $$.classRegion.bind($$));\n    $$.mainRegion.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n};\nc3_chart_internal_fn.redrawRegion = function (withTransition) {\n    var $$ = this,\n        regions = $$.mainRegion.selectAll('rect').each(function () {\n        // data is binded to g and it's not transferred to rect (child node) automatically,\n        // then data of each rect has to be updated manually.\n        // TODO: there should be more efficient way to solve this?\n        var parentData = $$.d3.select(this.parentNode).datum();\n        $$.d3.select(this).datum(parentData);\n    }),\n        x = $$.regionX.bind($$),\n        y = $$.regionY.bind($$),\n        w = $$.regionWidth.bind($$),\n        h = $$.regionHeight.bind($$);\n    return [(withTransition ? regions.transition() : regions).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h).style(\"fill-opacity\", function (d) {\n        return isValue(d.opacity) ? d.opacity : 0.1;\n    })];\n};\nc3_chart_internal_fn.regionX = function (d) {\n    var $$ = this,\n        config = $$.config,\n        xPos,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n    if (d.axis === 'y' || d.axis === 'y2') {\n        xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;\n    } else {\n        xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;\n    }\n    return xPos;\n};\nc3_chart_internal_fn.regionY = function (d) {\n    var $$ = this,\n        config = $$.config,\n        yPos,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n    if (d.axis === 'y' || d.axis === 'y2') {\n        yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\n    } else {\n        yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;\n    }\n    return yPos;\n};\nc3_chart_internal_fn.regionWidth = function (d) {\n    var $$ = this,\n        config = $$.config,\n        start = $$.regionX(d),\n        end,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n    if (d.axis === 'y' || d.axis === 'y2') {\n        end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;\n    } else {\n        end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;\n    }\n    return end < start ? 0 : end - start;\n};\nc3_chart_internal_fn.regionHeight = function (d) {\n    var $$ = this,\n        config = $$.config,\n        start = this.regionY(d),\n        end,\n        yScale = d.axis === 'y' ? $$.y : $$.y2;\n    if (d.axis === 'y' || d.axis === 'y2') {\n        end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;\n    } else {\n        end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;\n    }\n    return end < start ? 0 : end - start;\n};\nc3_chart_internal_fn.isRegionOnX = function (d) {\n    return !d.axis || d.axis === 'x';\n};\n\nc3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n    return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n};\nc3_chart_internal_fn.getX = function (min, max, domain, offset) {\n    var $$ = this,\n        scale = $$.getScale(min, max, $$.isTimeSeries()),\n        _scale = domain ? scale.domain(domain) : scale,\n        key;\n    // Define customized scale if categorized axis\n    if ($$.isCategorized()) {\n        offset = offset || function () {\n            return 0;\n        };\n        scale = function scale(d, raw) {\n            var v = _scale(d) + offset(d);\n            return raw ? v : Math.ceil(v);\n        };\n    } else {\n        scale = function scale(d, raw) {\n            var v = _scale(d);\n            return raw ? v : Math.ceil(v);\n        };\n    }\n    // define functions\n    for (key in _scale) {\n        scale[key] = _scale[key];\n    }\n    scale.orgDomain = function () {\n        return _scale.domain();\n    };\n    // define custom domain() for categorized axis\n    if ($$.isCategorized()) {\n        scale.domain = function (domain) {\n            if (!arguments.length) {\n                domain = this.orgDomain();\n                return [domain[0], domain[1] + 1];\n            }\n            _scale.domain(domain);\n            return scale;\n        };\n    }\n    return scale;\n};\nc3_chart_internal_fn.getY = function (min, max, domain) {\n    var scale = this.getScale(min, max, this.isTimeSeriesY());\n    if (domain) {\n        scale.domain(domain);\n    }\n    return scale;\n};\nc3_chart_internal_fn.getYScale = function (id) {\n    return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n};\nc3_chart_internal_fn.getSubYScale = function (id) {\n    return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n};\nc3_chart_internal_fn.updateScales = function () {\n    var $$ = this,\n        config = $$.config,\n        forInit = !$$.x;\n    // update edges\n    $$.xMin = config.axis_rotated ? 1 : 0;\n    $$.xMax = config.axis_rotated ? $$.height : $$.width;\n    $$.yMin = config.axis_rotated ? 0 : $$.height;\n    $$.yMax = config.axis_rotated ? $$.width : 1;\n    $$.subXMin = $$.xMin;\n    $$.subXMax = $$.xMax;\n    $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n    $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n    // update scales\n    $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\n        return $$.xAxis.tickOffset();\n    });\n    $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n    $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n    $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\n        return d % 1 ? 0 : $$.subXAxis.tickOffset();\n    });\n    $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n    $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n    // update axes\n    $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n    $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n    $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n    $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n    $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n    $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n    $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n    $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n    // Set initialized scales to brush and zoom\n    if (!forInit) {\n        if ($$.brush) {\n            $$.brush.scale($$.subX);\n        }\n        if (config.zoom_enabled) {\n            $$.zoom.scale($$.x);\n        }\n    }\n    // update for arc\n    if ($$.updateArc) {\n        $$.updateArc();\n    }\n};\n\nc3_chart_internal_fn.selectPoint = function (target, d, i) {\n    var $$ = this,\n        config = $$.config,\n        cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n        cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n        r = $$.pointSelectR.bind($$);\n    config.data_onselected.call($$.api, d, target.node());\n    // add selected-circle on low layer g\n    $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr(\"class\", function () {\n        return $$.generateClass(CLASS.selectedCircle, i);\n    }).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"stroke\", function () {\n        return $$.color(d);\n    }).attr(\"r\", function (d) {\n        return $$.pointSelectR(d) * 1.4;\n    }).transition().duration(100).attr(\"r\", r);\n};\nc3_chart_internal_fn.unselectPoint = function (target, d, i) {\n    var $$ = this;\n    $$.config.data_onunselected.call($$.api, d, target.node());\n    // remove selected-circle from low layer g\n    $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();\n};\nc3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n    selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n};\nc3_chart_internal_fn.selectPath = function (target, d) {\n    var $$ = this;\n    $$.config.data_onselected.call($$, d, target.node());\n    if ($$.config.interaction_brighten) {\n        target.transition().duration(100).style(\"fill\", function () {\n            return $$.d3.rgb($$.color(d)).brighter(0.75);\n        });\n    }\n};\nc3_chart_internal_fn.unselectPath = function (target, d) {\n    var $$ = this;\n    $$.config.data_onunselected.call($$, d, target.node());\n    if ($$.config.interaction_brighten) {\n        target.transition().duration(100).style(\"fill\", function () {\n            return $$.color(d);\n        });\n    }\n};\nc3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n    selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n};\nc3_chart_internal_fn.getToggle = function (that, d) {\n    var $$ = this,\n        toggle;\n    if (that.nodeName === 'circle') {\n        if ($$.isStepType(d)) {\n            // circle is hidden in step chart, so treat as within the click area\n            toggle = function toggle() {}; // TODO: how to select step chart?\n        } else {\n            toggle = $$.togglePoint;\n        }\n    } else if (that.nodeName === 'path') {\n        toggle = $$.togglePath;\n    }\n    return toggle;\n};\nc3_chart_internal_fn.toggleShape = function (that, d, i) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        shape = d3.select(that),\n        isSelected = shape.classed(CLASS.SELECTED),\n        toggle = $$.getToggle(that, d).bind($$);\n\n    if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n        if (!config.data_selection_multiple) {\n            $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                var shape = d3.select(this);\n                if (shape.classed(CLASS.SELECTED)) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            });\n        }\n        shape.classed(CLASS.SELECTED, !isSelected);\n        toggle(!isSelected, shape, d, i);\n    }\n};\n\nc3_chart_internal_fn.initBar = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n};\nc3_chart_internal_fn.updateTargetsForBar = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        mainBarUpdate,\n        mainBarEnter,\n        classChartBar = $$.classChartBar.bind($$),\n        classBars = $$.classBars.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {\n        return classChartBar(d) + classFocus(d);\n    });\n    mainBarEnter = mainBarUpdate.enter().append('g').attr('class', classChartBar).style(\"pointer-events\", \"none\");\n    // Bars for each data\n    mainBarEnter.append('g').attr(\"class\", classBars).style(\"cursor\", function (d) {\n        return config.data_selection_isselectable(d) ? \"pointer\" : null;\n    });\n};\nc3_chart_internal_fn.updateBar = function (durationForExit) {\n    var $$ = this,\n        barData = $$.barData.bind($$),\n        classBar = $$.classBar.bind($$),\n        initialOpacity = $$.initialOpacity.bind($$),\n        color = function color(d) {\n        return $$.color(d.id);\n    };\n    $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);\n    $$.mainBar.enter().append('path').attr(\"class\", classBar).style(\"stroke\", color).style(\"fill\", color);\n    $$.mainBar.style(\"opacity\", initialOpacity);\n    $$.mainBar.exit().transition().duration(durationForExit).remove();\n};\nc3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n    return [(withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar).attr('d', drawBar).style(\"fill\", this.color).style(\"opacity\", 1)];\n};\nc3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n    var $$ = this,\n        config = $$.config,\n        w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;\n    return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n};\nc3_chart_internal_fn.getBars = function (i, id) {\n    var $$ = this;\n    return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n};\nc3_chart_internal_fn.expandBars = function (i, id, reset) {\n    var $$ = this;\n    if (reset) {\n        $$.unexpandBars();\n    }\n    $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n};\nc3_chart_internal_fn.unexpandBars = function (i) {\n    var $$ = this;\n    $$.getBars(i).classed(CLASS.EXPANDED, false);\n};\nc3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n    var $$ = this,\n        config = $$.config,\n        getPoints = $$.generateGetBarPoints(barIndices, isSub);\n    return function (d, i) {\n        // 4 points that make a bar\n        var points = getPoints(d, i);\n\n        // switch points if axis is rotated, not applicable for sub chart\n        var indexX = config.axis_rotated ? 1 : 0;\n        var indexY = config.axis_rotated ? 0 : 1;\n\n        var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';\n\n        return path;\n    };\n};\nc3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n    var $$ = this,\n        axis = isSub ? $$.subXAxis : $$.xAxis,\n        barTargetsNum = barIndices.__max__ + 1,\n        barW = $$.getBarW(axis, barTargetsNum),\n        barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n        barY = $$.getShapeY(!!isSub),\n        barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n        yScale = isSub ? $$.getSubYScale : $$.getYScale;\n    return function (d, i) {\n        var y0 = yScale.call($$, d.id)(0),\n            offset = barOffset(d, i) || y0,\n            // offset is for stacked bar chart\n        posX = barX(d),\n            posY = barY(d);\n        // fix posY not to overflow opposite quadrant\n        if ($$.config.axis_rotated) {\n            if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                posY = y0;\n            }\n        }\n        // 4 points that make a bar\n        return [[posX, offset], [posX, posY - (y0 - offset)], [posX + barW, posY - (y0 - offset)], [posX + barW, offset]];\n    };\n};\nc3_chart_internal_fn.isWithinBar = function (that) {\n    var mouse = this.d3.mouse(that),\n        box = that.getBoundingClientRect(),\n        seg0 = that.pathSegList.getItem(0),\n        seg1 = that.pathSegList.getItem(1),\n        x = Math.min(seg0.x, seg1.x),\n        y = Math.min(seg0.y, seg1.y),\n        w = box.width,\n        h = box.height,\n        offset = 2,\n        sx = x - offset,\n        ex = x + w + offset,\n        sy = y + h + offset,\n        ey = y - offset;\n    return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n};\n\nc3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n    var $$ = this,\n        config = $$.config,\n        indices = {},\n        i = 0,\n        j,\n        k;\n    $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n        for (j = 0; j < config.data_groups.length; j++) {\n            if (config.data_groups[j].indexOf(d.id) < 0) {\n                continue;\n            }\n            for (k = 0; k < config.data_groups[j].length; k++) {\n                if (config.data_groups[j][k] in indices) {\n                    indices[d.id] = indices[config.data_groups[j][k]];\n                    break;\n                }\n            }\n        }\n        if (isUndefined(indices[d.id])) {\n            indices[d.id] = i++;\n        }\n    });\n    indices.__max__ = i - 1;\n    return indices;\n};\nc3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n    var $$ = this,\n        scale = isSub ? $$.subX : $$.x;\n    return function (d) {\n        var index = d.id in indices ? indices[d.id] : 0;\n        return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n    };\n};\nc3_chart_internal_fn.getShapeY = function (isSub) {\n    var $$ = this;\n    return function (d) {\n        var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n        return scale(d.value);\n    };\n};\nc3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n    var $$ = this,\n        targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n        targetIds = targets.map(function (t) {\n        return t.id;\n    });\n    return function (d, i) {\n        var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n            y0 = scale(0),\n            offset = y0;\n        targets.forEach(function (t) {\n            var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n            if (t.id === d.id || indices[t.id] !== indices[d.id]) {\n                return;\n            }\n            if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                // check if the x values line up\n                if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {\n                    // \"+\" for timeseries\n                    // if not, try to find the value that does line up\n                    i = -1;\n                    values.forEach(function (v, j) {\n                        if (v.x === d.x) {\n                            i = j;\n                        }\n                    });\n                }\n                if (i in values && values[i].value * d.value >= 0) {\n                    offset += scale(values[i].value) - y0;\n                }\n            }\n        });\n        return offset;\n    };\n};\nc3_chart_internal_fn.isWithinShape = function (that, d) {\n    var $$ = this,\n        shape = $$.d3.select(that),\n        isWithin;\n    if (!$$.isTargetToShow(d.id)) {\n        isWithin = false;\n    } else if (that.nodeName === 'circle') {\n        isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n    } else if (that.nodeName === 'path') {\n        isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n    }\n    return isWithin;\n};\n\nc3_chart_internal_fn.getInterpolate = function (d) {\n    var $$ = this,\n        interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n    return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n};\n\nc3_chart_internal_fn.initLine = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n};\nc3_chart_internal_fn.updateTargetsForLine = function (targets) {\n    var $$ = this,\n        config = $$.config,\n        mainLineUpdate,\n        mainLineEnter,\n        classChartLine = $$.classChartLine.bind($$),\n        classLines = $$.classLines.bind($$),\n        classAreas = $$.classAreas.bind($$),\n        classCircles = $$.classCircles.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {\n        return classChartLine(d) + classFocus(d);\n    });\n    mainLineEnter = mainLineUpdate.enter().append('g').attr('class', classChartLine).style('opacity', 0).style(\"pointer-events\", \"none\");\n    // Lines for each data\n    mainLineEnter.append('g').attr(\"class\", classLines);\n    // Areas\n    mainLineEnter.append('g').attr('class', classAreas);\n    // Circles for each data point on lines\n    mainLineEnter.append('g').attr(\"class\", function (d) {\n        return $$.generateClass(CLASS.selectedCircles, d.id);\n    });\n    mainLineEnter.append('g').attr(\"class\", classCircles).style(\"cursor\", function (d) {\n        return config.data_selection_isselectable(d) ? \"pointer\" : null;\n    });\n    // Update date for selected circles\n    targets.forEach(function (t) {\n        $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n            d.value = t.values[d.index].value;\n        });\n    });\n    // MEMO: can not keep same color...\n    //mainLineUpdate.exit().remove();\n};\nc3_chart_internal_fn.updateLine = function (durationForExit) {\n    var $$ = this;\n    $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n    $$.mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style(\"stroke\", $$.color);\n    $$.mainLine.style(\"opacity\", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {\n        return $$.isStepType(d) ? 'crispEdges' : '';\n    }).attr('transform', null);\n    $$.mainLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n    return [(withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine).attr(\"d\", drawLine).style(\"stroke\", this.color).style(\"opacity\", 1)];\n};\nc3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n    var $$ = this,\n        config = $$.config,\n        line = $$.d3.svg.line(),\n        getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n        yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n        xValue = function xValue(d) {\n        return (isSub ? $$.subxx : $$.xx).call($$, d);\n    },\n        yValue = function yValue(d, i) {\n        return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n    };\n\n    line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n    if (!config.line_connectNull) {\n        line = line.defined(function (d) {\n            return d.value != null;\n        });\n    }\n    return function (d) {\n        var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n            x = isSub ? $$.x : $$.subX,\n            y = yScaleGetter.call($$, d.id),\n            x0 = 0,\n            y0 = 0,\n            path;\n        if ($$.isLineType(d)) {\n            if (config.data_regions[d.id]) {\n                path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n            } else {\n                if ($$.isStepType(d)) {\n                    values = $$.convertValuesToStep(values);\n                }\n                path = line.interpolate($$.getInterpolate(d))(values);\n            }\n        } else {\n            if (values[0]) {\n                x0 = x(values[0].x);\n                y0 = y(values[0].value);\n            }\n            path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n        }\n        return path ? path : \"M 0 0\";\n    };\n};\nc3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {\n    // partial duplication of generateGetBarPoints\n    var $$ = this,\n        config = $$.config,\n        lineTargetsNum = lineIndices.__max__ + 1,\n        x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n        y = $$.getShapeY(!!isSub),\n        lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n        yScale = isSub ? $$.getSubYScale : $$.getYScale;\n    return function (d, i) {\n        var y0 = yScale.call($$, d.id)(0),\n            offset = lineOffset(d, i) || y0,\n            // offset is for stacked area chart\n        posX = x(d),\n            posY = y(d);\n        // fix posY not to overflow opposite quadrant\n        if (config.axis_rotated) {\n            if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                posY = y0;\n            }\n        }\n        // 1 point that marks the line position\n        return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n        [posX, posY - (y0 - offset)], // needed for compatibility\n        [posX, posY - (y0 - offset)] // needed for compatibility\n        ];\n    };\n};\n\nc3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n    var $$ = this,\n        config = $$.config,\n        prev = -1,\n        i,\n        j,\n        s = \"M\",\n        sWithRegion,\n        xp,\n        yp,\n        dx,\n        dy,\n        dd,\n        diff,\n        diffx2,\n        xOffset = $$.isCategorized() ? 0.5 : 0,\n        xValue,\n        yValue,\n        regions = [];\n\n    function isWithinRegions(x, regions) {\n        var i;\n        for (i = 0; i < regions.length; i++) {\n            if (regions[i].start < x && x <= regions[i].end) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // Check start/end of regions\n    if (isDefined(_regions)) {\n        for (i = 0; i < _regions.length; i++) {\n            regions[i] = {};\n            if (isUndefined(_regions[i].start)) {\n                regions[i].start = d[0].x;\n            } else {\n                regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n            }\n            if (isUndefined(_regions[i].end)) {\n                regions[i].end = d[d.length - 1].x;\n            } else {\n                regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n            }\n        }\n    }\n\n    // Set scales\n    xValue = config.axis_rotated ? function (d) {\n        return y(d.value);\n    } : function (d) {\n        return x(d.x);\n    };\n    yValue = config.axis_rotated ? function (d) {\n        return x(d.x);\n    } : function (d) {\n        return y(d.value);\n    };\n\n    // Define svg generator function for region\n    function generateM(points) {\n        return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n    }\n    if ($$.isTimeSeries()) {\n        sWithRegion = function sWithRegion(d0, d1, j, diff) {\n            var x0 = d0.x.getTime(),\n                x_diff = d1.x - d0.x,\n                xv0 = new Date(x0 + x_diff * j),\n                xv1 = new Date(x0 + x_diff * (j + diff)),\n                points;\n            if (config.axis_rotated) {\n                points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n            } else {\n                points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n            }\n            return generateM(points);\n        };\n    } else {\n        sWithRegion = function sWithRegion(d0, d1, j, diff) {\n            var points;\n            if (config.axis_rotated) {\n                points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n            } else {\n                points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n            }\n            return generateM(points);\n        };\n    }\n\n    // Generate\n    for (i = 0; i < d.length; i++) {\n\n        // Draw as normal\n        if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\n            s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n        }\n        // Draw with region // TODO: Fix for horizotal charts\n        else {\n                xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                dx = x(d[i].x) - x(d[i - 1].x);\n                dy = y(d[i].value) - y(d[i - 1].value);\n                dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                diff = 2 / dd;\n                diffx2 = diff * 2;\n\n                for (j = diff; j <= 1; j += diffx2) {\n                    s += sWithRegion(d[i - 1], d[i], j, diff);\n                }\n            }\n        prev = d[i].x;\n    }\n\n    return s;\n};\n\nc3_chart_internal_fn.updateArea = function (durationForExit) {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n    $$.mainArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n        $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n    });\n    $$.mainArea.style(\"opacity\", $$.orgAreaOpacity);\n    $$.mainArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n    return [(withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea).attr(\"d\", drawArea).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity)];\n};\nc3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n    var $$ = this,\n        config = $$.config,\n        area = $$.d3.svg.area(),\n        getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n        yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n        xValue = function xValue(d) {\n        return (isSub ? $$.subxx : $$.xx).call($$, d);\n    },\n        value0 = function value0(d, i) {\n        return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n    },\n        value1 = function value1(d, i) {\n        return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n    };\n\n    area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n    if (!config.line_connectNull) {\n        area = area.defined(function (d) {\n            return d.value !== null;\n        });\n    }\n\n    return function (d) {\n        var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n            x0 = 0,\n            y0 = 0,\n            path;\n        if ($$.isAreaType(d)) {\n            if ($$.isStepType(d)) {\n                values = $$.convertValuesToStep(values);\n            }\n            path = area.interpolate($$.getInterpolate(d))(values);\n        } else {\n            if (values[0]) {\n                x0 = $$.x(values[0].x);\n                y0 = $$.getYScale(d.id)(values[0].value);\n            }\n            path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n        }\n        return path ? path : \"M 0 0\";\n    };\n};\nc3_chart_internal_fn.getAreaBaseValue = function () {\n    return 0;\n};\nc3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {\n    // partial duplication of generateGetBarPoints\n    var $$ = this,\n        config = $$.config,\n        areaTargetsNum = areaIndices.__max__ + 1,\n        x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n        y = $$.getShapeY(!!isSub),\n        areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n        yScale = isSub ? $$.getSubYScale : $$.getYScale;\n    return function (d, i) {\n        var y0 = yScale.call($$, d.id)(0),\n            offset = areaOffset(d, i) || y0,\n            // offset is for stacked area chart\n        posX = x(d),\n            posY = y(d);\n        // fix posY not to overflow opposite quadrant\n        if (config.axis_rotated) {\n            if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                posY = y0;\n            }\n        }\n        // 1 point that marks the area position\n        return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n        [posX, offset] // needed for compatibility\n        ];\n    };\n};\n\nc3_chart_internal_fn.updateCircle = function () {\n    var $$ = this;\n    $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));\n    $$.mainCircle.enter().append(\"circle\").attr(\"class\", $$.classCircle.bind($$)).attr(\"r\", $$.pointR.bind($$)).style(\"fill\", $$.color);\n    $$.mainCircle.style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n    $$.mainCircle.exit().remove();\n};\nc3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n    var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n    return [(withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle).style('opacity', this.opacityForCircle.bind(this)).style(\"fill\", this.color).attr(\"cx\", cx).attr(\"cy\", cy), (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles).attr(\"cx\", cx).attr(\"cy\", cy)];\n};\nc3_chart_internal_fn.circleX = function (d) {\n    return d.x || d.x === 0 ? this.x(d.x) : null;\n};\nc3_chart_internal_fn.updateCircleY = function () {\n    var $$ = this,\n        lineIndices,\n        getPoints;\n    if ($$.config.data_groups.length > 0) {\n        lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);\n        $$.circleY = function (d, i) {\n            return getPoints(d, i)[0][1];\n        };\n    } else {\n        $$.circleY = function (d) {\n            return $$.getYScale(d.id)(d.value);\n        };\n    }\n};\nc3_chart_internal_fn.getCircles = function (i, id) {\n    var $$ = this;\n    return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n};\nc3_chart_internal_fn.expandCircles = function (i, id, reset) {\n    var $$ = this,\n        r = $$.pointExpandedR.bind($$);\n    if (reset) {\n        $$.unexpandCircles();\n    }\n    $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);\n};\nc3_chart_internal_fn.unexpandCircles = function (i) {\n    var $$ = this,\n        r = $$.pointR.bind($$);\n    $$.getCircles(i).filter(function () {\n        return $$.d3.select(this).classed(CLASS.EXPANDED);\n    }).classed(CLASS.EXPANDED, false).attr('r', r);\n};\nc3_chart_internal_fn.pointR = function (d) {\n    var $$ = this,\n        config = $$.config;\n    return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;\n};\nc3_chart_internal_fn.pointExpandedR = function (d) {\n    var $$ = this,\n        config = $$.config;\n    return config.point_focus_expand_enabled ? config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75 : $$.pointR(d);\n};\nc3_chart_internal_fn.pointSelectR = function (d) {\n    var $$ = this,\n        config = $$.config;\n    return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;\n};\nc3_chart_internal_fn.isWithinCircle = function (that, r) {\n    var d3 = this.d3,\n        mouse = d3.mouse(that),\n        d3_this = d3.select(that),\n        cx = +d3_this.attr(\"cx\"),\n        cy = +d3_this.attr(\"cy\");\n    return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n};\nc3_chart_internal_fn.isWithinStep = function (that, y) {\n    return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n};\n\nc3_chart_internal_fn.getCurrentWidth = function () {\n    var $$ = this,\n        config = $$.config;\n    return config.size_width ? config.size_width : $$.getParentWidth();\n};\nc3_chart_internal_fn.getCurrentHeight = function () {\n    var $$ = this,\n        config = $$.config,\n        h = config.size_height ? config.size_height : $$.getParentHeight();\n    return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\n};\nc3_chart_internal_fn.getCurrentPaddingTop = function () {\n    var $$ = this,\n        config = $$.config,\n        padding = isValue(config.padding_top) ? config.padding_top : 0;\n    if ($$.title && $$.title.node()) {\n        padding += $$.getTitlePadding();\n    }\n    return padding;\n};\nc3_chart_internal_fn.getCurrentPaddingBottom = function () {\n    var config = this.config;\n    return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n};\nc3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n    var $$ = this,\n        config = $$.config;\n    if (isValue(config.padding_left)) {\n        return config.padding_left;\n    } else if (config.axis_rotated) {\n        return !config.axis_x_show ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n    } else if (!config.axis_y_show || config.axis_y_inner) {\n        // && !config.axis_rotated\n        return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n    } else {\n        return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n    }\n};\nc3_chart_internal_fn.getCurrentPaddingRight = function () {\n    var $$ = this,\n        config = $$.config,\n        defaultPadding = 10,\n        legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n    if (isValue(config.padding_right)) {\n        return config.padding_right + 1; // 1 is needed not to hide tick line\n    } else if (config.axis_rotated) {\n        return defaultPadding + legendWidthOnRight;\n    } else if (!config.axis_y2_show || config.axis_y2_inner) {\n        // && !config.axis_rotated\n        return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n    } else {\n        return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n    }\n};\n\nc3_chart_internal_fn.getParentRectValue = function (key) {\n    var parent = this.selectChart.node(),\n        v;\n    while (parent && parent.tagName !== 'BODY') {\n        try {\n            v = parent.getBoundingClientRect()[key];\n        } catch (e) {\n            if (key === 'width') {\n                // In IE in certain cases getBoundingClientRect\n                // will cause an \"unspecified error\"\n                v = parent.offsetWidth;\n            }\n        }\n        if (v) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return v;\n};\nc3_chart_internal_fn.getParentWidth = function () {\n    return this.getParentRectValue('width');\n};\nc3_chart_internal_fn.getParentHeight = function () {\n    var h = this.selectChart.style('height');\n    return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n};\n\nc3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n    var $$ = this,\n        config = $$.config,\n        hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,\n        leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n        leftAxis = $$.main.select('.' + leftAxisClass).node(),\n        svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : { right: 0 },\n        chartRect = $$.selectChart.node().getBoundingClientRect(),\n        hasArc = $$.hasArcType(),\n        svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n    return svgLeft > 0 ? svgLeft : 0;\n};\n\nc3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n    var $$ = this,\n        position = $$.axis.getLabelPositionById(id);\n    return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n};\nc3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n    var $$ = this,\n        config = $$.config,\n        h = 30;\n    if (axisId === 'x' && !config.axis_x_show) {\n        return 8;\n    }\n    if (axisId === 'x' && config.axis_x_height) {\n        return config.axis_x_height;\n    }\n    if (axisId === 'y' && !config.axis_y_show) {\n        return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\n    }\n    if (axisId === 'y2' && !config.axis_y2_show) {\n        return $$.rotated_padding_top;\n    }\n    // Calculate x axis height when tick rotated\n    if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n        h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n    }\n    // Calculate y axis height when tick rotated\n    if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n        h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n    }\n    return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n};\n\nc3_chart_internal_fn.getEventRectWidth = function () {\n    return Math.max(0, this.xAxis.tickInterval());\n};\n\nc3_chart_internal_fn.initBrush = function () {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.brush = d3.svg.brush().on(\"brush\", function () {\n        $$.redrawForBrush();\n    });\n    $$.brush.update = function () {\n        if ($$.context) {\n            $$.context.select('.' + CLASS.brush).call(this);\n        }\n        return this;\n    };\n    $$.brush.scale = function (scale) {\n        return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n    };\n};\nc3_chart_internal_fn.initSubchart = function () {\n    var $$ = this,\n        config = $$.config,\n        context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n        visibility = config.subchart_show ? 'visible' : 'hidden';\n\n    context.style('visibility', visibility);\n\n    // Define g for chart area\n    context.append('g').attr(\"clip-path\", $$.clipPathForSubchart).attr('class', CLASS.chart);\n\n    // Define g for bar chart area\n    context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n\n    // Define g for line chart area\n    context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n\n    // Add extent rect for Brush\n    context.append(\"g\").attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.brush).call($$.brush);\n\n    // ATTENTION: This must be called AFTER chart added\n    // Add Axis\n    $$.axes.subx = context.append(\"g\").attr(\"class\", CLASS.axisX).attr(\"transform\", $$.getTranslate('subx')).attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis).style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n};\nc3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n    var $$ = this,\n        context = $$.context,\n        config = $$.config,\n        contextLineEnter,\n        contextLineUpdate,\n        contextBarEnter,\n        contextBarUpdate,\n        classChartBar = $$.classChartBar.bind($$),\n        classBars = $$.classBars.bind($$),\n        classChartLine = $$.classChartLine.bind($$),\n        classLines = $$.classLines.bind($$),\n        classAreas = $$.classAreas.bind($$);\n\n    if (config.subchart_show) {\n        //-- Bar --//\n        contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', classChartBar);\n        contextBarEnter = contextBarUpdate.enter().append('g').style('opacity', 0).attr('class', classChartBar);\n        // Bars for each data\n        contextBarEnter.append('g').attr(\"class\", classBars);\n\n        //-- Line --//\n        contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', classChartLine);\n        contextLineEnter = contextLineUpdate.enter().append('g').style('opacity', 0).attr('class', classChartLine);\n        // Lines for each data\n        contextLineEnter.append(\"g\").attr(\"class\", classLines);\n        // Area\n        contextLineEnter.append(\"g\").attr(\"class\", classAreas);\n\n        //-- Brush --//\n        context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n    }\n};\nc3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n    var $$ = this;\n    $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));\n    $$.contextBar.enter().append('path').attr(\"class\", $$.classBar.bind($$)).style(\"stroke\", 'none').style(\"fill\", $$.color);\n    $$.contextBar.style(\"opacity\", $$.initialOpacity.bind($$));\n    $$.contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n    (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);\n};\nc3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n    var $$ = this;\n    $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n    $$.contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);\n    $$.contextLine.style(\"opacity\", $$.initialOpacity.bind($$));\n    $$.contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n    (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr(\"d\", drawLineOnSub).style('opacity', 1);\n};\nc3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n    var $$ = this,\n        d3 = $$.d3;\n    $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n    $$.contextArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n        $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n    });\n    $$.contextArea.style(\"opacity\", 0);\n    $$.contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n    (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr(\"d\", drawAreaOnSub).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity);\n};\nc3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        drawAreaOnSub,\n        drawBarOnSub,\n        drawLineOnSub;\n\n    $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n    // subchart\n    if (config.subchart_show) {\n        // reflect main chart to extent on subchart if zoomed\n        if (d3.event && d3.event.type === 'zoom') {\n            $$.brush.extent($$.x.orgDomain()).update();\n        }\n        // update subchart elements if needed\n        if (withSubchart) {\n\n            // extent rect\n            if (!$$.brush.empty()) {\n                $$.brush.extent($$.x.orgDomain()).update();\n            }\n            // setup drawer - MEMO: this must be called after axis updated\n            drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n            drawBarOnSub = $$.generateDrawBar(barIndices, true);\n            drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n            $$.updateBarForSubchart(duration);\n            $$.updateLineForSubchart(duration);\n            $$.updateAreaForSubchart(duration);\n\n            $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n            $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n            $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n        }\n    }\n};\nc3_chart_internal_fn.redrawForBrush = function () {\n    var $$ = this,\n        x = $$.x;\n    $$.redraw({\n        withTransition: false,\n        withY: $$.config.zoom_rescale,\n        withSubchart: false,\n        withUpdateXDomain: true,\n        withDimension: false\n    });\n    $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n};\nc3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n    var $$ = this,\n        subXAxis;\n    if (transitions && transitions.axisSubX) {\n        subXAxis = transitions.axisSubX;\n    } else {\n        subXAxis = $$.context.select('.' + CLASS.axisX);\n        if (withTransition) {\n            subXAxis = subXAxis.transition();\n        }\n    }\n    $$.context.attr(\"transform\", $$.getTranslate('context'));\n    subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n};\nc3_chart_internal_fn.getDefaultExtent = function () {\n    var $$ = this,\n        config = $$.config,\n        extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n    if ($$.isTimeSeries()) {\n        extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n    }\n    return extent;\n};\n\nc3_chart_internal_fn.initText = function () {\n    var $$ = this;\n    $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartTexts);\n    $$.mainText = $$.d3.selectAll([]);\n};\nc3_chart_internal_fn.updateTargetsForText = function (targets) {\n    var $$ = this,\n        mainTextUpdate,\n        mainTextEnter,\n        classChartText = $$.classChartText.bind($$),\n        classTexts = $$.classTexts.bind($$),\n        classFocus = $$.classFocus.bind($$);\n    mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets).attr('class', function (d) {\n        return classChartText(d) + classFocus(d);\n    });\n    mainTextEnter = mainTextUpdate.enter().append('g').attr('class', classChartText).style('opacity', 0).style(\"pointer-events\", \"none\");\n    mainTextEnter.append('g').attr('class', classTexts);\n};\nc3_chart_internal_fn.updateText = function (durationForExit) {\n    var $$ = this,\n        config = $$.config,\n        barOrLineData = $$.barOrLineData.bind($$),\n        classText = $$.classText.bind($$);\n    $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);\n    $$.mainText.enter().append('text').attr(\"class\", classText).attr('text-anchor', function (d) {\n        return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';\n    }).style(\"stroke\", 'none').style(\"fill\", function (d) {\n        return $$.color(d);\n    }).style(\"fill-opacity\", 0);\n    $$.mainText.text(function (d, i, j) {\n        return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\n    });\n    $$.mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();\n};\nc3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n    return [(withTransition ? this.mainText.transition() : this.mainText).attr('x', xForText).attr('y', yForText).style(\"fill\", this.color).style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))];\n};\nc3_chart_internal_fn.getTextRect = function (text, cls, element) {\n    var dummy = this.d3.select('body').append('div').classed('c3', true),\n        svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n        font = this.d3.select(element).style('font'),\n        rect;\n    svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : \"\", true).style('font', font).text(text).each(function () {\n        rect = this.getBoundingClientRect();\n    });\n    dummy.remove();\n    return rect;\n};\nc3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n    var $$ = this,\n        getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n        getBarPoints = $$.generateGetBarPoints(barIndices, false),\n        getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n        getter = forX ? $$.getXForText : $$.getYForText;\n    return function (d, i) {\n        var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n        return getter.call($$, getPoints(d, i), d, this);\n    };\n};\nc3_chart_internal_fn.getXForText = function (points, d, textElement) {\n    var $$ = this,\n        box = textElement.getBoundingClientRect(),\n        xPos,\n        padding;\n    if ($$.config.axis_rotated) {\n        padding = $$.isBarType(d) ? 4 : 6;\n        xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n    } else {\n        xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n    }\n    // show labels regardless of the domain if value is null\n    if (d.value === null) {\n        if (xPos > $$.width) {\n            xPos = $$.width - box.width;\n        } else if (xPos < 0) {\n            xPos = 4;\n        }\n    }\n    return xPos;\n};\nc3_chart_internal_fn.getYForText = function (points, d, textElement) {\n    var $$ = this,\n        box = textElement.getBoundingClientRect(),\n        yPos;\n    if ($$.config.axis_rotated) {\n        yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n    } else {\n        yPos = points[2][1];\n        if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {\n            yPos += box.height;\n            if ($$.isBarType(d) && $$.isSafari()) {\n                yPos -= 3;\n            } else if (!$$.isBarType(d) && $$.isChrome()) {\n                yPos += 3;\n            }\n        } else {\n            yPos += $$.isBarType(d) ? -3 : -6;\n        }\n    }\n    // show labels regardless of the domain if value is null\n    if (d.value === null && !$$.config.axis_rotated) {\n        if (yPos < box.height) {\n            yPos = box.height;\n        } else if (yPos > this.height) {\n            yPos = this.height - 4;\n        }\n    }\n    return yPos;\n};\n\nc3_chart_internal_fn.initTitle = function () {\n    var $$ = this;\n    $$.title = $$.svg.append(\"text\").text($$.config.title_text).attr(\"class\", $$.CLASS.title);\n};\nc3_chart_internal_fn.redrawTitle = function () {\n    var $$ = this;\n    $$.title.attr(\"x\", $$.xForTitle.bind($$)).attr(\"y\", $$.yForTitle.bind($$));\n};\nc3_chart_internal_fn.xForTitle = function () {\n    var $$ = this,\n        config = $$.config,\n        position = config.title_position || 'left',\n        x;\n    if (position.indexOf('right') >= 0) {\n        x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n    } else if (position.indexOf('center') >= 0) {\n        x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n    } else {\n        // left\n        x = config.title_padding.left;\n    }\n    return x;\n};\nc3_chart_internal_fn.yForTitle = function () {\n    var $$ = this;\n    return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n};\nc3_chart_internal_fn.getTitlePadding = function () {\n    var $$ = this;\n    return $$.yForTitle() + $$.config.title_padding.bottom;\n};\n\nc3_chart_internal_fn.initTooltip = function () {\n    var $$ = this,\n        config = $$.config,\n        i;\n    $$.tooltip = $$.selectChart.style(\"position\", \"relative\").append(\"div\").attr('class', CLASS.tooltipContainer).style(\"position\", \"absolute\").style(\"pointer-events\", \"none\").style(\"display\", \"none\");\n    // Show tooltip if needed\n    if (config.tooltip_init_show) {\n        if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n            config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n            for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\n                    break;\n                }\n            }\n            config.tooltip_init_x = i;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n            return $$.addName(d.values[config.tooltip_init_x]);\n        }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n        $$.tooltip.style(\"top\", config.tooltip_init_position.top).style(\"left\", config.tooltip_init_position.left).style(\"display\", \"block\");\n    }\n};\nc3_chart_internal_fn.getTooltipSortFunction = function () {\n    var $$ = this,\n        config = $$.config;\n\n    if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\n        // if data are not grouped or if an order is specified\n        // for the tooltip values we sort them by their values\n\n        var order = config.tooltip_order;\n        if (order === undefined) {\n            order = config.data_order;\n        }\n\n        var valueOf = function valueOf(obj) {\n            return obj ? obj.value : null;\n        };\n\n        // if data are not grouped, we sort them by their value\n        if (isString(order) && order.toLowerCase() === 'asc') {\n            return function (a, b) {\n                return valueOf(a) - valueOf(b);\n            };\n        } else if (isString(order) && order.toLowerCase() === 'desc') {\n            return function (a, b) {\n                return valueOf(b) - valueOf(a);\n            };\n        } else if (isFunction(order)) {\n\n            // if the function is from data_order we need\n            // to wrap the returned function in order to format\n            // the sorted value to the expected format\n\n            var sortFunction = order;\n\n            if (config.tooltip_order === undefined) {\n                sortFunction = function sortFunction(a, b) {\n                    return order(a ? {\n                        id: a.id,\n                        values: [a]\n                    } : null, b ? {\n                        id: b.id,\n                        values: [b]\n                    } : null);\n                };\n            }\n\n            return sortFunction;\n        } else if (isArray(order)) {\n            return function (a, b) {\n                return order.indexOf(a.id) - order.indexOf(b.id);\n            };\n        }\n    } else {\n        // if data are grouped, we follow the order of grouped targets\n        var ids = $$.orderTargets($$.data.targets).map(function (i) {\n            return i.id;\n        });\n\n        // if it was either asc or desc we need to invert the order\n        // returned by orderTargets\n        if ($$.isOrderAsc() || $$.isOrderDesc()) {\n            ids = ids.reverse();\n        }\n\n        return function (a, b) {\n            return ids.indexOf(a.id) - ids.indexOf(b.id);\n        };\n    }\n};\nc3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n    var $$ = this,\n        config = $$.config,\n        titleFormat = config.tooltip_format_title || defaultTitleFormat,\n        nameFormat = config.tooltip_format_name || function (name) {\n        return name;\n    },\n        valueFormat = config.tooltip_format_value || defaultValueFormat,\n        text,\n        i,\n        title,\n        value,\n        name,\n        bgcolor;\n\n    var tooltipSortFunction = this.getTooltipSortFunction();\n    if (tooltipSortFunction) {\n        d.sort(tooltipSortFunction);\n    }\n\n    for (i = 0; i < d.length; i++) {\n        if (!(d[i] && (d[i].value || d[i].value === 0))) {\n            continue;\n        }\n\n        if (!text) {\n            title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n            text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n        }\n\n        value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n        if (value !== undefined) {\n            // Skip elements when their name is set to null\n            if (d[i].name === null) {\n                continue;\n            }\n            name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n            bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n            text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n            text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n            text += \"<td class='value'>\" + value + \"</td>\";\n            text += \"</tr>\";\n        }\n    }\n    return text + \"</table>\";\n};\nc3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3;\n    var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n    var forArc = $$.hasArcType(),\n        mouse = d3.mouse(element);\n    // Determin tooltip position\n    if (forArc) {\n        tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\n        tooltipTop = $$.height / 2 + mouse[1] + 20;\n    } else {\n        svgLeft = $$.getSvgLeft(true);\n        if (config.axis_rotated) {\n            tooltipLeft = svgLeft + mouse[0] + 100;\n            tooltipRight = tooltipLeft + tWidth;\n            chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n            tooltipTop = $$.x(dataToShow[0].x) + 20;\n        } else {\n            tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n            tooltipRight = tooltipLeft + tWidth;\n            chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n            tooltipTop = mouse[1] + 15;\n        }\n\n        if (tooltipRight > chartRight) {\n            // 20 is needed for Firefox to keep tooltip width\n            tooltipLeft -= tooltipRight - chartRight + 20;\n        }\n        if (tooltipTop + tHeight > $$.currentHeight) {\n            tooltipTop -= tHeight + 30;\n        }\n    }\n    if (tooltipTop < 0) {\n        tooltipTop = 0;\n    }\n    return { top: tooltipTop, left: tooltipLeft };\n};\nc3_chart_internal_fn.showTooltip = function (selectedData, element) {\n    var $$ = this,\n        config = $$.config;\n    var tWidth, tHeight, position;\n    var forArc = $$.hasArcType(),\n        dataToShow = selectedData.filter(function (d) {\n        return d && isValue(d.value);\n    }),\n        positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n    if (dataToShow.length === 0 || !config.tooltip_show) {\n        return;\n    }\n    $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n    // Get tooltip dimensions\n    tWidth = $$.tooltip.property('offsetWidth');\n    tHeight = $$.tooltip.property('offsetHeight');\n\n    position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n    // Set tooltip\n    $$.tooltip.style(\"top\", position.top + \"px\").style(\"left\", position.left + 'px');\n};\nc3_chart_internal_fn.hideTooltip = function () {\n    this.tooltip.style(\"display\", \"none\");\n};\n\nc3_chart_internal_fn.setTargetType = function (targetIds, type) {\n    var $$ = this,\n        config = $$.config;\n    $$.mapToTargetIds(targetIds).forEach(function (id) {\n        $$.withoutFadeIn[id] = type === config.data_types[id];\n        config.data_types[id] = type;\n    });\n    if (!targetIds) {\n        config.data_type = type;\n    }\n};\nc3_chart_internal_fn.hasType = function (type, targets) {\n    var $$ = this,\n        types = $$.config.data_types,\n        has = false;\n    targets = targets || $$.data.targets;\n    if (targets && targets.length) {\n        targets.forEach(function (target) {\n            var t = types[target.id];\n            if (t && t.indexOf(type) >= 0 || !t && type === 'line') {\n                has = true;\n            }\n        });\n    } else if (Object.keys(types).length) {\n        Object.keys(types).forEach(function (id) {\n            if (types[id] === type) {\n                has = true;\n            }\n        });\n    } else {\n        has = $$.config.data_type === type;\n    }\n    return has;\n};\nc3_chart_internal_fn.hasArcType = function (targets) {\n    return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n};\nc3_chart_internal_fn.isLineType = function (d) {\n    var config = this.config,\n        id = isString(d) ? d : d.id;\n    return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n};\nc3_chart_internal_fn.isStepType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n};\nc3_chart_internal_fn.isSplineType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n};\nc3_chart_internal_fn.isAreaType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n};\nc3_chart_internal_fn.isBarType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'bar';\n};\nc3_chart_internal_fn.isScatterType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'scatter';\n};\nc3_chart_internal_fn.isPieType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'pie';\n};\nc3_chart_internal_fn.isGaugeType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'gauge';\n};\nc3_chart_internal_fn.isDonutType = function (d) {\n    var id = isString(d) ? d : d.id;\n    return this.config.data_types[id] === 'donut';\n};\nc3_chart_internal_fn.isArcType = function (d) {\n    return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n};\nc3_chart_internal_fn.lineData = function (d) {\n    return this.isLineType(d) ? [d] : [];\n};\nc3_chart_internal_fn.arcData = function (d) {\n    return this.isArcType(d.data) ? [d] : [];\n};\n/* not used\n function scatterData(d) {\n return isScatterType(d) ? d.values : [];\n }\n */\nc3_chart_internal_fn.barData = function (d) {\n    return this.isBarType(d) ? d.values : [];\n};\nc3_chart_internal_fn.lineOrScatterData = function (d) {\n    return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n};\nc3_chart_internal_fn.barOrLineData = function (d) {\n    return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n};\nc3_chart_internal_fn.isInterpolationType = function (type) {\n    return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n};\n\nc3_chart_internal_fn.isSafari = function () {\n    var ua = window.navigator.userAgent;\n    return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n};\nc3_chart_internal_fn.isChrome = function () {\n    var ua = window.navigator.userAgent;\n    return ua.indexOf('Chrome') >= 0;\n};\n\nc3_chart_internal_fn.initZoom = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        startEvent;\n\n    $$.zoom = d3.behavior.zoom().on(\"zoomstart\", function () {\n        startEvent = d3.event.sourceEvent;\n        $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n        config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n    }).on(\"zoom\", function () {\n        $$.redrawForZoom.call($$);\n    }).on('zoomend', function () {\n        var event = d3.event.sourceEvent;\n        // if click, do nothing. otherwise, click interaction will be canceled.\n        if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n            return;\n        }\n        $$.redrawEventRect();\n        $$.updateZoom();\n        config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n    });\n    $$.zoom.scale = function (scale) {\n        return config.axis_rotated ? this.y(scale) : this.x(scale);\n    };\n    $$.zoom.orgScaleExtent = function () {\n        var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n        return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n    };\n    $$.zoom.updateScaleExtent = function () {\n        var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n            extent = this.orgScaleExtent();\n        this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n        return this;\n    };\n};\nc3_chart_internal_fn.getZoomDomain = function () {\n    var $$ = this,\n        config = $$.config,\n        d3 = $$.d3,\n        min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n        max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n    return [min, max];\n};\nc3_chart_internal_fn.updateZoom = function () {\n    var $$ = this,\n        z = $$.config.zoom_enabled ? $$.zoom : function () {};\n    $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n    $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n};\nc3_chart_internal_fn.redrawForZoom = function () {\n    var $$ = this,\n        d3 = $$.d3,\n        config = $$.config,\n        zoom = $$.zoom,\n        x = $$.x;\n    if (!config.zoom_enabled) {\n        return;\n    }\n    if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n        return;\n    }\n    if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n        x.domain(zoom.altDomain);\n        zoom.scale(x).updateScaleExtent();\n        return;\n    }\n    if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n        x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n    }\n    $$.redraw({\n        withTransition: false,\n        withY: config.zoom_rescale,\n        withSubchart: false,\n        withEventRect: false,\n        withDimension: false\n    });\n    if (d3.event.sourceEvent.type === 'mousemove') {\n        $$.cancelClick = true;\n    }\n    config.zoom_onzoom.call($$.api, x.orgDomain());\n};\n\nreturn c3$1;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/c3/c3.js\n// module id = 8\n// module chunks = 0","exports = module.exports = require(\"../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".c3 svg{font:10px sans-serif;-webkit-tap-highlight-color:transparent}.c3 line,.c3 path{fill:none;stroke:#000}.c3 text{-webkit-user-select:none;-moz-user-select:none;user-select:none}.c3-bars path,.c3-event-rect,.c3-legend-item-tile,.c3-xgrid-focus,.c3-ygrid{shape-rendering:crispEdges}.c3-chart-arc path{stroke:#fff}.c3-chart-arc text{fill:#fff;font-size:13px}.c3-grid line{stroke:#aaa}.c3-grid text{fill:#aaa}.c3-xgrid,.c3-ygrid{stroke-dasharray:3 3}.c3-text.c3-empty{fill:grey;font-size:2em}.c3-line{stroke-width:1px}.c3-circle._expanded_{stroke-width:1px;stroke:#fff}.c3-selected-circle{fill:#fff;stroke-width:2px}.c3-bar{stroke-width:0}.c3-bar._expanded_{fill-opacity:1;fill-opacity:.75}.c3-target.c3-focused{opacity:1}.c3-target.c3-focused path.c3-line,.c3-target.c3-focused path.c3-step{stroke-width:2px}.c3-target.c3-defocused{opacity:.3!important}.c3-region{fill:#4682b4;fill-opacity:.1}.c3-brush .extent{fill-opacity:.1}.c3-legend-item{font-size:12px}.c3-legend-item-hidden{opacity:.15}.c3-legend-background{opacity:.75;fill:#fff;stroke:#d3d3d3;stroke-width:1}.c3-title{font:14px sans-serif}.c3-tooltip-container{z-index:10}.c3-tooltip{border-collapse:collapse;border-spacing:0;background-color:#fff;empty-cells:show;box-shadow:7px 7px 12px -9px #777;opacity:.9}.c3-tooltip tr{border:1px solid #ccc}.c3-tooltip th{background-color:#aaa;font-size:14px;padding:2px 5px;text-align:left;color:#fff}.c3-tooltip td{font-size:13px;padding:3px 6px;background-color:#fff;border-left:1px dotted #999}.c3-tooltip td>span{display:inline-block;width:10px;height:10px;margin-right:6px}.c3-tooltip td.value{text-align:right}.c3-area{stroke-width:0;opacity:.2}.c3-chart-arcs-title{dominant-baseline:middle;font-size:1.3em}.c3-chart-arcs .c3-chart-arcs-background{fill:#e0e0e0;stroke:none}.c3-chart-arcs .c3-chart-arcs-gauge-unit{fill:#000;font-size:16px}.c3-chart-arcs .c3-chart-arcs-gauge-max,.c3-chart-arcs .c3-chart-arcs-gauge-min{fill:#777}.c3-chart-arc .c3-gauge-value{fill:#000}.c3-chart-arc.c3-target.c3-focused g path,.c3-chart-arc.c3-target g path{opacity:1}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?minimize!./~/c3/c3.min.css\n// module id = 9\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\nexports.i(require(\"-!../../node_modules/css-loader/index.js?minimize!./../../node_modules/c3/c3.min.css\"), \"\");\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?minimize!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-62011295\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/VueC3Chart.vue\n// module id = 10\n// module chunks = 0","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 11\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 12\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', [_c('div', [_vm._t(\"default\")], 2), _vm._v(\" \"), _c('div', {\n    attrs: {\n      \"id\": _vm.bindTo\n    }\n  })])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-62011295\",\"hasScoped\":false}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/VueC3Chart.vue\n// module id = 13\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?minimize!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-62011295\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./VueC3Chart.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-loader/node_modules/vue-style-loader/lib/addStylesClient.js\")(\"e5307864\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/~/vue-style-loader!./~/css-loader?minimize!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-62011295\",\"scoped\":false,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/VueC3Chart.vue\n// module id = 14\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/~/vue-style-loader/lib/addStylesClient.js\n// module id = 15\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/~/vue-style-loader/lib/listToStyles.js\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}